{"ast":null,"code":"var _jsxFileName = \"/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const baseUrl = process.env.NODE_ENV === 'production' ? window.location.origin : 'https://smtdatabase01-production.up.railway.app';\n\n  // Check if user is already logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      // Verify token and get user info\n      fetchCurrentUser(token);\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  const fetchCurrentUser = async token => {\n    try {\n      const response = await fetch(`${baseUrl}/api/auth/me`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      } else {\n        // Token is invalid, remove it\n        console.log('Token expired, removing from localStorage');\n        localStorage.removeItem('auth_token');\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      localStorage.removeItem('auth_token');\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${baseUrl}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('auth_token', data.token);\n        setUser(data.user);\n        return true;\n      } else {\n        const errorData = await response.json();\n        console.error('Login failed:', errorData.error);\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('auth_token');\n    setUser(null);\n  };\n  const hasRole = roles => {\n    if (!user) return false;\n    const roleArray = Array.isArray(roles) ? roles : [roles];\n    return roleArray.includes(user.role);\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    isLoading,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","baseUrl","process","env","NODE_ENV","window","location","origin","token","localStorage","getItem","fetchCurrentUser","response","fetch","headers","ok","data","json","console","log","removeItem","error","login","username","password","method","body","JSON","stringify","setItem","errorData","logout","hasRole","roles","roleArray","Array","isArray","includes","role","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  role: 'admin' | 'scheduler' | 'supervisor' | 'floor_view' | 'viewer';\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (username: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  hasRole: (roles: string | string[]) => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n      const baseUrl = process.env.NODE_ENV === 'production' \n      ? window.location.origin \n      : 'https://smtdatabase01-production.up.railway.app';\n\n  // Check if user is already logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      // Verify token and get user info\n      fetchCurrentUser(token);\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const fetchCurrentUser = async (token: string) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/auth/me`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      } else {\n        // Token is invalid, remove it\n        console.log('Token expired, removing from localStorage');\n        localStorage.removeItem('auth_token');\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      localStorage.removeItem('auth_token');\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${baseUrl}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('auth_token', data.token);\n        setUser(data.user);\n        return true;\n      } else {\n        const errorData = await response.json();\n        console.error('Login failed:', errorData.error);\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('auth_token');\n    setUser(null);\n  };\n\n  const hasRole = (roles: string | string[]): boolean => {\n    if (!user) return false;\n    \n    const roleArray = Array.isArray(roles) ? roles : [roles];\n    return roleArray.includes(user.role);\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    isLoading,\n    hasRole,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}