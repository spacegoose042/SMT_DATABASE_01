{"ast":null,"code":"import React,{useState}from'react';import{Routes,Route}from'react-router-dom';import{AuthProvider}from'./contexts/AuthContext.tsx';import{SocketProvider}from'./contexts/SocketContext.tsx';import ProtectedRoute from'./components/ProtectedRoute.tsx';import Login from'./components/Login.tsx';import Sidebar from'./components/Sidebar.tsx';import Header from'./components/Header.tsx';import Dashboard from'./pages/Dashboard.tsx';import WorkOrders from'./pages/WorkOrders.tsx';import ProductionLines from'./pages/ProductionLines.tsx';import Schedule from'./pages/Schedule.tsx';import TimelineView from'./pages/TimelineView.tsx';import FloorDisplay from'./pages/FloorDisplay.tsx';import FloorDisplaySelect from'./pages/FloorDisplaySelect.tsx';import ScanPage from'./pages/ScanPage.tsx';import Customers from'./pages/Customers.tsx';import Reports from'./pages/Reports.tsx';import Settings from'./pages/Settings.tsx';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[sidebarOpen,setSidebarOpen]=useState(false);return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(SocketProvider,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/scan\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ScanPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex overflow-hidden bg-sy-black-50\",children:[/*#__PURE__*/_jsx(Sidebar,{open:sidebarOpen,setOpen:setSidebarOpen}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsx(Header,{onMenuClick:()=>setSidebarOpen(true)}),/*#__PURE__*/_jsx(\"main\",{className:\"flex-1 overflow-y-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"py-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 md:px-8\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Dashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/work-orders\",element:/*#__PURE__*/_jsx(ProtectedRoute,{requiredRoles:['admin','scheduler','supervisor'],children:/*#__PURE__*/_jsx(WorkOrders,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/production-lines\",element:/*#__PURE__*/_jsx(ProductionLines,{})}),/*#__PURE__*/_jsx(Route,{path:\"/schedule\",element:/*#__PURE__*/_jsx(ProtectedRoute,{requiredRoles:['admin','scheduler','supervisor'],children:/*#__PURE__*/_jsx(Schedule,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/timeline\",element:/*#__PURE__*/_jsx(TimelineView,{})}),/*#__PURE__*/_jsx(Route,{path:\"/floor-display-select\",element:/*#__PURE__*/_jsx(FloorDisplaySelect,{})}),/*#__PURE__*/_jsx(Route,{path:\"/floor/:lineId\",element:/*#__PURE__*/_jsx(FloorDisplay,{})}),/*#__PURE__*/_jsx(Route,{path:\"/customers\",element:/*#__PURE__*/_jsx(ProtectedRoute,{requiredRoles:['admin','scheduler'],children:/*#__PURE__*/_jsx(Customers,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/reports\",element:/*#__PURE__*/_jsx(Reports,{})}),/*#__PURE__*/_jsx(Route,{path:\"/settings\",element:/*#__PURE__*/_jsx(ProtectedRoute,{requiredRoles:['admin'],children:/*#__PURE__*/_jsx(Settings,{})})})]})})})})]})]})})})]})})});}export default App;","map":{"version":3,"names":["React","useState","Routes","Route","AuthProvider","SocketProvider","ProtectedRoute","Login","Sidebar","Header","Dashboard","WorkOrders","ProductionLines","Schedule","TimelineView","FloorDisplay","FloorDisplaySelect","ScanPage","Customers","Reports","Settings","jsx","_jsx","jsxs","_jsxs","App","sidebarOpen","setSidebarOpen","children","path","element","className","open","setOpen","onMenuClick","requiredRoles"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { AuthProvider } from './contexts/AuthContext.tsx';\nimport { SocketProvider } from './contexts/SocketContext.tsx';\nimport ProtectedRoute from './components/ProtectedRoute.tsx';\nimport Login from './components/Login.tsx';\nimport Sidebar from './components/Sidebar.tsx';\nimport Header from './components/Header.tsx';\nimport Dashboard from './pages/Dashboard.tsx';\nimport WorkOrders from './pages/WorkOrders.tsx';\nimport ProductionLines from './pages/ProductionLines.tsx';\nimport Schedule from './pages/Schedule.tsx';\nimport TimelineView from './pages/TimelineView.tsx';\nimport FloorDisplay from './pages/FloorDisplay.tsx';\nimport FloorDisplaySelect from './pages/FloorDisplaySelect.tsx';\nimport ScanPage from './pages/ScanPage.tsx';\nimport Customers from './pages/Customers.tsx';\nimport Reports from './pages/Reports.tsx';\nimport Settings from './pages/Settings.tsx';\n\nfunction App() {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  return (\n    <AuthProvider>\n      <SocketProvider>\n        <Routes>\n          {/* Public route */}\n          <Route path=\"/login\" element={<Login />} />\n          \n          {/* Mobile QR Scanner - Protected but outside main layout */}\n          <Route path=\"/scan\" element={\n            <ProtectedRoute>\n              <ScanPage />\n            </ProtectedRoute>\n          } />\n          \n          {/* Protected routes */}\n          <Route path=\"/*\" element={\n            <ProtectedRoute>\n              <div className=\"h-screen flex overflow-hidden bg-sy-black-50\">\n                {/* Sidebar */}\n                <Sidebar open={sidebarOpen} setOpen={setSidebarOpen} />\n                \n                {/* Main content */}\n                <div className=\"flex-1 flex flex-col overflow-hidden\">\n                  {/* Header */}\n                  <Header onMenuClick={() => setSidebarOpen(true)} />\n                  \n                  {/* Main content area */}\n                  <main className=\"flex-1 overflow-y-auto\">\n                    <div className=\"py-6\">\n                      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 md:px-8\">\n                        <Routes>\n                          <Route path=\"/\" element={<Dashboard />} />\n                          \n                          {/* Work Orders - Scheduler+ access */}\n                          <Route path=\"/work-orders\" element={\n                            <ProtectedRoute requiredRoles={['admin', 'scheduler', 'supervisor']}>\n                              <WorkOrders />\n                            </ProtectedRoute>\n                          } />\n                          \n                          {/* Production Lines - All authenticated users */}\n                          <Route path=\"/production-lines\" element={<ProductionLines />} />\n                          \n                          {/* Schedule - Scheduler+ access */}\n                          <Route path=\"/schedule\" element={\n                            <ProtectedRoute requiredRoles={['admin', 'scheduler', 'supervisor']}>\n                              <Schedule />\n                            </ProtectedRoute>\n                          } />\n                          \n                          {/* Timeline - All authenticated users */}\n                          <Route path=\"/timeline\" element={<TimelineView />} />\n                          \n                          {/* Floor Display Selection - All authenticated users */}\n                          <Route path=\"/floor-display-select\" element={<FloorDisplaySelect />} />\n                          \n                          {/* Floor Display - Public access for floor monitors */}\n                          <Route path=\"/floor/:lineId\" element={<FloorDisplay />} />\n                          \n                          {/* Customers - Admin/Scheduler access */}\n                          <Route path=\"/customers\" element={\n                            <ProtectedRoute requiredRoles={['admin', 'scheduler']}>\n                              <Customers />\n                            </ProtectedRoute>\n                          } />\n                          \n                          {/* Reports - All authenticated users */}\n                          <Route path=\"/reports\" element={<Reports />} />\n                          \n                          {/* Settings - Admin only */}\n                          <Route path=\"/settings\" element={\n                            <ProtectedRoute requiredRoles={['admin']}>\n                              <Settings />\n                            </ProtectedRoute>\n                          } />\n                        </Routes>\n                      </div>\n                    </div>\n                  </main>\n                </div>\n              </div>\n            </ProtectedRoute>\n          } />\n        </Routes>\n      </SocketProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}