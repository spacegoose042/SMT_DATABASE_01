{"ast":null,"code":"var _jsxFileName = \"/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/Schedule.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CalendarIcon, CogIcon, ArrowPathIcon, ExclamationTriangleIcon, CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext.tsx';\nimport { useSocket } from '../contexts/SocketContext.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    onWorkOrderUpdate\n  } = useSocket();\n\n  // State management\n  const [workOrders, setWorkOrders] = useState([]);\n  const [productionLines, setProductionLines] = useState([]);\n  const [scheduleConfig, setScheduleConfig] = useState({\n    hours_per_day: 8,\n    days_per_week: 5,\n    efficiency_factor: 1.0\n  });\n\n  // UI State\n  const [selectedLine, setSelectedLine] = useState('all');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [viewMode, setViewMode] = useState('timeline');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [draggedWorkOrder, setDraggedWorkOrder] = useState(null);\n  const [showConfigModal, setShowConfigModal] = useState(false);\n  const [showLineConfigModal, setShowLineConfigModal] = useState(false);\n  const [selectedLineForConfig, setSelectedLineForConfig] = useState(null);\n  const [editingLineConfig, setEditingLineConfig] = useState(null);\n  const [autoScheduleRunning, setAutoScheduleRunning] = useState(false);\n\n  // API base URL - use production for local development since local database isn't set up\n  const baseUrl = process.env.NODE_ENV === 'production' ? window.location.origin : 'https://smtdatabase01-production.up.railway.app';\n\n  // Fetch work orders\n  const fetchWorkOrders = useCallback(async () => {\n    try {\n      var _data$work_orders;\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/schedule/timeline`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch work orders');\n      const data = await response.json();\n      console.log('📥 API Response - Total work orders:', ((_data$work_orders = data.work_orders) === null || _data$work_orders === void 0 ? void 0 : _data$work_orders.length) || 0);\n\n      // Debug: Check scheduled work orders in API response\n      const scheduledInResponse = (data.work_orders || []).filter(wo => wo.scheduled_start_time);\n      console.log('📅 Work orders with scheduled_start_time in API response:', scheduledInResponse.length);\n      if (scheduledInResponse.length > 0) {\n        console.log('📋 First few scheduled work orders from API:', scheduledInResponse.slice(0, 3).map(wo => ({\n          number: wo.work_order_number,\n          start: wo.scheduled_start_time,\n          end: wo.scheduled_end_time,\n          line: wo.line_name\n        })));\n      }\n      setWorkOrders(data.work_orders || []);\n    } catch (err) {\n      console.error('Error fetching work orders:', err);\n      setError('Failed to load work orders');\n    }\n  }, [baseUrl]);\n\n  // Fetch production lines\n  const fetchProductionLines = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/production-lines`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch production lines');\n      const data = await response.json();\n      setProductionLines(data.production_lines || []);\n    } catch (err) {\n      console.error('Error fetching production lines:', err);\n      setError('Failed to load production lines');\n    }\n  }, [baseUrl]);\n\n  // Update work order schedule\n  const updateWorkOrderSchedule = useCallback(async (workOrderId, scheduleData) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/schedule/work-orders/${workOrderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(scheduleData)\n      });\n      if (!response.ok) throw new Error('Failed to update schedule');\n      return await response.json();\n    } catch (err) {\n      console.error('Error updating schedule:', err);\n      throw err;\n    }\n  }, [baseUrl]);\n\n  // Enhanced auto-schedule algorithm\n  const runAutoSchedule = useCallback(async () => {\n    if (!user || !['admin', 'scheduler'].includes(user.role)) {\n      setError('Insufficient permissions for auto-scheduling');\n      return;\n    }\n    setAutoScheduleRunning(true);\n    try {\n      console.log('🚀 Starting auto-schedule...');\n      console.log('👤 User role:', user.role);\n      console.log('🌐 Base URL:', baseUrl);\n      console.log('🔑 Auth token exists:', !!localStorage.getItem('auth_token'));\n      // Get locked work orders (first 2 on each line) that should not be moved\n      const lockedWorkOrders = new Set();\n\n      // Group scheduled work orders by line and find first 2 on each line\n      const workOrdersByLine = workOrders.filter(wo => wo.scheduled_start_time && wo.line_name).sort((a, b) => new Date(a.scheduled_start_time).getTime() - new Date(b.scheduled_start_time).getTime()).reduce((acc, wo) => {\n        if (!acc[wo.line_name]) acc[wo.line_name] = [];\n        acc[wo.line_name].push(wo);\n        return acc;\n      }, {});\n\n      // Mark first 2 work orders on each line as locked\n      Object.values(workOrdersByLine).forEach(lineWorkOrders => {\n        lineWorkOrders.slice(0, 2).forEach(wo => {\n          lockedWorkOrders.add(wo.id);\n        });\n      });\n      console.log(`🔒 Locked ${lockedWorkOrders.size} work orders (first 2 on each line)`);\n\n      // Get available work orders (not completed, cancelled, or locked)\n      const availableWorkOrders = workOrders.filter(wo => wo.status !== 'Completed' && wo.status !== 'Cancelled' && (!wo.scheduled_start_time || !lockedWorkOrders.has(wo.id)) // Include unlocked scheduled orders\n      // Note: clear_to_build filtering removed for now since column doesn't exist in DB\n      );\n\n      // Debug logging\n      console.log('Total work orders:', workOrders.length);\n      console.log('Available work orders:', availableWorkOrders.length);\n      console.log('Work order statuses:', [...new Set(workOrders.map(wo => wo.status))]);\n      console.log('Scheduled work orders:', workOrders.filter(wo => wo.scheduled_start_time).length);\n      console.log('Clear to build statuses:', [...new Set(workOrders.map(wo => wo.clear_to_build))]);\n\n      // Get available production lines (exclude Hand Placement and disabled lines)\n      const availableLines = productionLines.filter(line => line.status !== 'maintenance' && line.status !== 'down' && !line.line_name.toLowerCase().includes('hand') && line.auto_schedule_enabled !== false);\n\n      // Debug logging for production lines\n      console.log('Total production lines:', productionLines.length);\n      console.log('Available production lines:', availableLines.length);\n      console.log('Line statuses:', [...new Set(productionLines.map(line => line.status))]);\n      console.log('Line names:', productionLines.map(line => line.line_name));\n      if (availableWorkOrders.length === 0) {\n        const totalWorkOrders = workOrders.length;\n        const completedWorkOrders = workOrders.filter(wo => wo.status === 'Completed').length;\n        const cancelledWorkOrders = workOrders.filter(wo => wo.status === 'Cancelled').length;\n        const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time).length;\n        setError(`No work orders available for scheduling. Total: ${totalWorkOrders}, Completed: ${completedWorkOrders}, Cancelled: ${cancelledWorkOrders}, Already Scheduled: ${scheduledWorkOrders}`);\n        return;\n      }\n      if (availableLines.length === 0) {\n        const totalLines = productionLines.length;\n        const maintenanceLines = productionLines.filter(line => line.status === 'maintenance').length;\n        const downLines = productionLines.filter(line => line.status === 'down').length;\n        const handPlacementLines = productionLines.filter(line => line.line_name.toLowerCase().includes('hand')).length;\n        const disabledLines = productionLines.filter(line => line.auto_schedule_enabled === false).length;\n        setError(`No production lines available for scheduling. Total: ${totalLines}, Maintenance: ${maintenanceLines}, Down: ${downLines}, Hand Placement: ${handPlacementLines}, Auto-schedule Disabled: ${disabledLines}`);\n        return;\n      }\n\n      // Enhanced priority scoring system focused on due date adherence\n      const calculateWorkOrderPriority = wo => {\n        let priority = 0;\n\n        // Ship date priority - primary factor (finish as close to due date as possible)\n        if (wo.ship_date) {\n          const daysUntilShip = Math.ceil((new Date(wo.ship_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          if (daysUntilShip <= 0) {\n            // Past due - HIGHEST priority\n            priority += 1000 + Math.abs(daysUntilShip);\n          } else if (daysUntilShip <= 21) {\n            // Due within 3 weeks - high priority, closer to due date = higher priority\n            priority += 500 + (21 - daysUntilShip) * 20;\n          } else {\n            // Due further out - lower priority\n            priority += Math.max(0, 100 - daysUntilShip);\n          }\n        } else {\n          // No ship date - medium priority\n          priority += 200;\n        }\n\n        // Kit date priority (secondary factor)\n        if (wo.kit_date) {\n          const daysUntilKit = Math.ceil((new Date(wo.kit_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          if (daysUntilKit <= 7) {\n            priority += Math.max(0, 7 - daysUntilKit) * 5;\n          }\n        }\n\n        // Status priority (ready work orders should be scheduled)\n        const statusPriority = {\n          'Ready': 50,\n          'Ready*': 50,\n          '1st Side Ready': 45,\n          'In Progress': 40,\n          'Pending': 20,\n          'On Hold': 5\n        };\n        priority += statusPriority[wo.status] || 0;\n        return priority;\n      };\n\n      // Sort work orders by enhanced priority\n      const prioritizedWorkOrders = [...availableWorkOrders].sort((a, b) => {\n        const priorityA = calculateWorkOrderPriority(a);\n        const priorityB = calculateWorkOrderPriority(b);\n        return priorityB - priorityA; // Higher priority first\n      });\n\n      // Line scoring system\n      const calculateLineScore = (line, workOrder) => {\n        let score = 0;\n\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n        // Daily capacity preference (prefer lines with higher daily capacity)\n        const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n        score += dailyCapacity * 2; // Directly reward higher daily capacity\n\n        // Available capacity bonus (remaining capacity for more work)\n        score += (line.available_capacity || 0) * 3;\n\n        // Efficiency score (prefer more efficient lines)\n        score += (line.efficiency_target || 85) / 10;\n\n        // Time multiplier preference (prefer lines with lower multipliers for faster processing)\n        score += 1 / (line.time_multiplier || 1.0) * 10;\n\n        // Line type preference (prefer SMT over other types)\n        if (line.line_type === 'SMT') {\n          score += 15;\n        }\n\n        // Current utilization (prefer less busy lines)\n        score += (1 - (line.current_utilization || 0) / 100) * 10;\n        return score;\n      };\n\n      // Track scheduled work orders for conflict detection\n      const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time);\n\n      // Schedule work orders\n      for (const workOrder of prioritizedWorkOrders) {\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n        // Find best line for this work order\n        let bestLine = null;\n        let bestScore = -1;\n        let bestStartTime = null;\n        for (const line of availableLines) {\n          console.log(`🔍 Checking line ${line.line_name}:`);\n\n          // Calculate daily capacity for this line\n          const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n          console.log(`  Daily capacity: ${dailyCapacity} hours/day`);\n          console.log(`  Required duration: ${totalDurationHours} hours total`);\n\n          // Calculate how many days this work order will need\n          const daysRequired = Math.ceil(totalDurationHours / dailyCapacity);\n          console.log(`  Days required: ${daysRequired} days`);\n\n          // Special logging for long work orders\n          if (totalDurationHours > 50) {\n            console.log(`🚨 LONG WORK ORDER: ${workOrder.work_order_number} needs ${totalDurationHours}h (${daysRequired} days)`);\n            console.log(`  Line: ${line.line_name} (${dailyCapacity}h/day)`);\n            console.log(`  Due date: ${workOrder.ship_date}`);\n          }\n\n          // Check if work order can fit within daily capacity (even if it spans multiple days)\n          if (dailyCapacity === 0) {\n            console.log(`  ❌ No daily capacity configured`);\n            continue;\n          }\n\n          // Calculate line score\n          const lineScore = calculateLineScore(line, workOrder);\n          console.log(`  📊 Line score: ${lineScore}`);\n          console.log(`  📋 Line details: capacity=${line.available_capacity}, shifts=${line.shifts_per_day}, hours=${line.hours_per_shift}, multiplier=${line.time_multiplier}`);\n\n          // Find best available multi-day slot on this line (considering due dates)\n          const availableSlot = findBestMultiDaySlot(line, workOrder, scheduledWorkOrders, selectedDate, daysRequired);\n          console.log(`  ⏰ Available slot: ${availableSlot ? availableSlot.toISOString() : 'None'}`);\n          if (availableSlot) {\n            // Calculate completion time score (earlier start = higher score)\n            const now = new Date();\n            const daysFromNow = Math.ceil((availableSlot.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));\n            const timeScore = Math.max(0, 100 - daysFromNow); // 100 points for immediate start, decreases by 1 per day\n\n            // Combined score: line quality + timing\n            const totalScore = lineScore + timeScore;\n            console.log(`  ⏰ Days from now: ${daysFromNow}, Time score: ${timeScore}, Total score: ${totalScore}`);\n            if (totalScore > bestScore) {\n              console.log(`  ✅ New best line! (was ${bestScore}, now ${totalScore})`);\n              bestLine = line;\n              bestScore = totalScore;\n              bestStartTime = availableSlot;\n            }\n          }\n        }\n        if (bestLine && bestStartTime) {\n          // Calculate end time for multi-day scheduling\n          const adjustedDuration = totalDurationHours * (bestLine.time_multiplier || 1.0);\n          const dailyCapacity = (bestLine.shifts_per_day || 1) * (bestLine.hours_per_shift || 8);\n          const daysRequired = Math.ceil(adjustedDuration / dailyCapacity);\n\n          // Calculate actual end time considering daily work hours\n          const endTime = new Date(bestStartTime);\n          const workingHoursPerDay = bestLine.hours_per_shift || 8;\n          if (daysRequired === 1) {\n            // Single day: just add the duration\n            endTime.setHours(endTime.getHours() + adjustedDuration);\n          } else {\n            // Multi-day: calculate based on working days and daily capacity\n            let remainingHours = adjustedDuration;\n            let currentDay = new Date(bestStartTime);\n            while (remainingHours > 0) {\n              const hoursThisDay = Math.min(remainingHours, workingHoursPerDay);\n              remainingHours -= hoursThisDay;\n              if (remainingHours > 0) {\n                // Move to next working day\n                currentDay.setDate(currentDay.getDate() + 1);\n                // Skip weekends if line doesn't work weekends\n                while ((bestLine.days_per_week || 5) === 5 && (currentDay.getDay() === 0 || currentDay.getDay() === 6)) {\n                  currentDay.setDate(currentDay.getDate() + 1);\n                }\n              } else {\n                // Last day - calculate exact end time\n                const [startHour] = (bestLine.start_time || '08:00').split(':').map(Number);\n                currentDay.setHours(startHour + hoursThisDay);\n              }\n            }\n            endTime.setTime(currentDay.getTime());\n          }\n          console.log(`📅 Scheduling work order ${workOrder.work_order_number} on ${bestLine.line_name}`);\n          console.log(`⏰ Start: ${bestStartTime.toISOString()}, End: ${endTime.toISOString()}`);\n          console.log(`🆔 Work Order ID being sent to API: \"${workOrder.id}\" (type: ${typeof workOrder.id})`);\n\n          // Update work order with schedule\n          try {\n            await updateWorkOrderSchedule(workOrder.id, {\n              line_id: bestLine.id,\n              scheduled_start_time: bestStartTime.toISOString(),\n              scheduled_end_time: endTime.toISOString(),\n              line_position: 1\n            });\n            console.log(`✅ Successfully scheduled work order ${workOrder.work_order_number}`);\n          } catch (scheduleError) {\n            console.error(`❌ Failed to schedule work order ${workOrder.work_order_number}:`, scheduleError);\n            throw new Error(`Failed to schedule work order ${workOrder.work_order_number}: ${scheduleError.message}`);\n          }\n\n          // Add to scheduled work orders for conflict detection\n          scheduledWorkOrders.push({\n            ...workOrder,\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString()\n          });\n        }\n      }\n\n      // Refresh data\n      console.log('🔄 Refreshing work orders after auto-scheduling...');\n      await fetchWorkOrders();\n\n      // Debug: Check if work orders have scheduled times after refresh (use a ref to avoid stale closure)\n      setTimeout(() => {\n        const currentWorkOrders = workOrders; // This might be stale, let's remove this debug for now\n        console.log('🔄 Data refresh completed after auto-scheduling');\n      }, 100);\n      setSuccessMessage('Auto-schedule completed successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n      setError(null);\n    } catch (err) {\n      console.error('Auto-schedule error:', err);\n      setError('Auto-scheduling failed: ' + (err instanceof Error ? err.message : 'Unknown error'));\n    } finally {\n      setAutoScheduleRunning(false);\n    }\n  }, [productionLines, selectedDate, user, updateWorkOrderSchedule, fetchWorkOrders]);\n\n  // Helper function to find best available multi-day time slot considering due dates\n  const findBestMultiDaySlot = (line, workOrder, scheduledWorkOrders, targetDate, daysRequired) => {\n    const earliestSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, targetDate, daysRequired);\n    if (!earliestSlot || !workOrder.ship_date) {\n      return earliestSlot;\n    }\n\n    // Calculate work order duration for end date calculation\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const shipDate = new Date(workOrder.ship_date);\n    const earliestDaysFromStart = Math.ceil(adjustedDuration / dailyCapacity);\n\n    // Calculate earliest finish date\n    const earliestEndDate = new Date(earliestSlot);\n    let remainingDays = earliestDaysFromStart;\n    while (remainingDays > 0) {\n      earliestEndDate.setDate(earliestEndDate.getDate() + 1);\n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = earliestEndDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n      remainingDays--;\n    }\n\n    // If earliest finish is more than 3 weeks before due date, try to find a later slot\n    const threeWeeksBeforeDue = new Date(shipDate);\n    threeWeeksBeforeDue.setDate(threeWeeksBeforeDue.getDate() - 21);\n    if (earliestEndDate < threeWeeksBeforeDue) {\n      // Try to find a slot that finishes closer to the due date\n      const targetStartDate = new Date(threeWeeksBeforeDue);\n      targetStartDate.setDate(targetStartDate.getDate() - earliestDaysFromStart);\n      const laterSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, targetStartDate.toISOString().split('T')[0], daysRequired);\n      if (laterSlot) {\n        return laterSlot;\n      }\n    }\n    return earliestSlot;\n  };\n\n  // Helper function to find earliest available multi-day time slot\n  const findEarliestMultiDaySlot = (line, workOrder, scheduledWorkOrders, targetDate, daysRequired) => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate daily capacity and work order duration\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n    // Start checking from the target date\n    let checkDate = new Date(targetDate);\n    // Extended look-ahead for very long work orders that need more time\n    const adjustedDuration = (workOrder.setup_hours_estimated || 0) + (workOrder.production_time_hours_estimated || 0) + (workOrder.production_time_days_estimated || 0) * 8;\n    const lineDailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const estimatedDays = Math.ceil(adjustedDuration / Math.max(lineDailyCapacity, 1));\n\n    // Use longer look-ahead for work orders that need more than 30 days\n    const maxLookAhead = estimatedDays > 30 ? Math.min(90, estimatedDays + 30) : 45;\n    for (let dayOffset = 0; dayOffset < maxLookAhead; dayOffset++) {\n      const currentCheckDate = new Date(checkDate);\n      currentCheckDate.setDate(checkDate.getDate() + dayOffset);\n\n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = currentCheckDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n\n      // Check if we have consecutive available days starting from this date\n      let consecutiveDaysAvailable = true;\n      for (let dayIndex = 0; dayIndex < daysRequired; dayIndex++) {\n        const checkingDate = new Date(currentCheckDate);\n        checkingDate.setDate(currentCheckDate.getDate() + dayIndex);\n\n        // Skip weekends for additional days too\n        const checkingDayOfWeek = checkingDate.getDay();\n        if ((line.days_per_week || 5) === 5 && (checkingDayOfWeek === 0 || checkingDayOfWeek === 6)) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n\n        // Get existing schedules for this line on this specific date\n        const daySchedules = scheduledWorkOrders.filter(wo => wo.line_id === line.id && wo.scheduled_start_time && wo.scheduled_end_time && new Date(wo.scheduled_start_time).toDateString() === checkingDate.toDateString());\n\n        // Calculate how much capacity is used this day\n        const usedCapacity = daySchedules.reduce((total, wo) => {\n          const start = new Date(wo.scheduled_start_time);\n          const end = new Date(wo.scheduled_end_time);\n          const duration = (end.getTime() - start.getTime()) / (1000 * 60 * 60); // Convert to hours\n          return total + duration;\n        }, 0);\n\n        // Check if we have enough remaining capacity for this day's portion\n        const dailyHoursNeeded = Math.min(totalDurationHours - dayIndex * dailyCapacity, dailyCapacity);\n        if (usedCapacity + dailyHoursNeeded > dailyCapacity) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n      }\n      if (consecutiveDaysAvailable) {\n        // Found a valid starting date - return the start time\n        const startTime = new Date(currentCheckDate);\n        startTime.setHours(startHour, startMinute, 0, 0);\n        return startTime;\n      }\n    }\n    return null;\n  };\n\n  // Helper function to find earliest available time slot\n  const findEarliestAvailableSlot = (line, workOrder, scheduledWorkOrders, targetDate) => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate work order duration\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n\n    // Get existing schedules for this line on the target date\n    const lineSchedules = scheduledWorkOrders.filter(wo => wo.line_id === line.id && wo.scheduled_start_time && wo.scheduled_end_time && new Date(wo.scheduled_start_time).toDateString() === new Date(targetDate).toDateString()).sort((a, b) => new Date(a.scheduled_start_time).getTime() - new Date(b.scheduled_start_time).getTime());\n\n    // Start with line opening time\n    let currentTime = new Date(targetDate);\n    currentTime.setHours(startHour, startMinute, 0, 0);\n\n    // Check each potential time slot\n    while (currentTime.getHours() < endHour) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setHours(slotEndTime.getHours() + adjustedDuration);\n\n      // Check if slot extends beyond line closing time\n      if (slotEndTime.getHours() > endHour) {\n        // Move to next day\n        currentTime.setDate(currentTime.getDate() + 1);\n        currentTime.setHours(startHour, startMinute, 0, 0);\n        continue;\n      }\n\n      // Check for conflicts with existing schedules\n      const hasConflict = lineSchedules.some(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time);\n        const scheduleEnd = new Date(schedule.scheduled_end_time);\n        return currentTime >= scheduleStart && currentTime < scheduleEnd || slotEndTime > scheduleStart && slotEndTime <= scheduleEnd || currentTime <= scheduleStart && slotEndTime >= scheduleEnd;\n      });\n      if (!hasConflict) {\n        return currentTime;\n      }\n\n      // Move to next potential slot (after the conflicting schedule)\n      const nextConflict = lineSchedules.find(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time);\n        return scheduleStart >= currentTime;\n      });\n      if (nextConflict) {\n        currentTime = new Date(nextConflict.scheduled_end_time);\n      } else {\n        // No more conflicts, but check if we still have time today\n        if (currentTime.getHours() + adjustedDuration <= endHour) {\n          return currentTime;\n        } else {\n          // Move to next day\n          currentTime.setDate(currentTime.getDate() + 1);\n          currentTime.setHours(startHour, startMinute, 0, 0);\n        }\n      }\n    }\n    return null;\n  };\n\n  // Line configuration functions\n  const openLineConfig = line => {\n    setSelectedLineForConfig(line);\n    setEditingLineConfig({\n      hours_per_shift: line.hours_per_shift || 8,\n      shifts_per_day: line.shifts_per_day || 1,\n      days_per_week: line.days_per_week || 5,\n      time_multiplier: line.time_multiplier || 1.0,\n      start_time: line.start_time || '08:00',\n      end_time: line.end_time || '17:00',\n      lunch_break_duration: line.lunch_break_duration || 60,\n      lunch_break_start: line.lunch_break_start || '12:00',\n      break_duration: line.break_duration || 15,\n      auto_schedule_enabled: true,\n      maintenance_interval_days: 30,\n      efficiency_target: 85\n    });\n    setShowLineConfigModal(true);\n  };\n  const updateLineConfig = async (lineId, config) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      console.log('Updating line config for:', lineId, 'with config:', config);\n      const response = await fetch(`${baseUrl}/api/production-lines/${lineId}/config`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(config)\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Response error:', errorData);\n        throw new Error(`Failed to update line configuration: ${response.status} ${errorData}`);\n      }\n      const result = await response.json();\n      console.log('Update successful:', result);\n\n      // Refresh production lines data\n      await fetchProductionLines();\n      setShowLineConfigModal(false);\n      setSelectedLineForConfig(null);\n      setEditingLineConfig(null);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(`Line configuration updated successfully for ${selectedLineForConfig === null || selectedLineForConfig === void 0 ? void 0 : selectedLineForConfig.line_name}`);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      console.error('Error updating line config:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update line configuration');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = workOrder => {\n    setDraggedWorkOrder(workOrder);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = async (e, targetLineId, targetTime) => {\n    e.preventDefault();\n    if (!draggedWorkOrder) return;\n    try {\n      const targetDateTime = new Date(`${selectedDate}T${targetTime}`);\n      const endDateTime = new Date(targetDateTime);\n\n      // Calculate total duration from available time fields\n      const setupHours = draggedWorkOrder.setup_hours_estimated || 0;\n      const productionHours = draggedWorkOrder.production_time_hours_estimated || 0;\n      const productionDays = draggedWorkOrder.production_time_days_estimated || 0;\n      const totalDurationHours = setupHours + productionHours + productionDays * 8;\n      endDateTime.setHours(endDateTime.getHours() + totalDurationHours);\n      await updateWorkOrderSchedule(draggedWorkOrder.id, {\n        line_id: targetLineId,\n        scheduled_start_time: targetDateTime.toISOString(),\n        scheduled_end_time: endDateTime.toISOString()\n      });\n\n      // Refresh data\n      await fetchWorkOrders();\n      setDraggedWorkOrder(null);\n    } catch (err) {\n      console.error('Drop error:', err);\n      setError('Failed to schedule work order');\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchWorkOrders(), fetchProductionLines()]);\n      setLoading(false);\n    };\n    loadData();\n  }, [fetchWorkOrders, fetchProductionLines]);\n\n  // Real-time updates - using the context's event system\n  useEffect(() => {\n    const unsubscribe = onWorkOrderUpdate(() => {\n      fetchWorkOrders();\n    });\n    return unsubscribe;\n  }, [onWorkOrderUpdate, fetchWorkOrders]);\n\n  // Filter work orders by selected line\n  const filteredWorkOrders = selectedLine === 'all' ? workOrders : workOrders.filter(wo => wo.line_name === selectedLine);\n\n  // Generate timeline slots\n  const generateTimelineSlots = () => {\n    const slots = [];\n    filteredWorkOrders.forEach((workOrder, index) => {\n      if (workOrder.scheduled_start_time) {\n        const startTime = new Date(workOrder.scheduled_start_time);\n        const endTime = workOrder.scheduled_end_time ? new Date(workOrder.scheduled_end_time) : startTime;\n        const duration = (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60); // hours\n\n        slots.push({\n          workOrder,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          duration,\n          position: index\n        });\n      }\n    });\n    return slots;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-sy-black-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n          className: \"h-8 w-8 text-sy-green-600 mx-auto mb-4 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sy-black-600\",\n          children: \"Loading schedule...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-sy-black-900\",\n          children: \"Production Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-sy-black-600\",\n          children: \"Manage and optimize production scheduling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfigModal(true),\n          className: \"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-sy-black-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500\",\n          children: [/*#__PURE__*/_jsxDEV(CogIcon, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 13\n          }, this), \"Config\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this), user && ['admin', 'scheduler'].includes(user.role) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: runAutoSchedule,\n            disabled: autoScheduleRunning,\n            className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sy-green-600 hover:bg-sy-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500 disabled:opacity-50\",\n            children: [autoScheduleRunning ? /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n              className: \"h-4 w-4 mr-2 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(CalendarIcon, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 19\n            }, this), autoScheduleRunning ? 'Scheduling...' : 'Auto Schedule']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-sy-black-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 mr-1\",\n              children: \"Manual Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 17\n            }, this), \"Hand Placement excluded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n          className: \"h-5 w-5 text-red-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-red-800\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-700\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-50 border border-green-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: \"h-5 w-5 text-green-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-green-800\",\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-green-700\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: selectedDate,\n            onChange: e => setSelectedDate(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Production Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLine,\n            onChange: e => setSelectedLine(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Lines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 15\n            }, this), productionLines.map(line => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: line.line_name,\n              children: [line.line_name, line.line_name.toLowerCase().includes('hand') ? ' (Manual Only)' : '']\n            }, line.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"View Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: viewMode,\n            onChange: e => setViewMode(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"timeline\",\n              children: \"Timeline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"calendar\",\n              children: \"Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"list\",\n              children: \"List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-sy-black-600\",\n            children: [filteredWorkOrders.length, \" work orders\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 15\n            }, this), filteredWorkOrders.filter(wo => wo.scheduled_start_time).length, \" scheduled\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 7\n    }, this), viewMode === 'timeline' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Timeline View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid bg-gray-50 border-b border-gray-200\",\n            style: {\n              gridTemplateColumns: '200px repeat(12, 1fr)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-700\",\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 17\n            }, this), Array.from({\n              length: 12\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-700 text-center border-l border-gray-200\",\n              children: [8 + i, \":00\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 15\n          }, this), productionLines.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid border-b border-gray-200\",\n            style: {\n              gridTemplateColumns: '200px repeat(12, 1fr)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-900 bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: line.line_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 25\n                  }, this), line.line_name.toLowerCase().includes('hand') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\",\n                    children: \"Manual Only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1090,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1087,\n                  columnNumber: 23\n                }, this), user && ['admin', 'scheduler'].includes(user.role) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openLineConfig(line),\n                  className: \"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-sy-black-700 bg-white hover:bg-gray-50\",\n                  title: \"Configure line settings\",\n                  children: /*#__PURE__*/_jsxDEV(CogIcon, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1101,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1096,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 19\n            }, this), Array.from({\n              length: 12\n            }, (_, i) => {\n              const timeSlot = `${8 + i}:00`;\n              const scheduledWorkOrder = generateTimelineSlots().find(slot => slot.workOrder.line_name === line.line_name && slot.startTime === timeSlot);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 border-l border-gray-200 min-h-[60px] relative\",\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, line.id, timeSlot),\n                children: scheduledWorkOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-sy-green-100 border border-sy-green-300 rounded p-2 text-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-sy-green-800\",\n                    children: scheduledWorkOrder.workOrder.work_order_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1123,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sy-green-600\",\n                    children: [scheduledWorkOrder.duration, \"h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1126,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1122,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-400 text-xs\",\n                  children: \"Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1131,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 23\n              }, this);\n            })]\n          }, line.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 9\n    }, this), viewMode === 'calendar' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Calendar View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-sy-black-600\",\n          children: [\"Scheduled work orders by date (\", filteredWorkOrders.filter(wo => wo.scheduled_start_time).length, \" scheduled)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: (() => {\n          // Group scheduled work orders by date\n          const workOrdersByDate = filteredWorkOrders.filter(wo => wo.scheduled_start_time).reduce((acc, wo) => {\n            const startDate = new Date(wo.scheduled_start_time).toISOString().split('T')[0];\n            if (!acc[startDate]) acc[startDate] = [];\n            acc[startDate].push(wo);\n            return acc;\n          }, {});\n\n          // Sort dates\n          const sortedDates = Object.keys(workOrdersByDate).sort();\n          if (sortedDates.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-12\",\n              children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                className: \"mx-auto h-12 w-12 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mt-2 text-sm font-medium text-sy-black-900\",\n                children: \"No scheduled work orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-1 text-sm text-sy-black-500\",\n                children: \"Run auto-scheduling to see work orders on the calendar.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1173,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 19\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: sortedDates.map(date => {\n              const orders = workOrdersByDate[date];\n              const dateObj = new Date(date + 'T00:00:00');\n              const dayName = dateObj.toLocaleDateString('en-US', {\n                weekday: 'long'\n              });\n              const monthDay = dateObj.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric'\n              });\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-gray-200 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 px-4 py-3 border-b border-gray-200\",\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-lg font-medium text-sy-black-900\",\n                    children: [dayName, \", \", monthDay, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-sm font-normal text-sy-black-500\",\n                      children: [\"(\", orders.length, \" work order\", orders.length !== 1 ? 's' : '', \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1193,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1191,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1190,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-4 space-y-3\",\n                  children: orders.map(wo => {\n                    const startTime = new Date(wo.scheduled_start_time);\n                    const endTime = wo.scheduled_end_time ? new Date(wo.scheduled_end_time) : null;\n                    const duration = wo.setup_hours_estimated + wo.production_time_hours_estimated + wo.production_time_days_estimated * 8;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center justify-between p-3 bg-sy-black-50 rounded border border-gray-200\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex items-center space-x-4\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"font-medium text-sy-black-900\",\n                            children: wo.work_order_number\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1209,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-sm text-sy-black-600\",\n                            children: wo.customer_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1212,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-sm text-sy-black-500\",\n                            children: [wo.assembly_number, \" (Qty: \", wo.quantity, \")\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1215,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1208,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"mt-1 text-xs text-sy-black-500\",\n                          children: [startTime.toLocaleTimeString('en-US', {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          }), endTime && ` - ${endTime.toLocaleTimeString('en-US', {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}`, \"\\u2022 \", duration.toFixed(1), \"h duration \\u2022 \", wo.line_name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1219,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1207,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-right\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${wo.status === 'Ready' || wo.status === 'Ready*' ? 'bg-green-100 text-green-800' : wo.status === '1st Side Ready' ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800'}`,\n                          children: wo.status\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1228,\n                          columnNumber: 35\n                        }, this), wo.ship_date && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"mt-1 text-xs text-sy-black-500\",\n                          children: [\"Ship: \", new Date(wo.ship_date).toLocaleDateString()]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1238,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1227,\n                        columnNumber: 33\n                      }, this)]\n                    }, wo.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1206,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1199,\n                  columnNumber: 25\n                }, this)]\n              }, date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 17\n          }, this);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 9\n    }, this), viewMode === 'list' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Work Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Work Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Assembly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Clear to Build\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Ship Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Scheduled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredWorkOrders.map(workOrder => /*#__PURE__*/_jsxDEV(\"tr\", {\n              draggable: workOrder.clear_to_build,\n              onDragStart: () => workOrder.clear_to_build && handleDragStart(workOrder),\n              className: `hover:bg-gray-50 ${workOrder.clear_to_build ? 'cursor-move' : 'cursor-not-allowed opacity-60'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-sy-black-900\",\n                children: workOrder.work_order_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1305,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.customer_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.assembly_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${workOrder.status === 'Completed' ? 'bg-green-100 text-green-800' : workOrder.status === 'Cancelled' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: workOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1315,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1314,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${workOrder.clear_to_build ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                  children: workOrder.clear_to_build ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1324,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.ship_date ? new Date(workOrder.ship_date).toLocaleDateString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: [workOrder.production_time_hours_estimated || 0, \"h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1333,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.scheduled_start_time ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    className: \"h-4 w-4 text-green-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1339,\n                    columnNumber: 27\n                  }, this), new Date(workOrder.scheduled_start_time).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1338,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(XCircleIcon, {\n                    className: \"h-4 w-4 text-red-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1344,\n                    columnNumber: 27\n                  }, this), \"Not scheduled\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1343,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"text-sy-green-600 hover:text-sy-green-900\",\n                  onClick: () => {\n                    // TODO: Add toggle clear to build functionality\n                    console.log('Toggle clear to build for:', workOrder.work_order_number);\n                  },\n                  children: workOrder.clear_to_build ? 'Mark Not Ready' : 'Mark Ready'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1350,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1349,\n                columnNumber: 21\n              }, this)]\n            }, workOrder.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1299,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 9\n    }, this), showConfigModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-sy-black-900 mb-4\",\n            children: \"Schedule Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Hours per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: scheduleConfig.hours_per_day,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  hours_per_day: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1380,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Days per Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1389,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: scheduleConfig.days_per_week,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  days_per_week: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1392,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Efficiency Factor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                value: scheduleConfig.efficiency_factor,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  efficiency_factor: parseFloat(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1404,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1400,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowConfigModal(false),\n              className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // Save configuration logic here\n                setShowConfigModal(false);\n              },\n              className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1421,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1372,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1370,\n      columnNumber: 9\n    }, this), showLineConfigModal && selectedLineForConfig && editingLineConfig && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      onClick: () => {\n        setShowLineConfigModal(false);\n        setSelectedLineForConfig(null);\n        setEditingLineConfig(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-sy-black-900\",\n              children: [\"Configure \", selectedLineForConfig.line_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowLineConfigModal(false);\n                setSelectedLineForConfig(null);\n                setEditingLineConfig(null);\n              },\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"h-6 w-6\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M6 18L18 6M6 6l12 12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1464,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1463,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1455,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Hours per Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.hours_per_shift,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  hours_per_shift: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1474,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Shifts per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1483,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.shifts_per_day,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  shifts_per_day: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1486,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Days per Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1495,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.days_per_week,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  days_per_week: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1498,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1494,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Time Multiplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1507,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                value: editingLineConfig.time_multiplier,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  time_multiplier: parseFloat(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1510,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1506,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.start_time,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  start_time: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1523,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1532,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.end_time,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  end_time: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1535,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Lunch Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1544,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.lunch_break_duration,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  lunch_break_duration: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1547,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Lunch Break Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1556,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.lunch_break_start,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  lunch_break_start: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1559,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1568,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.break_duration,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  break_duration: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1571,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowLineConfigModal(false);\n                setSelectedLineForConfig(null);\n                setEditingLineConfig(null);\n              },\n              className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateLineConfig(selectedLineForConfig.id, editingLineConfig),\n              className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\",\n              children: \"Save Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1591,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1580,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1446,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 927,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"qwRJ+2Yb+7ZwhMmlxIRweB9uPC8=\", false, function () {\n  return [useAuth, useSocket];\n});\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CalendarIcon","CogIcon","ArrowPathIcon","ExclamationTriangleIcon","CheckCircleIcon","XCircleIcon","useAuth","useSocket","jsxDEV","_jsxDEV","Schedule","_s","user","onWorkOrderUpdate","workOrders","setWorkOrders","productionLines","setProductionLines","scheduleConfig","setScheduleConfig","hours_per_day","days_per_week","efficiency_factor","selectedLine","setSelectedLine","selectedDate","setSelectedDate","Date","toISOString","split","viewMode","setViewMode","loading","setLoading","error","setError","successMessage","setSuccessMessage","draggedWorkOrder","setDraggedWorkOrder","showConfigModal","setShowConfigModal","showLineConfigModal","setShowLineConfigModal","selectedLineForConfig","setSelectedLineForConfig","editingLineConfig","setEditingLineConfig","autoScheduleRunning","setAutoScheduleRunning","baseUrl","process","env","NODE_ENV","window","location","origin","fetchWorkOrders","_data$work_orders","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","console","log","work_orders","length","scheduledInResponse","filter","wo","scheduled_start_time","slice","map","number","work_order_number","start","end","scheduled_end_time","line","line_name","err","fetchProductionLines","production_lines","updateWorkOrderSchedule","workOrderId","scheduleData","method","body","JSON","stringify","runAutoSchedule","includes","role","lockedWorkOrders","Set","workOrdersByLine","sort","a","b","getTime","reduce","acc","push","Object","values","forEach","lineWorkOrders","add","id","size","availableWorkOrders","status","has","clear_to_build","availableLines","toLowerCase","auto_schedule_enabled","totalWorkOrders","completedWorkOrders","cancelledWorkOrders","scheduledWorkOrders","totalLines","maintenanceLines","downLines","handPlacementLines","disabledLines","calculateWorkOrderPriority","priority","ship_date","daysUntilShip","Math","ceil","abs","max","kit_date","daysUntilKit","statusPriority","prioritizedWorkOrders","priorityA","priorityB","calculateLineScore","workOrder","score","setupHours","setup_hours_estimated","productionHours","production_time_hours_estimated","productionDays","production_time_days_estimated","totalDurationHours","dailyCapacity","shifts_per_day","hours_per_shift","available_capacity","efficiency_target","time_multiplier","line_type","current_utilization","bestLine","bestScore","bestStartTime","daysRequired","lineScore","availableSlot","findBestMultiDaySlot","now","daysFromNow","timeScore","totalScore","adjustedDuration","endTime","workingHoursPerDay","setHours","getHours","remainingHours","currentDay","hoursThisDay","min","setDate","getDate","getDay","startHour","start_time","Number","setTime","line_id","line_position","scheduleError","message","setTimeout","currentWorkOrders","targetDate","earliestSlot","findEarliestMultiDaySlot","shipDate","earliestDaysFromStart","earliestEndDate","remainingDays","dayOfWeek","threeWeeksBeforeDue","targetStartDate","laterSlot","startTimeStr","endTimeStr","end_time","startMinute","endHour","endMinute","checkDate","lineDailyCapacity","estimatedDays","maxLookAhead","dayOffset","currentCheckDate","consecutiveDaysAvailable","dayIndex","checkingDate","checkingDayOfWeek","daySchedules","toDateString","usedCapacity","total","duration","dailyHoursNeeded","startTime","findEarliestAvailableSlot","lineSchedules","currentTime","slotEndTime","hasConflict","some","schedule","scheduleStart","scheduleEnd","nextConflict","find","openLineConfig","lunch_break_duration","lunch_break_start","break_duration","maintenance_interval_days","updateLineConfig","lineId","config","errorData","text","result","handleDragStart","handleDragOver","e","preventDefault","handleDrop","targetLineId","targetTime","targetDateTime","endDateTime","loadData","Promise","all","unsubscribe","filteredWorkOrders","generateTimelineSlots","slots","index","toTimeString","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","value","onChange","target","style","gridTemplateColumns","Array","from","_","i","title","timeSlot","scheduledWorkOrder","slot","onDragOver","onDrop","workOrdersByDate","startDate","sortedDates","keys","date","orders","dateObj","dayName","toLocaleDateString","weekday","monthDay","month","day","customer_name","assembly_number","quantity","toLocaleTimeString","hour","minute","toFixed","draggable","onDragStart","prev","parseInt","step","parseFloat","stopPropagation","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/Schedule.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  CalendarIcon, \n  CogIcon, \n  ArrowPathIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  XCircleIcon\n} from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext.tsx';\nimport { useSocket } from '../contexts/SocketContext.tsx';\n\ninterface WorkOrder {\n  id: string;\n  work_order_number: string;\n  quantity: number;\n  status: string;\n  clear_to_build: boolean; // New field\n  kit_date: string | null;\n  ship_date: string | null;\n  setup_hours_estimated: number | null;\n  production_time_hours_estimated: number | null;\n  production_time_days_estimated: number | null;\n  setup_hours_actual: number | null;\n  production_time_hours_actual: number | null;\n  production_time_days_actual: number | null;\n  completion_date: string | null;\n  trolley_number: number | null;\n  line_id: string | null;\n  line_position: number | null;\n  scheduled_start_time: string | null;\n  scheduled_end_time: string | null;\n  is_hand_placed: boolean;\n  created_at: string;\n  updated_at: string;\n  assembly_number: string;\n  revision: string;\n  description: string | null;\n  customer_name: string;\n  customer_id: string;\n  line_name: string | null;\n  line_type: string | null;\n}\n\ninterface ProductionLine {\n  id: string;\n  line_name: string;\n  line_type: string;\n  status: string;\n  current_utilization: number;\n  available_capacity: number;\n  time_multiplier: number;\n  hours_per_shift: number;\n  shifts_per_day: number;\n  days_per_week: number;\n  start_time: string;\n  end_time: string;\n  lunch_break_duration: number;\n  lunch_break_start: string;\n  break_duration: number;\n  auto_schedule_enabled?: boolean;\n  maintenance_interval_days?: number;\n  efficiency_target?: number;\n  next_available_slot?: string;\n}\n\ninterface ScheduleConfig {\n  hours_per_day: number;\n  days_per_week: number;\n  efficiency_factor: number;\n}\n\ninterface LineConfig {\n  hours_per_shift: number;\n  shifts_per_day: number;\n  days_per_week: number;\n  time_multiplier: number;\n  start_time: string;\n  end_time: string;\n  lunch_break_duration: number;\n  lunch_break_start: string;\n  break_duration: number;\n  auto_schedule_enabled: boolean;\n  maintenance_interval_days: number;\n  efficiency_target: number;\n}\n\ninterface TimelineSlot {\n  workOrder: WorkOrder;\n  startTime: string;\n  endTime: string;\n  duration: number;\n  position: number;\n}\n\nconst Schedule: React.FC = () => {\n  const { user } = useAuth();\n  const { onWorkOrderUpdate } = useSocket();\n  \n  // State management\n  const [workOrders, setWorkOrders] = useState<WorkOrder[]>([]);\n  const [productionLines, setProductionLines] = useState<ProductionLine[]>([]);\n  const [scheduleConfig, setScheduleConfig] = useState<ScheduleConfig>({\n    hours_per_day: 8,\n    days_per_week: 5,\n    efficiency_factor: 1.0\n  });\n  \n  // UI State\n  const [selectedLine, setSelectedLine] = useState<string>('all');\n  const [selectedDate, setSelectedDate] = useState<string>(new Date().toISOString().split('T')[0]);\n  const [viewMode, setViewMode] = useState<'timeline' | 'calendar' | 'list'>('timeline');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [draggedWorkOrder, setDraggedWorkOrder] = useState<WorkOrder | null>(null);\n  const [showConfigModal, setShowConfigModal] = useState(false);\n  const [showLineConfigModal, setShowLineConfigModal] = useState(false);\n  const [selectedLineForConfig, setSelectedLineForConfig] = useState<ProductionLine | null>(null);\n  const [editingLineConfig, setEditingLineConfig] = useState<LineConfig | null>(null);\n  const [autoScheduleRunning, setAutoScheduleRunning] = useState(false);\n\n  // API base URL - use production for local development since local database isn't set up\n  const baseUrl = process.env.NODE_ENV === 'production' \n    ? window.location.origin\n    : 'https://smtdatabase01-production.up.railway.app';\n\n  // Fetch work orders\n  const fetchWorkOrders = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/schedule/timeline`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) throw new Error('Failed to fetch work orders');\n      \n      const data = await response.json();\n      console.log('📥 API Response - Total work orders:', data.work_orders?.length || 0);\n      \n      // Debug: Check scheduled work orders in API response\n      const scheduledInResponse = (data.work_orders || []).filter((wo: WorkOrder) => wo.scheduled_start_time);\n      console.log('📅 Work orders with scheduled_start_time in API response:', scheduledInResponse.length);\n      \n      if (scheduledInResponse.length > 0) {\n        console.log('📋 First few scheduled work orders from API:', scheduledInResponse.slice(0, 3).map((wo: WorkOrder) => ({\n          number: wo.work_order_number,\n          start: wo.scheduled_start_time,\n          end: wo.scheduled_end_time,\n          line: wo.line_name\n        })));\n      }\n      \n      setWorkOrders(data.work_orders || []);\n    } catch (err) {\n      console.error('Error fetching work orders:', err);\n      setError('Failed to load work orders');\n    }\n  }, [baseUrl]);\n\n  // Fetch production lines\n  const fetchProductionLines = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/production-lines`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) throw new Error('Failed to fetch production lines');\n      \n      const data = await response.json();\n      setProductionLines(data.production_lines || []);\n    } catch (err) {\n      console.error('Error fetching production lines:', err);\n      setError('Failed to load production lines');\n    }\n  }, [baseUrl]);\n\n  // Update work order schedule\n  const updateWorkOrderSchedule = useCallback(async (workOrderId: string, scheduleData: any) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/schedule/work-orders/${workOrderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(scheduleData)\n      });\n\n      if (!response.ok) throw new Error('Failed to update schedule');\n      \n      return await response.json();\n    } catch (err) {\n      console.error('Error updating schedule:', err);\n      throw err;\n    }\n  }, [baseUrl]);\n\n  // Enhanced auto-schedule algorithm\n  const runAutoSchedule = useCallback(async () => {\n    if (!user || !['admin', 'scheduler'].includes(user.role)) {\n      setError('Insufficient permissions for auto-scheduling');\n      return;\n    }\n\n    setAutoScheduleRunning(true);\n    try {\n      console.log('🚀 Starting auto-schedule...');\n      console.log('👤 User role:', user.role);\n      console.log('🌐 Base URL:', baseUrl);\n      console.log('🔑 Auth token exists:', !!localStorage.getItem('auth_token'));\n      // Get locked work orders (first 2 on each line) that should not be moved\n      const lockedWorkOrders = new Set();\n      \n      // Group scheduled work orders by line and find first 2 on each line\n      const workOrdersByLine = workOrders\n        .filter(wo => wo.scheduled_start_time && wo.line_name)\n        .sort((a, b) => new Date(a.scheduled_start_time!).getTime() - new Date(b.scheduled_start_time!).getTime())\n        .reduce((acc, wo) => {\n          if (!acc[wo.line_name!]) acc[wo.line_name!] = [];\n          acc[wo.line_name!].push(wo);\n          return acc;\n        }, {} as Record<string, typeof workOrders>);\n      \n      // Mark first 2 work orders on each line as locked\n      Object.values(workOrdersByLine).forEach(lineWorkOrders => {\n        lineWorkOrders.slice(0, 2).forEach(wo => {\n          lockedWorkOrders.add(wo.id);\n        });\n      });\n      \n      console.log(`🔒 Locked ${lockedWorkOrders.size} work orders (first 2 on each line)`);\n      \n      // Get available work orders (not completed, cancelled, or locked)\n      const availableWorkOrders = workOrders.filter(wo => \n        wo.status !== 'Completed' && \n        wo.status !== 'Cancelled' && \n        (!wo.scheduled_start_time || !lockedWorkOrders.has(wo.id)) // Include unlocked scheduled orders\n        // Note: clear_to_build filtering removed for now since column doesn't exist in DB\n      );\n\n      // Debug logging\n      console.log('Total work orders:', workOrders.length);\n      console.log('Available work orders:', availableWorkOrders.length);\n      console.log('Work order statuses:', [...new Set(workOrders.map(wo => wo.status))]);\n      console.log('Scheduled work orders:', workOrders.filter(wo => wo.scheduled_start_time).length);\n      console.log('Clear to build statuses:', [...new Set(workOrders.map(wo => wo.clear_to_build))]);\n\n      // Get available production lines (exclude Hand Placement and disabled lines)\n      const availableLines = productionLines.filter(line => \n        line.status !== 'maintenance' &&\n        line.status !== 'down' &&\n        !line.line_name.toLowerCase().includes('hand') &&\n        line.auto_schedule_enabled !== false\n      );\n\n      // Debug logging for production lines\n      console.log('Total production lines:', productionLines.length);\n      console.log('Available production lines:', availableLines.length);\n      console.log('Line statuses:', [...new Set(productionLines.map(line => line.status))]);\n      console.log('Line names:', productionLines.map(line => line.line_name));\n\n      if (availableWorkOrders.length === 0) {\n        const totalWorkOrders = workOrders.length;\n        const completedWorkOrders = workOrders.filter(wo => wo.status === 'Completed').length;\n        const cancelledWorkOrders = workOrders.filter(wo => wo.status === 'Cancelled').length;\n        const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time).length;\n                setError(`No work orders available for scheduling. Total: ${totalWorkOrders}, Completed: ${completedWorkOrders}, Cancelled: ${cancelledWorkOrders}, Already Scheduled: ${scheduledWorkOrders}`);\n        return;\n      }\n\n      if (availableLines.length === 0) {\n        const totalLines = productionLines.length;\n        const maintenanceLines = productionLines.filter(line => line.status === 'maintenance').length;\n        const downLines = productionLines.filter(line => line.status === 'down').length;\n        const handPlacementLines = productionLines.filter(line => line.line_name.toLowerCase().includes('hand')).length;\n        const disabledLines = productionLines.filter(line => line.auto_schedule_enabled === false).length;\n        \n        setError(`No production lines available for scheduling. Total: ${totalLines}, Maintenance: ${maintenanceLines}, Down: ${downLines}, Hand Placement: ${handPlacementLines}, Auto-schedule Disabled: ${disabledLines}`);\n        return;\n      }\n\n      // Enhanced priority scoring system focused on due date adherence\n      const calculateWorkOrderPriority = (wo: WorkOrder) => {\n        let priority = 0;\n        \n        // Ship date priority - primary factor (finish as close to due date as possible)\n        if (wo.ship_date) {\n          const daysUntilShip = Math.ceil((new Date(wo.ship_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          \n          if (daysUntilShip <= 0) {\n            // Past due - HIGHEST priority\n            priority += 1000 + Math.abs(daysUntilShip);\n          } else if (daysUntilShip <= 21) {\n            // Due within 3 weeks - high priority, closer to due date = higher priority\n            priority += 500 + (21 - daysUntilShip) * 20;\n          } else {\n            // Due further out - lower priority\n            priority += Math.max(0, 100 - daysUntilShip);\n          }\n        } else {\n          // No ship date - medium priority\n          priority += 200;\n        }\n        \n        // Kit date priority (secondary factor)\n        if (wo.kit_date) {\n          const daysUntilKit = Math.ceil((new Date(wo.kit_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          if (daysUntilKit <= 7) {\n            priority += Math.max(0, 7 - daysUntilKit) * 5;\n          }\n        }\n        \n        // Status priority (ready work orders should be scheduled)\n        const statusPriority = {\n          'Ready': 50,\n          'Ready*': 50,\n          '1st Side Ready': 45,\n          'In Progress': 40,\n          'Pending': 20,\n          'On Hold': 5\n        };\n        priority += statusPriority[wo.status as keyof typeof statusPriority] || 0;\n        \n        return priority;\n      };\n\n      // Sort work orders by enhanced priority\n      const prioritizedWorkOrders = [...availableWorkOrders].sort((a, b) => {\n        const priorityA = calculateWorkOrderPriority(a);\n        const priorityB = calculateWorkOrderPriority(b);\n        return priorityB - priorityA; // Higher priority first\n      });\n\n      // Line scoring system\n      const calculateLineScore = (line: ProductionLine, workOrder: WorkOrder) => {\n        let score = 0;\n        \n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n        \n        // Daily capacity preference (prefer lines with higher daily capacity)\n        const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n        score += dailyCapacity * 2; // Directly reward higher daily capacity\n        \n        // Available capacity bonus (remaining capacity for more work)\n        score += (line.available_capacity || 0) * 3;\n        \n        // Efficiency score (prefer more efficient lines)\n        score += (line.efficiency_target || 85) / 10;\n        \n        // Time multiplier preference (prefer lines with lower multipliers for faster processing)\n        score += (1 / (line.time_multiplier || 1.0)) * 10;\n        \n        // Line type preference (prefer SMT over other types)\n        if (line.line_type === 'SMT') {\n          score += 15;\n        }\n        \n        // Current utilization (prefer less busy lines)\n        score += (1 - (line.current_utilization || 0) / 100) * 10;\n        \n        return score;\n      };\n\n      // Track scheduled work orders for conflict detection\n      const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time);\n      \n      // Schedule work orders\n      for (const workOrder of prioritizedWorkOrders) {\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n\n        // Find best line for this work order\n        let bestLine: ProductionLine | null = null;\n        let bestScore = -1;\n        let bestStartTime: Date | null = null;\n\n        for (const line of availableLines) {\n          console.log(`🔍 Checking line ${line.line_name}:`);\n          \n          // Calculate daily capacity for this line\n          const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n          console.log(`  Daily capacity: ${dailyCapacity} hours/day`);\n          console.log(`  Required duration: ${totalDurationHours} hours total`);\n          \n                  // Calculate how many days this work order will need\n        const daysRequired = Math.ceil(totalDurationHours / dailyCapacity);\n        console.log(`  Days required: ${daysRequired} days`);\n        \n        // Special logging for long work orders\n        if (totalDurationHours > 50) {\n          console.log(`🚨 LONG WORK ORDER: ${workOrder.work_order_number} needs ${totalDurationHours}h (${daysRequired} days)`);\n          console.log(`  Line: ${line.line_name} (${dailyCapacity}h/day)`);\n          console.log(`  Due date: ${workOrder.ship_date}`);\n        }\n          \n          // Check if work order can fit within daily capacity (even if it spans multiple days)\n          if (dailyCapacity === 0) {\n            console.log(`  ❌ No daily capacity configured`);\n            continue;\n          }\n\n                  // Calculate line score\n        const lineScore = calculateLineScore(line, workOrder);\n        console.log(`  📊 Line score: ${lineScore}`);\n        console.log(`  📋 Line details: capacity=${line.available_capacity}, shifts=${line.shifts_per_day}, hours=${line.hours_per_shift}, multiplier=${line.time_multiplier}`);\n          \n          // Find best available multi-day slot on this line (considering due dates)\n          const availableSlot = findBestMultiDaySlot(line, workOrder, scheduledWorkOrders, selectedDate, daysRequired);\n          console.log(`  ⏰ Available slot: ${availableSlot ? availableSlot.toISOString() : 'None'}`);\n          \n          if (availableSlot) {\n            // Calculate completion time score (earlier start = higher score)\n            const now = new Date();\n            const daysFromNow = Math.ceil((availableSlot.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));\n            const timeScore = Math.max(0, 100 - daysFromNow); // 100 points for immediate start, decreases by 1 per day\n            \n            // Combined score: line quality + timing\n            const totalScore = lineScore + timeScore;\n            console.log(`  ⏰ Days from now: ${daysFromNow}, Time score: ${timeScore}, Total score: ${totalScore}`);\n            \n            if (totalScore > bestScore) {\n              console.log(`  ✅ New best line! (was ${bestScore}, now ${totalScore})`);\n              bestLine = line;\n              bestScore = totalScore;\n              bestStartTime = availableSlot;\n            }\n          }\n        }\n\n        if (bestLine && bestStartTime) {\n          // Calculate end time for multi-day scheduling\n          const adjustedDuration = totalDurationHours * (bestLine.time_multiplier || 1.0);\n          const dailyCapacity = (bestLine.shifts_per_day || 1) * (bestLine.hours_per_shift || 8);\n          const daysRequired = Math.ceil(adjustedDuration / dailyCapacity);\n          \n          // Calculate actual end time considering daily work hours\n          const endTime = new Date(bestStartTime);\n          const workingHoursPerDay = bestLine.hours_per_shift || 8;\n          \n          if (daysRequired === 1) {\n            // Single day: just add the duration\n            endTime.setHours(endTime.getHours() + adjustedDuration);\n          } else {\n            // Multi-day: calculate based on working days and daily capacity\n            let remainingHours = adjustedDuration;\n            let currentDay = new Date(bestStartTime);\n            \n            while (remainingHours > 0) {\n              const hoursThisDay = Math.min(remainingHours, workingHoursPerDay);\n              remainingHours -= hoursThisDay;\n              \n              if (remainingHours > 0) {\n                // Move to next working day\n                currentDay.setDate(currentDay.getDate() + 1);\n                // Skip weekends if line doesn't work weekends\n                while ((bestLine.days_per_week || 5) === 5 && (currentDay.getDay() === 0 || currentDay.getDay() === 6)) {\n                  currentDay.setDate(currentDay.getDate() + 1);\n                }\n              } else {\n                // Last day - calculate exact end time\n                const [startHour] = (bestLine.start_time || '08:00').split(':').map(Number);\n                currentDay.setHours(startHour + hoursThisDay);\n              }\n            }\n            \n            endTime.setTime(currentDay.getTime());\n          }\n\n          console.log(`📅 Scheduling work order ${workOrder.work_order_number} on ${bestLine.line_name}`);\n          console.log(`⏰ Start: ${bestStartTime.toISOString()}, End: ${endTime.toISOString()}`);\n          console.log(`🆔 Work Order ID being sent to API: \"${workOrder.id}\" (type: ${typeof workOrder.id})`);\n\n          // Update work order with schedule\n          try {\n            await updateWorkOrderSchedule(workOrder.id, {\n              line_id: bestLine.id,\n              scheduled_start_time: bestStartTime.toISOString(),\n              scheduled_end_time: endTime.toISOString(),\n              line_position: 1\n            });\n            console.log(`✅ Successfully scheduled work order ${workOrder.work_order_number}`);\n          } catch (scheduleError) {\n            console.error(`❌ Failed to schedule work order ${workOrder.work_order_number}:`, scheduleError);\n            throw new Error(`Failed to schedule work order ${workOrder.work_order_number}: ${scheduleError.message}`);\n          }\n\n          // Add to scheduled work orders for conflict detection\n          scheduledWorkOrders.push({\n            ...workOrder,\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString()\n          });\n        }\n      }\n\n      // Refresh data\n      console.log('🔄 Refreshing work orders after auto-scheduling...');\n      await fetchWorkOrders();\n      \n      // Debug: Check if work orders have scheduled times after refresh (use a ref to avoid stale closure)\n      setTimeout(() => {\n        const currentWorkOrders = workOrders; // This might be stale, let's remove this debug for now\n        console.log('🔄 Data refresh completed after auto-scheduling');\n      }, 100);\n      \n      setSuccessMessage('Auto-schedule completed successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n      setError(null);\n    } catch (err) {\n      console.error('Auto-schedule error:', err);\n      setError('Auto-scheduling failed: ' + (err instanceof Error ? err.message : 'Unknown error'));\n    } finally {\n      setAutoScheduleRunning(false);\n    }\n  }, [productionLines, selectedDate, user, updateWorkOrderSchedule, fetchWorkOrders]);\n\n  // Helper function to find best available multi-day time slot considering due dates\n  const findBestMultiDaySlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string,\n    daysRequired: number\n  ): Date | null => {\n    const earliestSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, targetDate, daysRequired);\n    if (!earliestSlot || !workOrder.ship_date) {\n      return earliestSlot;\n    }\n\n    // Calculate work order duration for end date calculation\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    \n    const shipDate = new Date(workOrder.ship_date);\n    const earliestDaysFromStart = Math.ceil(adjustedDuration / dailyCapacity);\n    \n    // Calculate earliest finish date\n    const earliestEndDate = new Date(earliestSlot);\n    let remainingDays = earliestDaysFromStart;\n    while (remainingDays > 0) {\n      earliestEndDate.setDate(earliestEndDate.getDate() + 1);\n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = earliestEndDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n      remainingDays--;\n    }\n\n    // If earliest finish is more than 3 weeks before due date, try to find a later slot\n    const threeWeeksBeforeDue = new Date(shipDate);\n    threeWeeksBeforeDue.setDate(threeWeeksBeforeDue.getDate() - 21);\n    \n    if (earliestEndDate < threeWeeksBeforeDue) {\n      // Try to find a slot that finishes closer to the due date\n      const targetStartDate = new Date(threeWeeksBeforeDue);\n      targetStartDate.setDate(targetStartDate.getDate() - earliestDaysFromStart);\n      \n      const laterSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, targetStartDate.toISOString().split('T')[0], daysRequired);\n      if (laterSlot) {\n        return laterSlot;\n      }\n    }\n\n    return earliestSlot;\n  };\n\n  // Helper function to find earliest available multi-day time slot\n  const findEarliestMultiDaySlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string,\n    daysRequired: number\n  ): Date | null => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate daily capacity and work order duration\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n\n    // Start checking from the target date\n    let checkDate = new Date(targetDate);\n    // Extended look-ahead for very long work orders that need more time\n    const adjustedDuration = (workOrder.setup_hours_estimated || 0) + \n                            (workOrder.production_time_hours_estimated || 0) + \n                            ((workOrder.production_time_days_estimated || 0) * 8);\n    const lineDailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const estimatedDays = Math.ceil(adjustedDuration / Math.max(lineDailyCapacity, 1));\n    \n    // Use longer look-ahead for work orders that need more than 30 days\n    const maxLookAhead = estimatedDays > 30 ? Math.min(90, estimatedDays + 30) : 45;\n    \n    for (let dayOffset = 0; dayOffset < maxLookAhead; dayOffset++) {\n      const currentCheckDate = new Date(checkDate);\n      currentCheckDate.setDate(checkDate.getDate() + dayOffset);\n      \n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = currentCheckDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n\n      // Check if we have consecutive available days starting from this date\n      let consecutiveDaysAvailable = true;\n      \n      for (let dayIndex = 0; dayIndex < daysRequired; dayIndex++) {\n        const checkingDate = new Date(currentCheckDate);\n        checkingDate.setDate(currentCheckDate.getDate() + dayIndex);\n        \n        // Skip weekends for additional days too\n        const checkingDayOfWeek = checkingDate.getDay();\n        if ((line.days_per_week || 5) === 5 && (checkingDayOfWeek === 0 || checkingDayOfWeek === 6)) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n\n        // Get existing schedules for this line on this specific date\n        const daySchedules = scheduledWorkOrders.filter(wo => \n          wo.line_id === line.id && \n          wo.scheduled_start_time &&\n          wo.scheduled_end_time &&\n          new Date(wo.scheduled_start_time).toDateString() === checkingDate.toDateString()\n        );\n\n        // Calculate how much capacity is used this day\n        const usedCapacity = daySchedules.reduce((total, wo) => {\n          const start = new Date(wo.scheduled_start_time!);\n          const end = new Date(wo.scheduled_end_time!);\n          const duration = (end.getTime() - start.getTime()) / (1000 * 60 * 60); // Convert to hours\n          return total + duration;\n        }, 0);\n\n        // Check if we have enough remaining capacity for this day's portion\n        const dailyHoursNeeded = Math.min(totalDurationHours - (dayIndex * dailyCapacity), dailyCapacity);\n        \n        if (usedCapacity + dailyHoursNeeded > dailyCapacity) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n      }\n\n      if (consecutiveDaysAvailable) {\n        // Found a valid starting date - return the start time\n        const startTime = new Date(currentCheckDate);\n        startTime.setHours(startHour, startMinute, 0, 0);\n        return startTime;\n      }\n    }\n\n    return null;\n  };\n\n  // Helper function to find earliest available time slot\n  const findEarliestAvailableSlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string\n  ): Date | null => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate work order duration\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n\n    // Get existing schedules for this line on the target date\n    const lineSchedules = scheduledWorkOrders.filter(wo => \n      wo.line_id === line.id && \n      wo.scheduled_start_time &&\n      wo.scheduled_end_time &&\n      new Date(wo.scheduled_start_time).toDateString() === new Date(targetDate).toDateString()\n    ).sort((a, b) => \n      new Date(a.scheduled_start_time!).getTime() - new Date(b.scheduled_start_time!).getTime()\n    );\n\n    // Start with line opening time\n    let currentTime = new Date(targetDate);\n    currentTime.setHours(startHour, startMinute, 0, 0);\n\n    // Check each potential time slot\n    while (currentTime.getHours() < endHour) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setHours(slotEndTime.getHours() + adjustedDuration);\n\n      // Check if slot extends beyond line closing time\n      if (slotEndTime.getHours() > endHour) {\n        // Move to next day\n        currentTime.setDate(currentTime.getDate() + 1);\n        currentTime.setHours(startHour, startMinute, 0, 0);\n        continue;\n      }\n\n      // Check for conflicts with existing schedules\n      const hasConflict = lineSchedules.some(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time!);\n        const scheduleEnd = new Date(schedule.scheduled_end_time!);\n        \n        return (\n          (currentTime >= scheduleStart && currentTime < scheduleEnd) ||\n          (slotEndTime > scheduleStart && slotEndTime <= scheduleEnd) ||\n          (currentTime <= scheduleStart && slotEndTime >= scheduleEnd)\n        );\n      });\n\n      if (!hasConflict) {\n        return currentTime;\n      }\n\n      // Move to next potential slot (after the conflicting schedule)\n      const nextConflict = lineSchedules.find(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time!);\n        return scheduleStart >= currentTime;\n      });\n\n      if (nextConflict) {\n        currentTime = new Date(nextConflict.scheduled_end_time!);\n      } else {\n        // No more conflicts, but check if we still have time today\n        if (currentTime.getHours() + adjustedDuration <= endHour) {\n          return currentTime;\n        } else {\n          // Move to next day\n          currentTime.setDate(currentTime.getDate() + 1);\n          currentTime.setHours(startHour, startMinute, 0, 0);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  // Line configuration functions\n  const openLineConfig = (line: ProductionLine) => {\n    setSelectedLineForConfig(line);\n    setEditingLineConfig({\n      hours_per_shift: line.hours_per_shift || 8,\n      shifts_per_day: line.shifts_per_day || 1,\n      days_per_week: line.days_per_week || 5,\n      time_multiplier: line.time_multiplier || 1.0,\n      start_time: line.start_time || '08:00',\n      end_time: line.end_time || '17:00',\n      lunch_break_duration: line.lunch_break_duration || 60,\n      lunch_break_start: line.lunch_break_start || '12:00',\n      break_duration: line.break_duration || 15,\n      auto_schedule_enabled: true,\n      maintenance_interval_days: 30,\n      efficiency_target: 85\n    });\n    setShowLineConfigModal(true);\n  };\n\n  const updateLineConfig = async (lineId: string, config: LineConfig) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      console.log('Updating line config for:', lineId, 'with config:', config);\n      \n      const response = await fetch(`${baseUrl}/api/production-lines/${lineId}/config`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(config)\n      });\n\n      console.log('Response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Response error:', errorData);\n        throw new Error(`Failed to update line configuration: ${response.status} ${errorData}`);\n      }\n      \n      const result = await response.json();\n      console.log('Update successful:', result);\n      \n      // Refresh production lines data\n      await fetchProductionLines();\n      setShowLineConfigModal(false);\n      setSelectedLineForConfig(null);\n      setEditingLineConfig(null);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(`Line configuration updated successfully for ${selectedLineForConfig?.line_name}`);\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      console.error('Error updating line config:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update line configuration');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = (workOrder: WorkOrder) => {\n    setDraggedWorkOrder(workOrder);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = async (e: React.DragEvent, targetLineId: string, targetTime: string) => {\n    e.preventDefault();\n    \n    if (!draggedWorkOrder) return;\n\n    try {\n      const targetDateTime = new Date(`${selectedDate}T${targetTime}`);\n      const endDateTime = new Date(targetDateTime);\n      \n      // Calculate total duration from available time fields\n      const setupHours = draggedWorkOrder.setup_hours_estimated || 0;\n      const productionHours = draggedWorkOrder.production_time_hours_estimated || 0;\n      const productionDays = draggedWorkOrder.production_time_days_estimated || 0;\n      const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n      \n      endDateTime.setHours(endDateTime.getHours() + totalDurationHours);\n\n      await updateWorkOrderSchedule(draggedWorkOrder.id, {\n        line_id: targetLineId,\n        scheduled_start_time: targetDateTime.toISOString(),\n        scheduled_end_time: endDateTime.toISOString()\n      });\n\n      // Refresh data\n      await fetchWorkOrders();\n      setDraggedWorkOrder(null);\n    } catch (err) {\n      console.error('Drop error:', err);\n      setError('Failed to schedule work order');\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchWorkOrders(), fetchProductionLines()]);\n      setLoading(false);\n    };\n\n    loadData();\n  }, [fetchWorkOrders, fetchProductionLines]);\n\n  // Real-time updates - using the context's event system\n  useEffect(() => {\n    const unsubscribe = onWorkOrderUpdate(() => {\n      fetchWorkOrders();\n    });\n\n    return unsubscribe;\n  }, [onWorkOrderUpdate, fetchWorkOrders]);\n\n  // Filter work orders by selected line\n  const filteredWorkOrders = selectedLine === 'all' \n    ? workOrders \n    : workOrders.filter(wo => wo.line_name === selectedLine);\n\n  // Generate timeline slots\n  const generateTimelineSlots = () => {\n    const slots: TimelineSlot[] = [];\n\n    filteredWorkOrders.forEach((workOrder, index) => {\n      if (workOrder.scheduled_start_time) {\n        const startTime = new Date(workOrder.scheduled_start_time);\n        const endTime = workOrder.scheduled_end_time ? new Date(workOrder.scheduled_end_time) : startTime;\n        const duration = (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60); // hours\n\n        slots.push({\n          workOrder,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          duration,\n          position: index\n        });\n      }\n    });\n\n    return slots;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-sy-black-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <ArrowPathIcon className=\"h-8 w-8 text-sy-green-600 mx-auto mb-4 animate-spin\" />\n          <p className=\"text-sy-black-600\">Loading schedule...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-sy-black-900\">Production Schedule</h1>\n          <p className=\"mt-1 text-sm text-sy-black-600\">\n            Manage and optimize production scheduling\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={() => setShowConfigModal(true)}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-sy-black-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500\"\n          >\n            <CogIcon className=\"h-4 w-4 mr-2\" />\n            Config\n          </button>\n          \n          {user && ['admin', 'scheduler'].includes(user.role) && (\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={runAutoSchedule}\n                disabled={autoScheduleRunning}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sy-green-600 hover:bg-sy-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500 disabled:opacity-50\"\n              >\n                {autoScheduleRunning ? (\n                  <ArrowPathIcon className=\"h-4 w-4 mr-2 animate-spin\" />\n                ) : (\n                  <CalendarIcon className=\"h-4 w-4 mr-2\" />\n                )}\n                {autoScheduleRunning ? 'Scheduling...' : 'Auto Schedule'}\n              </button>\n              <div className=\"text-xs text-sy-black-500\">\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 mr-1\">\n                  Manual Only\n                </span>\n                Hand Placement excluded\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n              <p className=\"mt-1 text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Success Display */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <CheckCircleIcon className=\"h-5 w-5 text-green-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-green-800\">Success</h3>\n              <p className=\"mt-1 text-sm text-green-700\">{successMessage}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Controls */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {/* Date Selector */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Date\n            </label>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            />\n          </div>\n\n          {/* Line Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Production Line\n            </label>\n            <select\n              value={selectedLine}\n              onChange={(e) => setSelectedLine(e.target.value)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            >\n              <option value=\"all\">All Lines</option>\n              {productionLines.map(line => (\n                <option key={line.id} value={line.line_name}>\n                  {line.line_name}\n                  {line.line_name.toLowerCase().includes('hand') ? ' (Manual Only)' : ''}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* View Mode */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              View Mode\n            </label>\n            <select\n              value={viewMode}\n              onChange={(e) => setViewMode(e.target.value as any)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            >\n              <option value=\"timeline\">Timeline</option>\n              <option value=\"calendar\">Calendar</option>\n              <option value=\"list\">List</option>\n            </select>\n          </div>\n\n          {/* Stats */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Summary\n            </label>\n            <div className=\"text-sm text-sy-black-600\">\n              {filteredWorkOrders.length} work orders\n              <br />\n              {filteredWorkOrders.filter(wo => wo.scheduled_start_time).length} scheduled\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Timeline View */}\n      {viewMode === 'timeline' && (\n        <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Timeline View</h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <div className=\"min-w-full\">\n              {/* Time Headers */}\n              <div className=\"grid bg-gray-50 border-b border-gray-200\" style={{ gridTemplateColumns: '200px repeat(12, 1fr)' }}>\n                <div className=\"p-3 text-sm font-medium text-sy-black-700\">Line</div>\n                {Array.from({ length: 12 }, (_, i) => (\n                  <div key={i} className=\"p-3 text-sm font-medium text-sy-black-700 text-center border-l border-gray-200\">\n                    {8 + i}:00\n                  </div>\n                ))}\n              </div>\n\n              {/* Production Lines */}\n              {productionLines.map(line => (\n                <div key={line.id} className=\"grid border-b border-gray-200\" style={{ gridTemplateColumns: '200px repeat(12, 1fr)' }}>\n                  <div className=\"p-3 text-sm font-medium text-sy-black-900 bg-gray-50\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{line.line_name}</span>\n                        {line.line_name.toLowerCase().includes('hand') && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                            Manual Only\n                          </span>\n                        )}\n                      </div>\n                      {user && ['admin', 'scheduler'].includes(user.role) && (\n                        <button\n                          onClick={() => openLineConfig(line)}\n                          className=\"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-sy-black-700 bg-white hover:bg-gray-50\"\n                          title=\"Configure line settings\"\n                        >\n                          <CogIcon className=\"h-3 w-3\" />\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {Array.from({ length: 12 }, (_, i) => {\n                    const timeSlot = `${8 + i}:00`;\n                    const scheduledWorkOrder = generateTimelineSlots().find(slot => \n                      slot.workOrder.line_name === line.line_name &&\n                      slot.startTime === timeSlot\n                    );\n\n                    return (\n                      <div\n                        key={i}\n                        className=\"p-2 border-l border-gray-200 min-h-[60px] relative\"\n                        onDragOver={handleDragOver}\n                        onDrop={(e) => handleDrop(e, line.id, timeSlot)}\n                      >\n                        {scheduledWorkOrder ? (\n                          <div className=\"bg-sy-green-100 border border-sy-green-300 rounded p-2 text-xs\">\n                            <div className=\"font-medium text-sy-green-800\">\n                              {scheduledWorkOrder.workOrder.work_order_number}\n                            </div>\n                            <div className=\"text-sy-green-600\">\n                              {scheduledWorkOrder.duration}h\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"text-gray-400 text-xs\">Available</div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Calendar View */}\n      {viewMode === 'calendar' && (\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Calendar View</h3>\n            <p className=\"mt-1 text-sm text-sy-black-600\">\n              Scheduled work orders by date ({filteredWorkOrders.filter(wo => wo.scheduled_start_time).length} scheduled)\n            </p>\n          </div>\n          \n          <div className=\"p-6\">\n            {(() => {\n              // Group scheduled work orders by date\n              const workOrdersByDate = filteredWorkOrders\n                .filter(wo => wo.scheduled_start_time)\n                .reduce((acc, wo) => {\n                  const startDate = new Date(wo.scheduled_start_time!).toISOString().split('T')[0];\n                  if (!acc[startDate]) acc[startDate] = [];\n                  acc[startDate].push(wo);\n                  return acc;\n                }, {} as Record<string, typeof filteredWorkOrders>);\n\n              // Sort dates\n              const sortedDates = Object.keys(workOrdersByDate).sort();\n\n              if (sortedDates.length === 0) {\n                return (\n                  <div className=\"text-center py-12\">\n                    <CalendarIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n                    <h3 className=\"mt-2 text-sm font-medium text-sy-black-900\">No scheduled work orders</h3>\n                    <p className=\"mt-1 text-sm text-sy-black-500\">\n                      Run auto-scheduling to see work orders on the calendar.\n                    </p>\n                  </div>\n                );\n              }\n\n              return (\n                <div className=\"space-y-6\">\n                  {sortedDates.map(date => {\n                    const orders = workOrdersByDate[date];\n                    const dateObj = new Date(date + 'T00:00:00');\n                    const dayName = dateObj.toLocaleDateString('en-US', { weekday: 'long' });\n                    const monthDay = dateObj.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n                    \n                    return (\n                      <div key={date} className=\"border border-gray-200 rounded-lg\">\n                        <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\n                          <h4 className=\"text-lg font-medium text-sy-black-900\">\n                            {dayName}, {monthDay}\n                            <span className=\"ml-2 text-sm font-normal text-sy-black-500\">\n                              ({orders.length} work order{orders.length !== 1 ? 's' : ''})\n                            </span>\n                          </h4>\n                        </div>\n                        \n                        <div className=\"p-4 space-y-3\">\n                          {orders.map(wo => {\n                            const startTime = new Date(wo.scheduled_start_time!);\n                            const endTime = wo.scheduled_end_time ? new Date(wo.scheduled_end_time) : null;\n                            const duration = wo.setup_hours_estimated + wo.production_time_hours_estimated + (wo.production_time_days_estimated * 8);\n                            \n                            return (\n                              <div key={wo.id} className=\"flex items-center justify-between p-3 bg-sy-black-50 rounded border border-gray-200\">\n                                <div className=\"flex-1\">\n                                  <div className=\"flex items-center space-x-4\">\n                                    <div className=\"font-medium text-sy-black-900\">\n                                      {wo.work_order_number}\n                                    </div>\n                                    <div className=\"text-sm text-sy-black-600\">\n                                      {wo.customer_name}\n                                    </div>\n                                    <div className=\"text-sm text-sy-black-500\">\n                                      {wo.assembly_number} (Qty: {wo.quantity})\n                                    </div>\n                                  </div>\n                                  <div className=\"mt-1 text-xs text-sy-black-500\">\n                                    {startTime.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}\n                                    {endTime && ` - ${endTime.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}`}\n                                    • {duration.toFixed(1)}h duration\n                                    • {wo.line_name}\n                                  </div>\n                                </div>\n                                \n                                <div className=\"text-right\">\n                                  <div className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                                    wo.status === 'Ready' || wo.status === 'Ready*' \n                                      ? 'bg-green-100 text-green-800'\n                                      : wo.status === '1st Side Ready'\n                                      ? 'bg-blue-100 text-blue-800'\n                                      : 'bg-gray-100 text-gray-800'\n                                  }`}>\n                                    {wo.status}\n                                  </div>\n                                  {wo.ship_date && (\n                                    <div className=\"mt-1 text-xs text-sy-black-500\">\n                                      Ship: {new Date(wo.ship_date).toLocaleDateString()}\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            })()}\n          </div>\n        </div>\n      )}\n\n      {/* Work Orders List */}\n      {viewMode === 'list' && (\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Work Orders</h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Work Order\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Customer\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Assembly\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Clear to Build\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Ship Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Duration\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Scheduled\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredWorkOrders.map((workOrder) => (\n                  <tr \n                    key={workOrder.id}\n                    draggable={workOrder.clear_to_build}\n                    onDragStart={() => workOrder.clear_to_build && handleDragStart(workOrder)}\n                    className={`hover:bg-gray-50 ${workOrder.clear_to_build ? 'cursor-move' : 'cursor-not-allowed opacity-60'}`}\n                  >\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-sy-black-900\">\n                      {workOrder.work_order_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.customer_name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.assembly_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        workOrder.status === 'Completed' ? 'bg-green-100 text-green-800' :\n                        workOrder.status === 'Cancelled' ? 'bg-red-100 text-red-800' :\n                        'bg-yellow-100 text-yellow-800'\n                      }`}>\n                        {workOrder.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        workOrder.clear_to_build ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                      }`}>\n                        {workOrder.clear_to_build ? 'Yes' : 'No'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.ship_date ? new Date(workOrder.ship_date).toLocaleDateString() : 'N/A'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.production_time_hours_estimated || 0}h\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.scheduled_start_time ? (\n                        <div className=\"flex items-center\">\n                          <CheckCircleIcon className=\"h-4 w-4 text-green-500 mr-1\" />\n                          {new Date(workOrder.scheduled_start_time).toLocaleDateString()}\n                        </div>\n                      ) : (\n                        <div className=\"flex items-center\">\n                          <XCircleIcon className=\"h-4 w-4 text-red-500 mr-1\" />\n                          Not scheduled\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button \n                        className=\"text-sy-green-600 hover:text-sy-green-900\"\n                        onClick={() => {\n                          // TODO: Add toggle clear to build functionality\n                          console.log('Toggle clear to build for:', workOrder.work_order_number);\n                        }}\n                      >\n                        {workOrder.clear_to_build ? 'Mark Not Ready' : 'Mark Ready'}\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Configuration Modal */}\n      {showConfigModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-sy-black-900 mb-4\">Schedule Configuration</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Hours per Day\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={scheduleConfig.hours_per_day}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, hours_per_day: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Days per Week\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={scheduleConfig.days_per_week}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, days_per_week: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Efficiency Factor\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={scheduleConfig.efficiency_factor}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, efficiency_factor: parseFloat(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => setShowConfigModal(false)}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Save configuration logic here\n                    setShowConfigModal(false);\n                  }}\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\"\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Line Configuration Modal */}\n      {showLineConfigModal && selectedLineForConfig && editingLineConfig && (\n        <div \n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\"\n          onClick={() => {\n            setShowLineConfigModal(false);\n            setSelectedLineForConfig(null);\n            setEditingLineConfig(null);\n          }}\n        >\n          <div \n            className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"mt-3\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-sy-black-900\">\n                  Configure {selectedLineForConfig.line_name}\n                </h3>\n                <button\n                  onClick={() => {\n                    setShowLineConfigModal(false);\n                    setSelectedLineForConfig(null);\n                    setEditingLineConfig(null);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Hours per Shift\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.hours_per_shift}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, hours_per_shift: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Shifts per Day\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.shifts_per_day}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, shifts_per_day: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Days per Week\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.days_per_week}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, days_per_week: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Time Multiplier\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={editingLineConfig.time_multiplier}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, time_multiplier: parseFloat(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Start Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.start_time}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, start_time: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    End Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.end_time}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, end_time: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Lunch Break Duration (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.lunch_break_duration}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, lunch_break_duration: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Lunch Break Start Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.lunch_break_start}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, lunch_break_start: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Break Duration (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.break_duration}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, break_duration: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => {\n                    setShowLineConfigModal(false);\n                    setSelectedLineForConfig(null);\n                    setEditingLineConfig(null);\n                  }}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => updateLineConfig(selectedLineForConfig.id, editingLineConfig)}\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\"\n                >\n                  Save Configuration\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Schedule; \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}