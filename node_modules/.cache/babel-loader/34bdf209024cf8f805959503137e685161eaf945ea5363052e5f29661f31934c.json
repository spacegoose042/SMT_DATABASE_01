{"ast":null,"code":"var _jsxFileName = \"/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/TimelineView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Clock, Users, AlertTriangle } from 'lucide-react';\nimport { useSocket } from '../contexts/SocketContext.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimelineView = () => {\n  _s();\n  const [workOrders, setWorkOrders] = useState([]);\n  const [productionLines, setProductionLines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedWeeks, setSelectedWeeks] = useState(4);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedWorkOrder, setSelectedWorkOrder] = useState(null);\n  const [userInteractions, setUserInteractions] = useState(new Map());\n  const {\n    connected,\n    socketConnected,\n    onWorkOrderUpdate,\n    joinRooms,\n    roomUsers,\n    userCount,\n    onUserJoinedRoom,\n    onUserLeftRoom,\n    onTimelineInteraction,\n    sendTimelineInteraction,\n    getRoomUsers\n  } = useSocket();\n\n  // Join Socket.IO room for real-time timeline updates\n  useEffect(() => {\n    if (socketConnected) {\n      joinRooms(['timeline']);\n      // Get current room users\n      setTimeout(() => getRoomUsers('timeline'), 500);\n    }\n  }, [socketConnected, joinRooms, getRoomUsers]);\n\n  // Listen for user presence changes\n  useEffect(() => {\n    const cleanupJoined = onUserJoinedRoom(data => {\n      console.log(`👋 ${data.user.username} joined the timeline view`);\n      // Could show a notification here\n    });\n    const cleanupLeft = onUserLeftRoom(data => {\n      console.log(`👋 ${data.user.username} left the timeline view`);\n      // Clear any interactions from this user\n      setUserInteractions(prev => {\n        const newMap = new Map(prev);\n        newMap.delete(data.user.user_id);\n        return newMap;\n      });\n    });\n    return () => {\n      cleanupJoined();\n      cleanupLeft();\n    };\n  }, [onUserJoinedRoom, onUserLeftRoom]);\n\n  // Listen for timeline interactions from other users\n  useEffect(() => {\n    const cleanup = onTimelineInteraction(data => {\n      console.log(`🎯 ${data.user.username} interacted with ${data.work_order_number}`);\n      setUserInteractions(prev => {\n        const newMap = new Map(prev);\n        newMap.set(data.user.user_id, {\n          username: data.user.username,\n          work_order_id: data.work_order_id,\n          work_order_number: data.work_order_number,\n          timestamp: data.timestamp,\n          type: 'work_order_select'\n        });\n        return newMap;\n      });\n\n      // Clear interaction after 5 seconds\n      setTimeout(() => {\n        setUserInteractions(prev => {\n          const newMap = new Map(prev);\n          newMap.delete(data.user.user_id);\n          return newMap;\n        });\n      }, 5000);\n    });\n    return cleanup;\n  }, [onTimelineInteraction]);\n\n  // Listen for real-time work order updates (from both SSE and Socket.IO)\n  useEffect(() => {\n    const cleanup = onWorkOrderUpdate(update => {\n      console.log('📡 Received work order update:', update);\n\n      // Update the work order in our local state\n      setWorkOrders(prevOrders => {\n        return prevOrders.map(wo => {\n          if (wo.id === update.work_order.id) {\n            return {\n              ...wo,\n              status: update.work_order.status,\n              // Update other fields if available in the update\n              customer_name: update.work_order.customer_name || wo.customer_name,\n              assembly_number: update.work_order.assembly_number || wo.assembly_number,\n              line_name: update.work_order.line_name || wo.line_name,\n              quantity: update.work_order.quantity || wo.quantity,\n              trolley_number: update.work_order.trolley_number || wo.trolley_number\n            };\n          }\n          return wo;\n        });\n      });\n\n      // Update last updated timestamp\n      setLastUpdated(new Date().toLocaleTimeString());\n\n      // Show a brief notification (you could make this more sophisticated)\n      console.log(`✅ Updated ${update.work_order.work_order_number}: ${update.status_change.old_status} → ${update.status_change.new_status}`);\n    });\n    return cleanup;\n  }, [onWorkOrderUpdate]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const baseUrl = process.env.NODE_ENV === 'production' ? window.location.origin : 'https://smtdatabase01-production.up.railway.app';\n      const [timelineResponse, linesResponse] = await Promise.all([fetch(`${baseUrl}/api/schedule/timeline`), fetch(`${baseUrl}/api/production-lines`)]);\n      if (!timelineResponse.ok || !linesResponse.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const timelineData = await timelineResponse.json();\n      const linesData = await linesResponse.json();\n      const workOrdersData = timelineData.work_orders || [];\n\n      // 🐛 DEBUG: Check for duplicate or missing IDs\n      console.group('🔍 WORK ORDER ID ANALYSIS');\n      const idCounts = {};\n      const nullIds = [];\n      workOrdersData.forEach((wo, index) => {\n        if (!wo.id || wo.id === null || wo.id === undefined) {\n          nullIds.push({\n            index,\n            workOrder: wo.work_order_number\n          });\n        } else {\n          idCounts[wo.id] = (idCounts[wo.id] || 0) + 1;\n        }\n      });\n      console.log('📊 Work Orders with NULL/undefined IDs:', nullIds);\n      console.log('📊 ID frequency count:', idCounts);\n      console.log('📊 Duplicate IDs found:', Object.entries(idCounts).filter(([id, count]) => count > 1));\n      console.groupEnd();\n      setWorkOrders(workOrdersData);\n      setProductionLines(linesData.production_lines || []);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case '1st Side Ready':\n        return 'bg-sy-gold-500 text-sy-black-900';\n      case 'Ready':\n        return 'bg-sy-green-500 text-white';\n      case 'Ready*':\n        return 'bg-sy-green-400 text-sy-black-900';\n      case 'Missing TSM-125-01-L-DV':\n        return 'bg-red-500 text-white';\n      default:\n        return 'bg-gray-400 text-white';\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Not scheduled';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const formatDuration = hours => {\n    if (hours < 24) {\n      return `${hours.toFixed(1)}h`;\n    }\n    const days = Math.floor(hours / 8); // Assuming 8-hour work days\n    const remainingHours = hours % 8;\n    return remainingHours > 0 ? `${days}d ${remainingHours.toFixed(1)}h` : `${days}d`;\n  };\n  const groupWorkOrdersByLine = () => {\n    const grouped = {};\n\n    // Initialize with all active lines\n    productionLines.filter(line => line.active).forEach(line => {\n      grouped[line.line_name] = [];\n    });\n\n    // Add unassigned work orders\n    grouped['Unassigned'] = [];\n\n    // Group work orders\n    workOrders.forEach(wo => {\n      const lineName = wo.line_name || 'Unassigned';\n      if (grouped[lineName]) {\n        grouped[lineName].push(wo);\n      } else {\n        grouped[lineName] = [wo];\n      }\n    });\n    return grouped;\n  };\n\n  // Handle work order selection\n  const handleWorkOrderSelect = (workOrderId, workOrderNumber) => {\n    console.log('🎯 Selecting work order:', {\n      workOrderId,\n      workOrderNumber\n    });\n    console.log('📋 All work orders IDs:', workOrders.map(wo => ({\n      id: wo.id,\n      number: wo.work_order_number\n    })));\n    setSelectedWorkOrder(workOrderId);\n\n    // Broadcast selection to other users\n    sendTimelineInteraction('work_order_select', workOrderId, workOrderNumber);\n\n    // Clear selection after 3 seconds\n    setTimeout(() => {\n      setSelectedWorkOrder(null);\n    }, 3000);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-sy-black-50 flex items-center justify-center py-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-sy-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sy-black-700\",\n          children: \"Loading timeline...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-sy-black-50 flex items-center justify-center py-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"h-12 w-12 text-red-500 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900 mb-2\",\n          children: \"Error Loading Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sy-black-600 mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchData,\n          className: \"bg-sy-green-600 hover:bg-sy-green-700 text-white px-4 py-2 rounded-md\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this);\n  }\n  const groupedWorkOrders = groupWorkOrdersByLine();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-sy-black-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:flex sm:items-center sm:justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-2xl font-bold leading-tight tracking-tight text-sy-black-900\",\n                children: \"Production Timeline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-1 text-sm text-sy-black-600\",\n                children: [\"Real-time view of work orders across all production lines\", lastUpdated && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-sy-green-600\",\n                  children: [\"\\u2022 Last updated: \", lastUpdated]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 sm:mt-0 flex items-center space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `h-2 w-2 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-sy-black-600\",\n                  children: connected ? 'Live Updates' : 'Offline'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"weeks\",\n                  className: \"text-sm font-medium text-sy-black-700\",\n                  children: \"View:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"weeks\",\n                  value: selectedWeeks,\n                  onChange: e => setSelectedWeeks(Number(e.target.value)),\n                  className: \"rounded-md border border-sy-black-300 py-1 px-3 text-sm focus:border-sy-green-500 focus:outline-none focus:ring-1 focus:ring-sy-green-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 1,\n                    children: \"1 Week\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 2,\n                    children: \"2 Weeks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 4,\n                    children: \"4 Weeks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 8,\n                    children: \"8 Weeks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-sy-black-900\",\n              children: \"Schedule Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-4 text-sm text-sy-black-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Users, {\n                  className: \"h-4 w-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this), workOrders.length, \" work orders\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  className: \"h-4 w-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 19\n                }, this), productionLines.filter(l => l.active).length, \" active lines\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: Object.entries(groupedWorkOrders).map(([lineName, orders]) => {\n            var _productionLines$find;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-8 last:mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-lg font-semibold text-sy-black-900\",\n                  children: [lineName, lineName !== 'Unassigned' && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 text-sm text-sy-black-600\",\n                    children: [\"(\", (_productionLines$find = productionLines.find(l => l.line_name === lineName)) === null || _productionLines$find === void 0 ? void 0 : _productionLines$find.time_multiplier, \"x multiplier)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-sy-black-600\",\n                  children: [orders.length, \" work orders\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center py-8 text-sy-black-500\",\n                  children: \"No work orders scheduled for this line\"\n                }, `empty-${lineName}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grid grid-cols-12 gap-4 px-4 py-2 text-xs font-medium text-sy-black-500 uppercase tracking-wider border-b border-gray-200\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-span-1 text-center\",\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-span-4\",\n                      children: \"Work Order & Customer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-span-2\",\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-span-2 text-center\",\n                      children: \"Quantity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-span-2 text-center\",\n                      children: \"Ship Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-span-1 text-right\",\n                      children: \"Rev\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 23\n                  }, this), orders.map((wo, index) => {\n                    const isSelected = selectedWorkOrder === wo.id;\n                    const hasUserInteraction = Array.from(userInteractions.values()).some(interaction => interaction.work_order_id === wo.id);\n                    const interactingUser = Array.from(userInteractions.values()).find(interaction => interaction.work_order_id === wo.id);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `grid grid-cols-12 gap-4 p-4 rounded-lg border transition-all cursor-pointer relative ${isSelected ? 'bg-blue-100 border-blue-300 shadow-md' : hasUserInteraction ? 'bg-amber-50 border-amber-300' : 'bg-sy-black-50 border-gray-200 hover:border-sy-green-300'} items-center`,\n                      onClick: () => handleWorkOrderSelect(wo.id, wo.work_order_number),\n                      children: [hasUserInteraction && interactingUser && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"absolute -top-2 -right-2 bg-amber-500 text-white text-xs px-2 py-1 rounded-full shadow-md\",\n                        children: [\"\\uD83D\\uDC41\\uFE0F \", interactingUser.username]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 31\n                      }, this), isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"absolute -top-2 -left-2 bg-blue-500 text-white text-xs px-2 py-1 rounded-full shadow-md\",\n                        children: \"\\u2713 Selected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-span-1 text-center\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-sm font-medium text-sy-black-700\",\n                          children: [\"#\", index + 1]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 446,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-span-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm font-medium text-sy-black-900\",\n                          children: [\"WO \", wo.work_order_number]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 453,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm text-sy-black-600 truncate\",\n                          children: [wo.customer_name, \" - \", wo.assembly_number]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 456,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-span-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(wo.status)}`,\n                          children: wo.status\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 463,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-span-2 text-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm font-medium text-sy-black-900\",\n                          children: wo.quantity.toLocaleString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 470,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm text-sy-black-600\",\n                          children: formatDuration(wo.total_duration_hours)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 473,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 469,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-span-2 text-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm font-medium text-sy-black-900\",\n                          children: formatDate(wo.ship_date)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 480,\n                          columnNumber: 27\n                        }, this), wo.trolley_number && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm text-sy-black-600\",\n                          children: [\"Trolley \", wo.trolley_number]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 484,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 479,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-span-1 text-right\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-sy-black-600\",\n                          children: [\"Rev \", wo.revision]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 492,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 491,\n                        columnNumber: 25\n                      }, this)]\n                    }, `${lineName}-${wo.id || wo.work_order_number}-${index}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 27\n                    }, this);\n                  })]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)]\n            }, `line-${lineName}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(TimelineView, \"iuD3uUxjNn972unnm2k8Xb5ee5M=\", false, function () {\n  return [useSocket];\n});\n_c = TimelineView;\nexport default TimelineView;\nvar _c;\n$RefreshReg$(_c, \"TimelineView\");","map":{"version":3,"names":["React","useState","useEffect","Clock","Users","AlertTriangle","useSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","TimelineView","_s","workOrders","setWorkOrders","productionLines","setProductionLines","loading","setLoading","error","setError","selectedWeeks","setSelectedWeeks","lastUpdated","setLastUpdated","selectedWorkOrder","setSelectedWorkOrder","userInteractions","setUserInteractions","Map","connected","socketConnected","onWorkOrderUpdate","joinRooms","roomUsers","userCount","onUserJoinedRoom","onUserLeftRoom","onTimelineInteraction","sendTimelineInteraction","getRoomUsers","setTimeout","cleanupJoined","data","console","log","user","username","cleanupLeft","prev","newMap","delete","user_id","cleanup","work_order_number","set","work_order_id","timestamp","type","update","prevOrders","map","wo","id","work_order","status","customer_name","assembly_number","line_name","quantity","trolley_number","Date","toLocaleTimeString","status_change","old_status","new_status","fetchData","baseUrl","process","env","NODE_ENV","window","location","origin","timelineResponse","linesResponse","Promise","all","fetch","ok","Error","timelineData","json","linesData","workOrdersData","work_orders","group","idCounts","nullIds","forEach","index","undefined","push","workOrder","Object","entries","filter","count","groupEnd","production_lines","err","message","getStatusColor","formatDate","dateString","toLocaleDateString","month","day","formatDuration","hours","toFixed","days","Math","floor","remainingHours","groupWorkOrdersByLine","grouped","line","active","lineName","handleWorkOrderSelect","workOrderId","workOrderNumber","number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","groupedWorkOrders","htmlFor","value","onChange","e","Number","target","length","l","orders","_productionLines$find","find","time_multiplier","isSelected","hasUserInteraction","Array","from","values","some","interaction","interactingUser","toLocaleString","total_duration_hours","ship_date","revision","_c","$RefreshReg$"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/TimelineView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Clock, Users, AlertTriangle } from 'lucide-react';\nimport { useSocket } from '../contexts/SocketContext.tsx';\n\ninterface WorkOrder {\n  id: string;\n  work_order_number: string;\n  customer_name: string;\n  assembly_number: string;\n  revision: string;\n  quantity: number;\n  status: string;\n  kit_date: string | null;\n  ship_date: string | null;\n  setup_hours_estimated: number;\n  production_hours_estimated: number;\n  total_duration_hours: number;\n  trolley_number: number | null;\n  line_id: string | null;\n  line_name: string | null;\n  time_multiplier: number;\n  line_position: number | null;\n  scheduled_start_time: string | null;\n  scheduled_end_time: string | null;\n}\n\ninterface ProductionLine {\n  id: string;\n  line_name: string;\n  time_multiplier: number;\n  active: boolean;\n}\n\nconst TimelineView: React.FC = () => {\n  const [workOrders, setWorkOrders] = useState<WorkOrder[]>([]);\n  const [productionLines, setProductionLines] = useState<ProductionLine[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedWeeks, setSelectedWeeks] = useState(4);\n  const [lastUpdated, setLastUpdated] = useState<string>('');\n  const [selectedWorkOrder, setSelectedWorkOrder] = useState<string | null>(null);\n  const [userInteractions, setUserInteractions] = useState<Map<string, any>>(new Map());\n  \n  const { \n    connected, \n    socketConnected, \n    onWorkOrderUpdate, \n    joinRooms, \n    roomUsers, \n    userCount,\n    onUserJoinedRoom,\n    onUserLeftRoom,\n    onTimelineInteraction,\n    sendTimelineInteraction,\n    getRoomUsers\n  } = useSocket();\n\n  // Join Socket.IO room for real-time timeline updates\n  useEffect(() => {\n    if (socketConnected) {\n      joinRooms(['timeline']);\n      // Get current room users\n      setTimeout(() => getRoomUsers('timeline'), 500);\n    }\n  }, [socketConnected, joinRooms, getRoomUsers]);\n\n  // Listen for user presence changes\n  useEffect(() => {\n    const cleanupJoined = onUserJoinedRoom((data) => {\n      console.log(`👋 ${data.user.username} joined the timeline view`);\n      // Could show a notification here\n    });\n\n    const cleanupLeft = onUserLeftRoom((data) => {\n      console.log(`👋 ${data.user.username} left the timeline view`);\n      // Clear any interactions from this user\n      setUserInteractions(prev => {\n        const newMap = new Map(prev);\n        newMap.delete(data.user.user_id);\n        return newMap;\n      });\n    });\n\n    return () => {\n      cleanupJoined();\n      cleanupLeft();\n    };\n  }, [onUserJoinedRoom, onUserLeftRoom]);\n\n  // Listen for timeline interactions from other users\n  useEffect(() => {\n    const cleanup = onTimelineInteraction((data) => {\n      console.log(`🎯 ${data.user.username} interacted with ${data.work_order_number}`);\n      \n      setUserInteractions(prev => {\n        const newMap = new Map(prev);\n        newMap.set(data.user.user_id, {\n          username: data.user.username,\n          work_order_id: data.work_order_id,\n          work_order_number: data.work_order_number,\n          timestamp: data.timestamp,\n          type: 'work_order_select'\n        });\n        return newMap;\n      });\n\n      // Clear interaction after 5 seconds\n      setTimeout(() => {\n        setUserInteractions(prev => {\n          const newMap = new Map(prev);\n          newMap.delete(data.user.user_id);\n          return newMap;\n        });\n      }, 5000);\n    });\n\n    return cleanup;\n  }, [onTimelineInteraction]);\n\n  // Listen for real-time work order updates (from both SSE and Socket.IO)\n  useEffect(() => {\n    const cleanup = onWorkOrderUpdate((update) => {\n      console.log('📡 Received work order update:', update);\n      \n      // Update the work order in our local state\n      setWorkOrders(prevOrders => {\n        return prevOrders.map(wo => {\n          if (wo.id === update.work_order.id) {\n            return {\n              ...wo,\n              status: update.work_order.status,\n              // Update other fields if available in the update\n              customer_name: update.work_order.customer_name || wo.customer_name,\n              assembly_number: update.work_order.assembly_number || wo.assembly_number,\n              line_name: update.work_order.line_name || wo.line_name,\n              quantity: update.work_order.quantity || wo.quantity,\n              trolley_number: update.work_order.trolley_number || wo.trolley_number\n            };\n          }\n          return wo;\n        });\n      });\n\n      // Update last updated timestamp\n      setLastUpdated(new Date().toLocaleTimeString());\n      \n      // Show a brief notification (you could make this more sophisticated)\n      console.log(`✅ Updated ${update.work_order.work_order_number}: ${update.status_change.old_status} → ${update.status_change.new_status}`);\n    });\n\n    return cleanup;\n  }, [onWorkOrderUpdate]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const baseUrl = process.env.NODE_ENV === 'production' \n        ? window.location.origin \n        : 'https://smtdatabase01-production.up.railway.app';\n      const [timelineResponse, linesResponse] = await Promise.all([\n        fetch(`${baseUrl}/api/schedule/timeline`),\n        fetch(`${baseUrl}/api/production-lines`)\n      ]);\n\n      if (!timelineResponse.ok || !linesResponse.ok) {\n        throw new Error('Failed to fetch data');\n      }\n\n      const timelineData = await timelineResponse.json();\n      const linesData = await linesResponse.json();\n\n      const workOrdersData = timelineData.work_orders || [];\n      \n      // 🐛 DEBUG: Check for duplicate or missing IDs\n      console.group('🔍 WORK ORDER ID ANALYSIS');\n      const idCounts: { [key: string]: number } = {};\n      const nullIds: { index: number; workOrder: string }[] = [];\n      \n      workOrdersData.forEach((wo, index) => {\n        if (!wo.id || wo.id === null || wo.id === undefined) {\n          nullIds.push({ index, workOrder: wo.work_order_number });\n        } else {\n          idCounts[wo.id] = (idCounts[wo.id] || 0) + 1;\n        }\n      });\n      \n      console.log('📊 Work Orders with NULL/undefined IDs:', nullIds);\n      console.log('📊 ID frequency count:', idCounts);\n      console.log('📊 Duplicate IDs found:', Object.entries(idCounts).filter(([id, count]) => (count as number) > 1));\n      console.groupEnd();\n\n      setWorkOrders(workOrdersData);\n      setProductionLines(linesData.production_lines || []);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case '1st Side Ready': return 'bg-sy-gold-500 text-sy-black-900';\n      case 'Ready': return 'bg-sy-green-500 text-white';\n      case 'Ready*': return 'bg-sy-green-400 text-sy-black-900';\n      case 'Missing TSM-125-01-L-DV': return 'bg-red-500 text-white';\n      default: return 'bg-gray-400 text-white';\n    }\n  };\n\n  const formatDate = (dateString: string | null) => {\n    if (!dateString) return 'Not scheduled';\n    return new Date(dateString).toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric' \n    });\n  };\n\n  const formatDuration = (hours: number) => {\n    if (hours < 24) {\n      return `${hours.toFixed(1)}h`;\n    }\n    const days = Math.floor(hours / 8); // Assuming 8-hour work days\n    const remainingHours = hours % 8;\n    return remainingHours > 0 ? `${days}d ${remainingHours.toFixed(1)}h` : `${days}d`;\n  };\n\n  const groupWorkOrdersByLine = () => {\n    const grouped: { [key: string]: WorkOrder[] } = {};\n    \n    // Initialize with all active lines\n    productionLines.filter(line => line.active).forEach(line => {\n      grouped[line.line_name] = [];\n    });\n\n    // Add unassigned work orders\n    grouped['Unassigned'] = [];\n\n    // Group work orders\n    workOrders.forEach(wo => {\n      const lineName = wo.line_name || 'Unassigned';\n      if (grouped[lineName]) {\n        grouped[lineName].push(wo);\n      } else {\n        grouped[lineName] = [wo];\n      }\n    });\n\n    return grouped;\n  };\n\n  // Handle work order selection\n  const handleWorkOrderSelect = (workOrderId: string, workOrderNumber: string) => {\n    console.log('🎯 Selecting work order:', { workOrderId, workOrderNumber });\n    console.log('📋 All work orders IDs:', workOrders.map(wo => ({ id: wo.id, number: wo.work_order_number })));\n    \n    setSelectedWorkOrder(workOrderId);\n    \n    // Broadcast selection to other users\n    sendTimelineInteraction('work_order_select', workOrderId, workOrderNumber);\n    \n    // Clear selection after 3 seconds\n    setTimeout(() => {\n      setSelectedWorkOrder(null);\n    }, 3000);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-sy-black-50 flex items-center justify-center py-20\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-sy-green-500\"></div>\n          <span className=\"text-sy-black-700\">Loading timeline...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-sy-black-50 flex items-center justify-center py-20\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-sy-black-900 mb-2\">Error Loading Timeline</h3>\n          <p className=\"text-sy-black-600 mb-4\">{error}</p>\n          <button\n            onClick={fetchData}\n            className=\"bg-sy-green-600 hover:bg-sy-green-700 text-white px-4 py-2 rounded-md\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const groupedWorkOrders = groupWorkOrdersByLine();\n\n  return (\n    <div className=\"bg-sy-black-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-6\">\n            <div className=\"sm:flex sm:items-center sm:justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold leading-tight tracking-tight text-sy-black-900\">\n                  Production Timeline\n                </h1>\n                <p className=\"mt-1 text-sm text-sy-black-600\">\n                  Real-time view of work orders across all production lines\n                  {lastUpdated && (\n                    <span className=\"ml-2 text-xs text-sy-green-600\">\n                      • Last updated: {lastUpdated}\n                    </span>\n                  )}\n                </p>\n              </div>\n              <div className=\"mt-4 sm:mt-0 flex items-center space-x-4\">\n                {/* Real-time Status */}\n                <div className=\"flex items-center space-x-2\">\n                  <div className={`h-2 w-2 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n                  <span className=\"text-xs text-sy-black-600\">\n                    {connected ? 'Live Updates' : 'Offline'}\n                  </span>\n                </div>\n                \n                {/* Week selector */}\n                <div className=\"flex items-center space-x-2\">\n                  <label htmlFor=\"weeks\" className=\"text-sm font-medium text-sy-black-700\">\n                    View:\n                  </label>\n                  <select\n                    id=\"weeks\"\n                    value={selectedWeeks}\n                    onChange={(e) => setSelectedWeeks(Number(e.target.value))}\n                    className=\"rounded-md border border-sy-black-300 py-1 px-3 text-sm focus:border-sy-green-500 focus:outline-none focus:ring-1 focus:ring-sy-green-500\"\n                  >\n                    <option value={1}>1 Week</option>\n                    <option value={2}>2 Weeks</option>\n                    <option value={4}>4 Weeks</option>\n                    <option value={8}>8 Weeks</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Timeline Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"bg-white rounded-lg shadow\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium text-sy-black-900\">\n                Schedule Overview\n              </h3>\n              <div className=\"flex items-center space-x-4 text-sm text-sy-black-600\">\n                <div className=\"flex items-center\">\n                  <Users className=\"h-4 w-4 mr-1\" />\n                  {workOrders.length} work orders\n                </div>\n                <div className=\"flex items-center\">\n                  <Clock className=\"h-4 w-4 mr-1\" />\n                  {productionLines.filter(l => l.active).length} active lines\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"p-6\">\n            {Object.entries(groupedWorkOrders).map(([lineName, orders]) => (\n              <div key={`line-${lineName}`} className=\"mb-8 last:mb-0\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h4 className=\"text-lg font-semibold text-sy-black-900\">\n                    {lineName}\n                    {lineName !== 'Unassigned' && (\n                      <span className=\"ml-2 text-sm text-sy-black-600\">\n                        ({productionLines.find(l => l.line_name === lineName)?.time_multiplier}x multiplier)\n                      </span>\n                    )}\n                  </h4>\n                  <span className=\"text-sm text-sy-black-600\">\n                    {orders.length} work orders\n                  </span>\n                </div>\n\n                <div className=\"space-y-2\">\n                  {orders.length === 0 ? (\n                    <div key={`empty-${lineName}`} className=\"text-center py-8 text-sy-black-500\">\n                      No work orders scheduled for this line\n                    </div>\n                  ) : (\n                    <>\n                      {/* Column Headers */}\n                      <div className=\"grid grid-cols-12 gap-4 px-4 py-2 text-xs font-medium text-sy-black-500 uppercase tracking-wider border-b border-gray-200\">\n                        <div className=\"col-span-1 text-center\">#</div>\n                        <div className=\"col-span-4\">Work Order & Customer</div>\n                        <div className=\"col-span-2\">Status</div>\n                        <div className=\"col-span-2 text-center\">Quantity</div>\n                        <div className=\"col-span-2 text-center\">Ship Date</div>\n                        <div className=\"col-span-1 text-right\">Rev</div>\n                      </div>\n                      {orders.map((wo, index) => {\n                        const isSelected = selectedWorkOrder === wo.id;\n                        const hasUserInteraction = Array.from(userInteractions.values()).some(\n                          interaction => interaction.work_order_id === wo.id\n                        );\n                        const interactingUser = Array.from(userInteractions.values()).find(\n                          interaction => interaction.work_order_id === wo.id\n                        );\n\n                        return (\n                          <div\n                            key={`${lineName}-${wo.id || wo.work_order_number}-${index}`}\n                            className={`grid grid-cols-12 gap-4 p-4 rounded-lg border transition-all cursor-pointer relative ${\n                              isSelected \n                                ? 'bg-blue-100 border-blue-300 shadow-md' \n                                : hasUserInteraction\n                                ? 'bg-amber-50 border-amber-300'\n                                : 'bg-sy-black-50 border-gray-200 hover:border-sy-green-300'\n                            } items-center`}\n                            onClick={() => handleWorkOrderSelect(wo.id, wo.work_order_number)}\n                          >\n                            {/* User Interaction Indicator */}\n                            {hasUserInteraction && interactingUser && (\n                              <div className=\"absolute -top-2 -right-2 bg-amber-500 text-white text-xs px-2 py-1 rounded-full shadow-md\">\n                                👁️ {interactingUser.username}\n                              </div>\n                            )}\n\n                            {/* Selection Indicator */}\n                            {isSelected && (\n                              <div className=\"absolute -top-2 -left-2 bg-blue-500 text-white text-xs px-2 py-1 rounded-full shadow-md\">\n                                ✓ Selected\n                              </div>\n                            )}\n\n                            {/* Position */}\n                            <div className=\"col-span-1 text-center\">\n                              <span className=\"text-sm font-medium text-sy-black-700\">\n                                #{index + 1}\n                              </span>\n                            </div>\n                            \n                            {/* Work Order Info */}\n                            <div className=\"col-span-4\">\n                              <p className=\"text-sm font-medium text-sy-black-900\">\n                                WO {wo.work_order_number}\n                              </p>\n                              <p className=\"text-sm text-sy-black-600 truncate\">\n                                {wo.customer_name} - {wo.assembly_number}\n                              </p>\n                            </div>\n                        \n                        {/* Status */}\n                        <div className=\"col-span-2\">\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(wo.status)}`}>\n                            {wo.status}\n                          </span>\n                        </div>\n\n                        {/* Quantity */}\n                        <div className=\"col-span-2 text-center\">\n                          <p className=\"text-sm font-medium text-sy-black-900\">\n                            {wo.quantity.toLocaleString()}\n                          </p>\n                          <p className=\"text-sm text-sy-black-600\">\n                            {formatDuration(wo.total_duration_hours)}\n                          </p>\n                        </div>\n\n                        {/* Ship Date */}\n                        <div className=\"col-span-2 text-center\">\n                          <p className=\"text-sm font-medium text-sy-black-900\">\n                            {formatDate(wo.ship_date)}\n                          </p>\n                          {wo.trolley_number && (\n                            <p className=\"text-sm text-sy-black-600\">\n                              Trolley {wo.trolley_number}\n                            </p>\n                          )}\n                        </div>\n\n                        {/* Rev/Details */}\n                        <div className=\"col-span-1 text-right\">\n                          <p className=\"text-xs text-sy-black-600\">\n                            Rev {wo.revision}\n                          </p>\n                        </div>\n                      </div>\n                        );\n                      })}\n                    </>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimelineView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}