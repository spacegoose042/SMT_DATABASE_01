{"ast":null,"code":"import React,{useState}from'react';import QRCode from'react-qr-code';import{QrCodeIcon,ClipboardDocumentIcon,CheckIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const QRCodeDisplay=_ref=>{let{qrCode,workOrderNumber,lineNumber,size=128,className='',showLabel=true,clickable=true}=_ref;const[isModalOpen,setIsModalOpen]=useState(false);const[copied,setCopied]=useState(false);const handleCopy=async()=>{try{await navigator.clipboard.writeText(qrCode);setCopied(true);setTimeout(()=>setCopied(false),2000);}catch(error){console.error('Failed to copy QR code:',error);}};const handleQRClick=()=>{if(clickable){setIsModalOpen(true);}};if(!qrCode){return/*#__PURE__*/_jsxs(\"div\",{className:`flex items-center text-gray-400 ${className}`,children:[/*#__PURE__*/_jsx(QrCodeIcon,{className:\"h-5 w-5 mr-1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"No QR Code\"})]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:`inline-flex flex-col items-center ${className}`,children:[/*#__PURE__*/_jsx(\"div\",{className:`bg-white p-2 rounded-lg border-2 border-gray-200 ${clickable?'cursor-pointer hover:border-blue-300 transition-colors':''}`,onClick:handleQRClick,title:clickable?'Click to enlarge':undefined,children:/*#__PURE__*/_jsx(QRCode,{value:qrCode,size:size,style:{height:\"auto\",maxWidth:\"100%\",width:\"100%\"},viewBox:`0 0 256 256`})}),showLabel&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-900\",children:workOrderNumber}),lineNumber!==null&&lineNumber!==undefined&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[\"Line \",lineNumber]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400 font-mono mt-1\",children:qrCode})]})]}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-6 max-w-md w-full mx-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"QR Code\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsModalOpen(false),className:\"text-gray-400 hover:text-gray-600\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M6 18L18 6M6 6l12 12\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-4 rounded-lg border\",children:/*#__PURE__*/_jsx(QRCode,{value:qrCode,size:256,style:{height:\"auto\",maxWidth:\"100%\",width:\"100%\"},viewBox:`0 0 256 256`})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-medium text-gray-900\",children:workOrderNumber}),lineNumber!==null&&lineNumber!==undefined&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[\"Line Number: \",lineNumber]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-400 font-mono mt-2 p-2 bg-gray-100 rounded\",children:qrCode})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCopy,className:`inline-flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${copied?'bg-green-100 text-green-800 border border-green-200':'bg-blue-100 text-blue-800 border border-blue-200 hover:bg-blue-200'}`,children:copied?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckIcon,{className:\"h-4 w-4 mr-1\"}),\"Copied!\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ClipboardDocumentIcon,{className:\"h-4 w-4 mr-1\"}),\"Copy QR Code\"]})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsModalOpen(false),className:\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md text-sm font-medium hover:bg-gray-200 transition-colors\",children:\"Close\"})]})]})})]});};export default QRCodeDisplay;","map":{"version":3,"names":["React","useState","QRCode","QrCodeIcon","ClipboardDocumentIcon","CheckIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QRCodeDisplay","_ref","qrCode","workOrderNumber","lineNumber","size","className","showLabel","clickable","isModalOpen","setIsModalOpen","copied","setCopied","handleCopy","navigator","clipboard","writeText","setTimeout","error","console","handleQRClick","children","onClick","title","undefined","value","style","height","maxWidth","width","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/components/QRCodeDisplay.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCode from 'react-qr-code';\nimport { QrCodeIcon, ClipboardDocumentIcon, CheckIcon } from '@heroicons/react/24/outline';\n\ninterface QRCodeDisplayProps {\n  qrCode: string;\n  workOrderNumber: string;\n  lineNumber?: number | null;\n  size?: number;\n  className?: string;\n  showLabel?: boolean;\n  clickable?: boolean;\n}\n\nconst QRCodeDisplay: React.FC<QRCodeDisplayProps> = ({\n  qrCode,\n  workOrderNumber,\n  lineNumber,\n  size = 128,\n  className = '',\n  showLabel = true,\n  clickable = true\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(qrCode);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (error) {\n      console.error('Failed to copy QR code:', error);\n    }\n  };\n\n  const handleQRClick = () => {\n    if (clickable) {\n      setIsModalOpen(true);\n    }\n  };\n\n  if (!qrCode) {\n    return (\n      <div className={`flex items-center text-gray-400 ${className}`}>\n        <QrCodeIcon className=\"h-5 w-5 mr-1\" />\n        <span className=\"text-sm\">No QR Code</span>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {/* QR Code Display */}\n      <div className={`inline-flex flex-col items-center ${className}`}>\n        <div \n          className={`bg-white p-2 rounded-lg border-2 border-gray-200 ${clickable ? 'cursor-pointer hover:border-blue-300 transition-colors' : ''}`}\n          onClick={handleQRClick}\n          title={clickable ? 'Click to enlarge' : undefined}\n        >\n          <QRCode\n            value={qrCode}\n            size={size}\n            style={{ height: \"auto\", maxWidth: \"100%\", width: \"100%\" }}\n            viewBox={`0 0 256 256`}\n          />\n        </div>\n        \n        {showLabel && (\n          <div className=\"mt-2 text-center\">\n            <div className=\"text-sm font-medium text-gray-900\">{workOrderNumber}</div>\n            {lineNumber !== null && lineNumber !== undefined && (\n              <div className=\"text-xs text-gray-500\">Line {lineNumber}</div>\n            )}\n            <div className=\"text-xs text-gray-400 font-mono mt-1\">{qrCode}</div>\n          </div>\n        )}\n      </div>\n\n      {/* Modal for enlarged QR Code */}\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">QR Code</h3>\n              <button\n                onClick={() => setIsModalOpen(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            {/* Large QR Code */}\n            <div className=\"flex justify-center mb-4\">\n              <div className=\"bg-white p-4 rounded-lg border\">\n                <QRCode\n                  value={qrCode}\n                  size={256}\n                  style={{ height: \"auto\", maxWidth: \"100%\", width: \"100%\" }}\n                  viewBox={`0 0 256 256`}\n                />\n              </div>\n            </div>\n            \n            {/* QR Code Info */}\n            <div className=\"text-center mb-4\">\n              <div className=\"text-lg font-medium text-gray-900\">{workOrderNumber}</div>\n              {lineNumber !== null && lineNumber !== undefined && (\n                <div className=\"text-sm text-gray-500\">Line Number: {lineNumber}</div>\n              )}\n              <div className=\"text-sm text-gray-400 font-mono mt-2 p-2 bg-gray-100 rounded\">\n                {qrCode}\n              </div>\n            </div>\n            \n            {/* Copy Button */}\n            <div className=\"flex justify-center space-x-3\">\n              <button\n                onClick={handleCopy}\n                className={`inline-flex items-center px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  copied \n                    ? 'bg-green-100 text-green-800 border border-green-200' \n                    : 'bg-blue-100 text-blue-800 border border-blue-200 hover:bg-blue-200'\n                }`}\n              >\n                {copied ? (\n                  <>\n                    <CheckIcon className=\"h-4 w-4 mr-1\" />\n                    Copied!\n                  </>\n                ) : (\n                  <>\n                    <ClipboardDocumentIcon className=\"h-4 w-4 mr-1\" />\n                    Copy QR Code\n                  </>\n                )}\n              </button>\n              \n              <button\n                onClick={() => setIsModalOpen(false)}\n                className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md text-sm font-medium hover:bg-gray-200 transition-colors\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default QRCodeDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}