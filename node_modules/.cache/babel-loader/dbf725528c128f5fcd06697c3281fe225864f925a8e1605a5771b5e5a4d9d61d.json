{"ast":null,"code":"var _jsxFileName = \"/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/Schedule.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CalendarIcon, CogIcon, ArrowPathIcon, ExclamationTriangleIcon, CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext.tsx';\nimport { useSocket } from '../contexts/SocketContext.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    onWorkOrderUpdate\n  } = useSocket();\n\n  // State management\n  const [workOrders, setWorkOrders] = useState([]);\n  const [productionLines, setProductionLines] = useState([]);\n  const [scheduleConfig, setScheduleConfig] = useState({\n    hours_per_day: 8,\n    days_per_week: 5,\n    efficiency_factor: 1.0\n  });\n\n  // UI State\n  const [selectedLine, setSelectedLine] = useState('all');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [viewMode, setViewMode] = useState('timeline');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [draggedWorkOrder, setDraggedWorkOrder] = useState(null);\n  const [showConfigModal, setShowConfigModal] = useState(false);\n  const [showLineConfigModal, setShowLineConfigModal] = useState(false);\n  const [selectedLineForConfig, setSelectedLineForConfig] = useState(null);\n  const [editingLineConfig, setEditingLineConfig] = useState(null);\n  const [autoScheduleRunning, setAutoScheduleRunning] = useState(false);\n\n  // API base URL - use production for local development since local database isn't set up\n  const baseUrl = process.env.NODE_ENV === 'production' ? window.location.origin : 'https://smtdatabase01-production.up.railway.app';\n\n  // Fetch work orders\n  const fetchWorkOrders = useCallback(async () => {\n    try {\n      var _data$work_orders;\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/schedule/timeline`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch work orders');\n      const data = await response.json();\n      console.log('📥 API Response - Total work orders:', ((_data$work_orders = data.work_orders) === null || _data$work_orders === void 0 ? void 0 : _data$work_orders.length) || 0);\n\n      // Debug: Check scheduled work orders in API response\n      const scheduledInResponse = (data.work_orders || []).filter(wo => wo.scheduled_start_time);\n      console.log('📅 Work orders with scheduled_start_time in API response:', scheduledInResponse.length);\n      if (scheduledInResponse.length > 0) {\n        console.log('📋 First few scheduled work orders from API:', scheduledInResponse.slice(0, 3).map(wo => ({\n          number: wo.work_order_number,\n          start: wo.scheduled_start_time,\n          end: wo.scheduled_end_time,\n          line: wo.line_name\n        })));\n      }\n      setWorkOrders(data.work_orders || []);\n    } catch (err) {\n      console.error('Error fetching work orders:', err);\n      setError('Failed to load work orders');\n    }\n  }, [baseUrl]);\n\n  // Fetch production lines\n  const fetchProductionLines = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/production-lines`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch production lines');\n      const data = await response.json();\n      setProductionLines(data.production_lines || []);\n    } catch (err) {\n      console.error('Error fetching production lines:', err);\n      setError('Failed to load production lines');\n    }\n  }, [baseUrl]);\n\n  // Update work order schedule\n  const updateWorkOrderSchedule = useCallback(async (workOrderId, scheduleData) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/schedule/work-orders/${workOrderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(scheduleData)\n      });\n      if (!response.ok) throw new Error('Failed to update schedule');\n      return await response.json();\n    } catch (err) {\n      console.error('Error updating schedule:', err);\n      throw err;\n    }\n  }, [baseUrl]);\n\n  // Enhanced auto-schedule algorithm\n  const runAutoSchedule = useCallback(async () => {\n    if (!user || !['admin', 'scheduler'].includes(user.role)) {\n      setError('Insufficient permissions for auto-scheduling');\n      return;\n    }\n    console.log('🚀 Starting auto-schedule...');\n    console.log('👤 User role:', user.role);\n    console.log('🌐 Base URL:', baseUrl);\n    console.log('🔑 Auth token exists:', !!localStorage.getItem('auth_token'));\n    setAutoScheduleRunning(true);\n    try {\n      // Get available work orders (not completed, cancelled, or already scheduled)\n      const availableWorkOrders = workOrders.filter(wo => wo.status !== 'Completed' && wo.status !== 'Cancelled' && !wo.scheduled_start_time\n      // Note: clear_to_build filtering removed for now since column doesn't exist in DB\n      );\n\n      // Debug logging\n      console.log('Total work orders:', workOrders.length);\n      console.log('Available work orders:', availableWorkOrders.length);\n      console.log('Work order statuses:', [...new Set(workOrders.map(wo => wo.status))]);\n      console.log('Scheduled work orders:', workOrders.filter(wo => wo.scheduled_start_time).length);\n      console.log('Clear to build statuses:', [...new Set(workOrders.map(wo => wo.clear_to_build))]);\n\n      // Get available production lines (exclude Hand Placement and disabled lines)\n      const availableLines = productionLines.filter(line => line.status !== 'maintenance' && line.status !== 'down' && !line.line_name.toLowerCase().includes('hand') && line.auto_schedule_enabled !== false);\n\n      // Debug logging for production lines\n      console.log('Total production lines:', productionLines.length);\n      console.log('Available production lines:', availableLines.length);\n      console.log('Line statuses:', [...new Set(productionLines.map(line => line.status))]);\n      console.log('Line names:', productionLines.map(line => line.line_name));\n      if (availableWorkOrders.length === 0) {\n        const totalWorkOrders = workOrders.length;\n        const completedWorkOrders = workOrders.filter(wo => wo.status === 'Completed').length;\n        const cancelledWorkOrders = workOrders.filter(wo => wo.status === 'Cancelled').length;\n        const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time).length;\n        setError(`No work orders available for scheduling. Total: ${totalWorkOrders}, Completed: ${completedWorkOrders}, Cancelled: ${cancelledWorkOrders}, Already Scheduled: ${scheduledWorkOrders}`);\n        return;\n      }\n      if (availableLines.length === 0) {\n        const totalLines = productionLines.length;\n        const maintenanceLines = productionLines.filter(line => line.status === 'maintenance').length;\n        const downLines = productionLines.filter(line => line.status === 'down').length;\n        const handPlacementLines = productionLines.filter(line => line.line_name.toLowerCase().includes('hand')).length;\n        const disabledLines = productionLines.filter(line => line.auto_schedule_enabled === false).length;\n        setError(`No production lines available for scheduling. Total: ${totalLines}, Maintenance: ${maintenanceLines}, Down: ${downLines}, Hand Placement: ${handPlacementLines}, Auto-schedule Disabled: ${disabledLines}`);\n        return;\n      }\n\n      // Enhanced priority scoring system focused on due date adherence\n      const calculateWorkOrderPriority = wo => {\n        let priority = 0;\n\n        // Ship date priority - primary factor (finish as close to due date as possible)\n        if (wo.ship_date) {\n          const daysUntilShip = Math.ceil((new Date(wo.ship_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          if (daysUntilShip <= 0) {\n            // Past due - HIGHEST priority\n            priority += 1000 + Math.abs(daysUntilShip);\n          } else if (daysUntilShip <= 21) {\n            // Due within 3 weeks - high priority, closer to due date = higher priority\n            priority += 500 + (21 - daysUntilShip) * 20;\n          } else {\n            // Due further out - lower priority\n            priority += Math.max(0, 100 - daysUntilShip);\n          }\n        } else {\n          // No ship date - medium priority\n          priority += 200;\n        }\n\n        // Kit date priority (secondary factor)\n        if (wo.kit_date) {\n          const daysUntilKit = Math.ceil((new Date(wo.kit_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          if (daysUntilKit <= 7) {\n            priority += Math.max(0, 7 - daysUntilKit) * 5;\n          }\n        }\n\n        // Status priority (ready work orders should be scheduled)\n        const statusPriority = {\n          'Ready': 50,\n          'Ready*': 50,\n          '1st Side Ready': 45,\n          'In Progress': 40,\n          'Pending': 20,\n          'On Hold': 5\n        };\n        priority += statusPriority[wo.status] || 0;\n        return priority;\n      };\n\n      // Sort work orders by enhanced priority\n      const prioritizedWorkOrders = [...availableWorkOrders].sort((a, b) => {\n        const priorityA = calculateWorkOrderPriority(a);\n        const priorityB = calculateWorkOrderPriority(b);\n        return priorityB - priorityA; // Higher priority first\n      });\n\n      // Line scoring system\n      const calculateLineScore = (line, workOrder) => {\n        let score = 0;\n\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n        // Capacity utilization (prefer lines with more available capacity)\n        const utilizationRatio = line.available_capacity / (line.hours_per_shift * line.shifts_per_day * line.days_per_week);\n        score += (1 - utilizationRatio) * 20; // Higher score for less utilized lines\n\n        // Efficiency score (prefer more efficient lines)\n        score += (line.efficiency_target || 85) / 10;\n\n        // Time multiplier preference (prefer lines with lower multipliers for faster processing)\n        score += 1 / (line.time_multiplier || 1.0) * 10;\n\n        // Line type preference (prefer SMT over other types)\n        if (line.line_type === 'SMT') {\n          score += 15;\n        }\n\n        // Current utilization (prefer less busy lines)\n        score += (1 - (line.current_utilization || 0) / 100) * 10;\n        return score;\n      };\n\n      // Track scheduled work orders for conflict detection\n      const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time);\n\n      // Schedule work orders\n      for (const workOrder of prioritizedWorkOrders) {\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n        // Find best line for this work order\n        let bestLine = null;\n        let bestScore = -1;\n        let bestStartTime = null;\n        for (const line of availableLines) {\n          console.log(`🔍 Checking line ${line.line_name}:`);\n\n          // Calculate daily capacity for this line\n          const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n          console.log(`  Daily capacity: ${dailyCapacity} hours/day`);\n          console.log(`  Required duration: ${totalDurationHours} hours total`);\n\n          // Calculate how many days this work order will need\n          const daysRequired = Math.ceil(totalDurationHours / dailyCapacity);\n          console.log(`  Days required: ${daysRequired} days`);\n\n          // Check if work order can fit within daily capacity (even if it spans multiple days)\n          if (dailyCapacity === 0) {\n            console.log(`  ❌ No daily capacity configured`);\n            continue;\n          }\n\n          // Calculate line score\n          const lineScore = calculateLineScore(line, workOrder);\n          console.log(`  📊 Line score: ${lineScore}`);\n\n          // Find best available multi-day slot on this line (considering due dates)\n          const availableSlot = findBestMultiDaySlot(line, workOrder, scheduledWorkOrders, selectedDate, daysRequired);\n          console.log(`  ⏰ Available slot: ${availableSlot ? availableSlot.toISOString() : 'None'}`);\n          if (availableSlot && lineScore > bestScore) {\n            console.log(`  ✅ New best line!`);\n            bestLine = line;\n            bestScore = lineScore;\n            bestStartTime = availableSlot;\n          }\n        }\n        if (bestLine && bestStartTime) {\n          // Calculate end time for multi-day scheduling\n          const adjustedDuration = totalDurationHours * (bestLine.time_multiplier || 1.0);\n          const dailyCapacity = (bestLine.shifts_per_day || 1) * (bestLine.hours_per_shift || 8);\n          const daysRequired = Math.ceil(adjustedDuration / dailyCapacity);\n\n          // Calculate actual end time considering daily work hours\n          const endTime = new Date(bestStartTime);\n          const workingHoursPerDay = bestLine.hours_per_shift || 8;\n          if (daysRequired === 1) {\n            // Single day: just add the duration\n            endTime.setHours(endTime.getHours() + adjustedDuration);\n          } else {\n            // Multi-day: calculate based on working days and daily capacity\n            let remainingHours = adjustedDuration;\n            let currentDay = new Date(bestStartTime);\n            while (remainingHours > 0) {\n              const hoursThisDay = Math.min(remainingHours, workingHoursPerDay);\n              remainingHours -= hoursThisDay;\n              if (remainingHours > 0) {\n                // Move to next working day\n                currentDay.setDate(currentDay.getDate() + 1);\n                // Skip weekends if line doesn't work weekends\n                while ((bestLine.days_per_week || 5) === 5 && (currentDay.getDay() === 0 || currentDay.getDay() === 6)) {\n                  currentDay.setDate(currentDay.getDate() + 1);\n                }\n              } else {\n                // Last day - calculate exact end time\n                const [startHour] = (bestLine.start_time || '08:00').split(':').map(Number);\n                currentDay.setHours(startHour + hoursThisDay);\n              }\n            }\n            endTime.setTime(currentDay.getTime());\n          }\n          console.log(`📅 Scheduling work order ${workOrder.work_order_number} on ${bestLine.line_name}`);\n          console.log(`⏰ Start: ${bestStartTime.toISOString()}, End: ${endTime.toISOString()}`);\n\n          // Update work order with schedule\n          try {\n            await updateWorkOrderSchedule(workOrder.id, {\n              line_id: bestLine.id,\n              scheduled_start_time: bestStartTime.toISOString(),\n              scheduled_end_time: endTime.toISOString(),\n              line_position: 1\n            });\n            console.log(`✅ Successfully scheduled work order ${workOrder.work_order_number}`);\n          } catch (scheduleError) {\n            console.error(`❌ Failed to schedule work order ${workOrder.work_order_number}:`, scheduleError);\n            throw new Error(`Failed to schedule work order ${workOrder.work_order_number}: ${scheduleError.message}`);\n          }\n\n          // Add to scheduled work orders for conflict detection\n          scheduledWorkOrders.push({\n            ...workOrder,\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString()\n          });\n        }\n      }\n\n      // Refresh data\n      console.log('🔄 Refreshing work orders after auto-scheduling...');\n      await fetchWorkOrders();\n\n      // Debug: Check if work orders have scheduled times after refresh (use a ref to avoid stale closure)\n      setTimeout(() => {\n        const currentWorkOrders = workOrders; // This might be stale, let's remove this debug for now\n        console.log('🔄 Data refresh completed after auto-scheduling');\n      }, 100);\n      setSuccessMessage('Auto-schedule completed successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n      setError(null);\n    } catch (err) {\n      console.error('Auto-schedule error:', err);\n      setError('Auto-scheduling failed: ' + (err instanceof Error ? err.message : 'Unknown error'));\n    } finally {\n      setAutoScheduleRunning(false);\n    }\n  }, [workOrders, productionLines, selectedDate, user, updateWorkOrderSchedule, fetchWorkOrders]);\n\n  // Helper function to find best available multi-day time slot considering due dates\n  const findBestMultiDaySlot = (line, workOrder, scheduledWorkOrders, targetDate, daysRequired) => {\n    const earliestSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, targetDate, daysRequired);\n    if (!earliestSlot || !workOrder.ship_date) {\n      return earliestSlot;\n    }\n\n    // Calculate work order duration for end date calculation\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const shipDate = new Date(workOrder.ship_date);\n    const earliestDaysFromStart = Math.ceil(adjustedDuration / dailyCapacity);\n\n    // Calculate earliest finish date\n    const earliestEndDate = new Date(earliestSlot);\n    let remainingDays = earliestDaysFromStart;\n    while (remainingDays > 0) {\n      earliestEndDate.setDate(earliestEndDate.getDate() + 1);\n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = earliestEndDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n      remainingDays--;\n    }\n\n    // If earliest finish is more than 3 weeks before due date, try to find a later slot\n    const threeWeeksBeforeDue = new Date(shipDate);\n    threeWeeksBeforeDue.setDate(threeWeeksBeforeDue.getDate() - 21);\n    if (earliestEndDate < threeWeeksBeforeDue) {\n      // Try to find a slot that finishes closer to the due date\n      const targetStartDate = new Date(threeWeeksBeforeDue);\n      targetStartDate.setDate(targetStartDate.getDate() - earliestDaysFromStart);\n      const laterSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, targetStartDate.toISOString().split('T')[0], daysRequired);\n      if (laterSlot) {\n        return laterSlot;\n      }\n    }\n    return earliestSlot;\n  };\n\n  // Helper function to find earliest available multi-day time slot\n  const findEarliestMultiDaySlot = (line, workOrder, scheduledWorkOrders, targetDate, daysRequired) => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate daily capacity and work order duration\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n    // Start checking from the target date\n    let checkDate = new Date(targetDate);\n    const maxLookAhead = 45; // Don't look more than 45 days ahead\n\n    for (let dayOffset = 0; dayOffset < maxLookAhead; dayOffset++) {\n      const currentCheckDate = new Date(checkDate);\n      currentCheckDate.setDate(checkDate.getDate() + dayOffset);\n\n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = currentCheckDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n\n      // Check if we have consecutive available days starting from this date\n      let consecutiveDaysAvailable = true;\n      for (let dayIndex = 0; dayIndex < daysRequired; dayIndex++) {\n        const checkingDate = new Date(currentCheckDate);\n        checkingDate.setDate(currentCheckDate.getDate() + dayIndex);\n\n        // Skip weekends for additional days too\n        const checkingDayOfWeek = checkingDate.getDay();\n        if ((line.days_per_week || 5) === 5 && (checkingDayOfWeek === 0 || checkingDayOfWeek === 6)) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n\n        // Get existing schedules for this line on this specific date\n        const daySchedules = scheduledWorkOrders.filter(wo => wo.line_id === line.id && wo.scheduled_start_time && wo.scheduled_end_time && new Date(wo.scheduled_start_time).toDateString() === checkingDate.toDateString());\n\n        // Calculate how much capacity is used this day\n        const usedCapacity = daySchedules.reduce((total, wo) => {\n          const start = new Date(wo.scheduled_start_time);\n          const end = new Date(wo.scheduled_end_time);\n          const duration = (end.getTime() - start.getTime()) / (1000 * 60 * 60); // Convert to hours\n          return total + duration;\n        }, 0);\n\n        // Check if we have enough remaining capacity for this day's portion\n        const dailyHoursNeeded = Math.min(totalDurationHours - dayIndex * dailyCapacity, dailyCapacity);\n        if (usedCapacity + dailyHoursNeeded > dailyCapacity) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n      }\n      if (consecutiveDaysAvailable) {\n        // Found a valid starting date - return the start time\n        const startTime = new Date(currentCheckDate);\n        startTime.setHours(startHour, startMinute, 0, 0);\n        return startTime;\n      }\n    }\n    return null;\n  };\n\n  // Helper function to find earliest available time slot\n  const findEarliestAvailableSlot = (line, workOrder, scheduledWorkOrders, targetDate) => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate work order duration\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n\n    // Get existing schedules for this line on the target date\n    const lineSchedules = scheduledWorkOrders.filter(wo => wo.line_id === line.id && wo.scheduled_start_time && wo.scheduled_end_time && new Date(wo.scheduled_start_time).toDateString() === new Date(targetDate).toDateString()).sort((a, b) => new Date(a.scheduled_start_time).getTime() - new Date(b.scheduled_start_time).getTime());\n\n    // Start with line opening time\n    let currentTime = new Date(targetDate);\n    currentTime.setHours(startHour, startMinute, 0, 0);\n\n    // Check each potential time slot\n    while (currentTime.getHours() < endHour) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setHours(slotEndTime.getHours() + adjustedDuration);\n\n      // Check if slot extends beyond line closing time\n      if (slotEndTime.getHours() > endHour) {\n        // Move to next day\n        currentTime.setDate(currentTime.getDate() + 1);\n        currentTime.setHours(startHour, startMinute, 0, 0);\n        continue;\n      }\n\n      // Check for conflicts with existing schedules\n      const hasConflict = lineSchedules.some(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time);\n        const scheduleEnd = new Date(schedule.scheduled_end_time);\n        return currentTime >= scheduleStart && currentTime < scheduleEnd || slotEndTime > scheduleStart && slotEndTime <= scheduleEnd || currentTime <= scheduleStart && slotEndTime >= scheduleEnd;\n      });\n      if (!hasConflict) {\n        return currentTime;\n      }\n\n      // Move to next potential slot (after the conflicting schedule)\n      const nextConflict = lineSchedules.find(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time);\n        return scheduleStart >= currentTime;\n      });\n      if (nextConflict) {\n        currentTime = new Date(nextConflict.scheduled_end_time);\n      } else {\n        // No more conflicts, but check if we still have time today\n        if (currentTime.getHours() + adjustedDuration <= endHour) {\n          return currentTime;\n        } else {\n          // Move to next day\n          currentTime.setDate(currentTime.getDate() + 1);\n          currentTime.setHours(startHour, startMinute, 0, 0);\n        }\n      }\n    }\n    return null;\n  };\n\n  // Line configuration functions\n  const openLineConfig = line => {\n    setSelectedLineForConfig(line);\n    setEditingLineConfig({\n      hours_per_shift: line.hours_per_shift || 8,\n      shifts_per_day: line.shifts_per_day || 1,\n      days_per_week: line.days_per_week || 5,\n      time_multiplier: line.time_multiplier || 1.0,\n      start_time: line.start_time || '08:00',\n      end_time: line.end_time || '17:00',\n      lunch_break_duration: line.lunch_break_duration || 60,\n      lunch_break_start: line.lunch_break_start || '12:00',\n      break_duration: line.break_duration || 15,\n      auto_schedule_enabled: true,\n      maintenance_interval_days: 30,\n      efficiency_target: 85\n    });\n    setShowLineConfigModal(true);\n  };\n  const updateLineConfig = async (lineId, config) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      console.log('Updating line config for:', lineId, 'with config:', config);\n      const response = await fetch(`${baseUrl}/api/production-lines/${lineId}/config`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(config)\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Response error:', errorData);\n        throw new Error(`Failed to update line configuration: ${response.status} ${errorData}`);\n      }\n      const result = await response.json();\n      console.log('Update successful:', result);\n\n      // Refresh production lines data\n      await fetchProductionLines();\n      setShowLineConfigModal(false);\n      setSelectedLineForConfig(null);\n      setEditingLineConfig(null);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(`Line configuration updated successfully for ${selectedLineForConfig === null || selectedLineForConfig === void 0 ? void 0 : selectedLineForConfig.line_name}`);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      console.error('Error updating line config:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update line configuration');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = workOrder => {\n    setDraggedWorkOrder(workOrder);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = async (e, targetLineId, targetTime) => {\n    e.preventDefault();\n    if (!draggedWorkOrder) return;\n    try {\n      const targetDateTime = new Date(`${selectedDate}T${targetTime}`);\n      const endDateTime = new Date(targetDateTime);\n\n      // Calculate total duration from available time fields\n      const setupHours = draggedWorkOrder.setup_hours_estimated || 0;\n      const productionHours = draggedWorkOrder.production_time_hours_estimated || 0;\n      const productionDays = draggedWorkOrder.production_time_days_estimated || 0;\n      const totalDurationHours = setupHours + productionHours + productionDays * 8;\n      endDateTime.setHours(endDateTime.getHours() + totalDurationHours);\n      await updateWorkOrderSchedule(draggedWorkOrder.id, {\n        line_id: targetLineId,\n        scheduled_start_time: targetDateTime.toISOString(),\n        scheduled_end_time: endDateTime.toISOString()\n      });\n\n      // Refresh data\n      await fetchWorkOrders();\n      setDraggedWorkOrder(null);\n    } catch (err) {\n      console.error('Drop error:', err);\n      setError('Failed to schedule work order');\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchWorkOrders(), fetchProductionLines()]);\n      setLoading(false);\n    };\n    loadData();\n  }, [fetchWorkOrders, fetchProductionLines]);\n\n  // Real-time updates - using the context's event system\n  useEffect(() => {\n    const unsubscribe = onWorkOrderUpdate(() => {\n      fetchWorkOrders();\n    });\n    return unsubscribe;\n  }, [onWorkOrderUpdate, fetchWorkOrders]);\n\n  // Filter work orders by selected line\n  const filteredWorkOrders = selectedLine === 'all' ? workOrders : workOrders.filter(wo => wo.line_name === selectedLine);\n\n  // Generate timeline slots\n  const generateTimelineSlots = () => {\n    const slots = [];\n    filteredWorkOrders.forEach((workOrder, index) => {\n      if (workOrder.scheduled_start_time) {\n        const startTime = new Date(workOrder.scheduled_start_time);\n        const endTime = workOrder.scheduled_end_time ? new Date(workOrder.scheduled_end_time) : startTime;\n        const duration = (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60); // hours\n\n        slots.push({\n          workOrder,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          duration,\n          position: index\n        });\n      }\n    });\n    return slots;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-sy-black-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n          className: \"h-8 w-8 text-sy-green-600 mx-auto mb-4 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sy-black-600\",\n          children: \"Loading schedule...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-sy-black-900\",\n          children: \"Production Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-sy-black-600\",\n          children: \"Manage and optimize production scheduling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfigModal(true),\n          className: \"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-sy-black-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500\",\n          children: [/*#__PURE__*/_jsxDEV(CogIcon, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 13\n          }, this), \"Config\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 11\n        }, this), user && ['admin', 'scheduler'].includes(user.role) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: runAutoSchedule,\n            disabled: autoScheduleRunning,\n            className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sy-green-600 hover:bg-sy-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500 disabled:opacity-50\",\n            children: [autoScheduleRunning ? /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n              className: \"h-4 w-4 mr-2 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(CalendarIcon, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 19\n            }, this), autoScheduleRunning ? 'Scheduling...' : 'Auto Schedule']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-sy-black-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 mr-1\",\n              children: \"Manual Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this), \"Hand Placement excluded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n          className: \"h-5 w-5 text-red-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-red-800\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-700\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-50 border border-green-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: \"h-5 w-5 text-green-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-green-800\",\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-green-700\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: selectedDate,\n            onChange: e => setSelectedDate(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Production Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLine,\n            onChange: e => setSelectedLine(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Lines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 15\n            }, this), productionLines.map(line => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: line.line_name,\n              children: [line.line_name, line.line_name.toLowerCase().includes('hand') ? ' (Manual Only)' : '']\n            }, line.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"View Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: viewMode,\n            onChange: e => setViewMode(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"timeline\",\n              children: \"Timeline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"calendar\",\n              children: \"Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"list\",\n              children: \"List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-sy-black-600\",\n            children: [filteredWorkOrders.length, \" work orders\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 15\n            }, this), filteredWorkOrders.filter(wo => wo.scheduled_start_time).length, \" scheduled\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 7\n    }, this), viewMode === 'timeline' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Timeline View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid bg-gray-50 border-b border-gray-200\",\n            style: {\n              gridTemplateColumns: '200px repeat(12, 1fr)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-700\",\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 17\n            }, this), Array.from({\n              length: 12\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-700 text-center border-l border-gray-200\",\n              children: [8 + i, \":00\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 15\n          }, this), productionLines.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid border-b border-gray-200\",\n            style: {\n              gridTemplateColumns: '200px repeat(12, 1fr)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-900 bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: line.line_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 25\n                  }, this), line.line_name.toLowerCase().includes('hand') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\",\n                    children: \"Manual Only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1038,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 23\n                }, this), user && ['admin', 'scheduler'].includes(user.role) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openLineConfig(line),\n                  className: \"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-sy-black-700 bg-white hover:bg-gray-50\",\n                  title: \"Configure line settings\",\n                  children: /*#__PURE__*/_jsxDEV(CogIcon, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1033,\n              columnNumber: 19\n            }, this), Array.from({\n              length: 12\n            }, (_, i) => {\n              const timeSlot = `${8 + i}:00`;\n              const scheduledWorkOrder = generateTimelineSlots().find(slot => slot.workOrder.line_name === line.line_name && slot.startTime === timeSlot);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 border-l border-gray-200 min-h-[60px] relative\",\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, line.id, timeSlot),\n                children: scheduledWorkOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-sy-green-100 border border-sy-green-300 rounded p-2 text-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-sy-green-800\",\n                    children: scheduledWorkOrder.workOrder.work_order_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1071,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sy-green-600\",\n                    children: [scheduledWorkOrder.duration, \"h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1074,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1070,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-400 text-xs\",\n                  children: \"Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1063,\n                columnNumber: 23\n              }, this);\n            })]\n          }, line.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 9\n    }, this), viewMode === 'list' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Work Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Work Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Assembly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Clear to Build\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Ship Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Scheduled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredWorkOrders.map(workOrder => /*#__PURE__*/_jsxDEV(\"tr\", {\n              draggable: workOrder.clear_to_build,\n              onDragStart: () => workOrder.clear_to_build && handleDragStart(workOrder),\n              className: `hover:bg-gray-50 ${workOrder.clear_to_build ? 'cursor-move' : 'cursor-not-allowed opacity-60'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-sy-black-900\",\n                children: workOrder.work_order_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.customer_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.assembly_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${workOrder.status === 'Completed' ? 'bg-green-100 text-green-800' : workOrder.status === 'Cancelled' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: workOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1149,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${workOrder.clear_to_build ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                  children: workOrder.clear_to_build ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1158,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1157,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.ship_date ? new Date(workOrder.ship_date).toLocaleDateString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: [workOrder.production_time_hours_estimated || 0, \"h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.scheduled_start_time ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    className: \"h-4 w-4 text-green-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 27\n                  }, this), new Date(workOrder.scheduled_start_time).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1172,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(XCircleIcon, {\n                    className: \"h-4 w-4 text-red-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1178,\n                    columnNumber: 27\n                  }, this), \"Not scheduled\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1177,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"text-sy-green-600 hover:text-sy-green-900\",\n                  onClick: () => {\n                    // TODO: Add toggle clear to build functionality\n                    console.log('Toggle clear to build for:', workOrder.work_order_number);\n                  },\n                  children: workOrder.clear_to_build ? 'Mark Not Ready' : 'Mark Ready'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1184,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1183,\n                columnNumber: 21\n              }, this)]\n            }, workOrder.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 9\n    }, this), showConfigModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-sy-black-900 mb-4\",\n            children: \"Schedule Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Hours per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: scheduleConfig.hours_per_day,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  hours_per_day: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Days per Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: scheduleConfig.days_per_week,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  days_per_week: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Efficiency Factor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                value: scheduleConfig.efficiency_factor,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  efficiency_factor: parseFloat(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1238,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowConfigModal(false),\n              className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // Save configuration logic here\n                setShowConfigModal(false);\n              },\n              className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 9\n    }, this), showLineConfigModal && selectedLineForConfig && editingLineConfig && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      onClick: () => {\n        setShowLineConfigModal(false);\n        setSelectedLineForConfig(null);\n        setEditingLineConfig(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-sy-black-900\",\n              children: [\"Configure \", selectedLineForConfig.line_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowLineConfigModal(false);\n                setSelectedLineForConfig(null);\n                setEditingLineConfig(null);\n              },\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"h-6 w-6\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M6 18L18 6M6 6l12 12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1298,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Hours per Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.hours_per_shift,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  hours_per_shift: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1308,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Shifts per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.shifts_per_day,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  shifts_per_day: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Days per Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.days_per_week,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  days_per_week: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1332,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Time Multiplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                value: editingLineConfig.time_multiplier,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  time_multiplier: parseFloat(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1344,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.start_time,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  start_time: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1357,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1366,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.end_time,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  end_time: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1369,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Lunch Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.lunch_break_duration,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  lunch_break_duration: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1381,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Lunch Break Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.lunch_break_start,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  lunch_break_start: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1393,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1402,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.break_duration,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  break_duration: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1405,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1401,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowLineConfigModal(false);\n                setSelectedLineForConfig(null);\n                setEditingLineConfig(null);\n              },\n              className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateLineConfig(selectedLineForConfig.id, editingLineConfig),\n              className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\",\n              children: \"Save Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1425,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1284,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1272,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 875,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"qwRJ+2Yb+7ZwhMmlxIRweB9uPC8=\", false, function () {\n  return [useAuth, useSocket];\n});\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CalendarIcon","CogIcon","ArrowPathIcon","ExclamationTriangleIcon","CheckCircleIcon","XCircleIcon","useAuth","useSocket","jsxDEV","_jsxDEV","Schedule","_s","user","onWorkOrderUpdate","workOrders","setWorkOrders","productionLines","setProductionLines","scheduleConfig","setScheduleConfig","hours_per_day","days_per_week","efficiency_factor","selectedLine","setSelectedLine","selectedDate","setSelectedDate","Date","toISOString","split","viewMode","setViewMode","loading","setLoading","error","setError","successMessage","setSuccessMessage","draggedWorkOrder","setDraggedWorkOrder","showConfigModal","setShowConfigModal","showLineConfigModal","setShowLineConfigModal","selectedLineForConfig","setSelectedLineForConfig","editingLineConfig","setEditingLineConfig","autoScheduleRunning","setAutoScheduleRunning","baseUrl","process","env","NODE_ENV","window","location","origin","fetchWorkOrders","_data$work_orders","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","console","log","work_orders","length","scheduledInResponse","filter","wo","scheduled_start_time","slice","map","number","work_order_number","start","end","scheduled_end_time","line","line_name","err","fetchProductionLines","production_lines","updateWorkOrderSchedule","workOrderId","scheduleData","method","body","JSON","stringify","runAutoSchedule","includes","role","availableWorkOrders","status","Set","clear_to_build","availableLines","toLowerCase","auto_schedule_enabled","totalWorkOrders","completedWorkOrders","cancelledWorkOrders","scheduledWorkOrders","totalLines","maintenanceLines","downLines","handPlacementLines","disabledLines","calculateWorkOrderPriority","priority","ship_date","daysUntilShip","Math","ceil","getTime","abs","max","kit_date","daysUntilKit","statusPriority","prioritizedWorkOrders","sort","a","b","priorityA","priorityB","calculateLineScore","workOrder","score","setupHours","setup_hours_estimated","productionHours","production_time_hours_estimated","productionDays","production_time_days_estimated","totalDurationHours","utilizationRatio","available_capacity","hours_per_shift","shifts_per_day","efficiency_target","time_multiplier","line_type","current_utilization","bestLine","bestScore","bestStartTime","dailyCapacity","daysRequired","lineScore","availableSlot","findBestMultiDaySlot","adjustedDuration","endTime","workingHoursPerDay","setHours","getHours","remainingHours","currentDay","hoursThisDay","min","setDate","getDate","getDay","startHour","start_time","Number","setTime","id","line_id","line_position","scheduleError","message","push","setTimeout","currentWorkOrders","targetDate","earliestSlot","findEarliestMultiDaySlot","shipDate","earliestDaysFromStart","earliestEndDate","remainingDays","dayOfWeek","threeWeeksBeforeDue","targetStartDate","laterSlot","startTimeStr","endTimeStr","end_time","startMinute","endHour","endMinute","checkDate","maxLookAhead","dayOffset","currentCheckDate","consecutiveDaysAvailable","dayIndex","checkingDate","checkingDayOfWeek","daySchedules","toDateString","usedCapacity","reduce","total","duration","dailyHoursNeeded","startTime","findEarliestAvailableSlot","lineSchedules","currentTime","slotEndTime","hasConflict","some","schedule","scheduleStart","scheduleEnd","nextConflict","find","openLineConfig","lunch_break_duration","lunch_break_start","break_duration","maintenance_interval_days","updateLineConfig","lineId","config","errorData","text","result","handleDragStart","handleDragOver","e","preventDefault","handleDrop","targetLineId","targetTime","targetDateTime","endDateTime","loadData","Promise","all","unsubscribe","filteredWorkOrders","generateTimelineSlots","slots","forEach","index","toTimeString","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","value","onChange","target","style","gridTemplateColumns","Array","from","_","i","title","timeSlot","scheduledWorkOrder","slot","onDragOver","onDrop","draggable","onDragStart","customer_name","assembly_number","toLocaleDateString","prev","parseInt","step","parseFloat","stopPropagation","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/Schedule.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  CalendarIcon, \n  CogIcon, \n  ArrowPathIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  XCircleIcon\n} from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext.tsx';\nimport { useSocket } from '../contexts/SocketContext.tsx';\n\ninterface WorkOrder {\n  id: string;\n  work_order_number: string;\n  quantity: number;\n  status: string;\n  clear_to_build: boolean; // New field\n  kit_date: string | null;\n  ship_date: string | null;\n  setup_hours_estimated: number | null;\n  production_time_hours_estimated: number | null;\n  production_time_days_estimated: number | null;\n  setup_hours_actual: number | null;\n  production_time_hours_actual: number | null;\n  production_time_days_actual: number | null;\n  completion_date: string | null;\n  trolley_number: number | null;\n  line_id: string | null;\n  line_position: number | null;\n  scheduled_start_time: string | null;\n  scheduled_end_time: string | null;\n  is_hand_placed: boolean;\n  created_at: string;\n  updated_at: string;\n  assembly_number: string;\n  revision: string;\n  description: string | null;\n  customer_name: string;\n  customer_id: string;\n  line_name: string | null;\n  line_type: string | null;\n}\n\ninterface ProductionLine {\n  id: string;\n  line_name: string;\n  line_type: string;\n  status: string;\n  current_utilization: number;\n  available_capacity: number;\n  time_multiplier: number;\n  hours_per_shift: number;\n  shifts_per_day: number;\n  days_per_week: number;\n  start_time: string;\n  end_time: string;\n  lunch_break_duration: number;\n  lunch_break_start: string;\n  break_duration: number;\n  auto_schedule_enabled?: boolean;\n  maintenance_interval_days?: number;\n  efficiency_target?: number;\n  next_available_slot?: string;\n}\n\ninterface ScheduleConfig {\n  hours_per_day: number;\n  days_per_week: number;\n  efficiency_factor: number;\n}\n\ninterface LineConfig {\n  hours_per_shift: number;\n  shifts_per_day: number;\n  days_per_week: number;\n  time_multiplier: number;\n  start_time: string;\n  end_time: string;\n  lunch_break_duration: number;\n  lunch_break_start: string;\n  break_duration: number;\n  auto_schedule_enabled: boolean;\n  maintenance_interval_days: number;\n  efficiency_target: number;\n}\n\ninterface TimelineSlot {\n  workOrder: WorkOrder;\n  startTime: string;\n  endTime: string;\n  duration: number;\n  position: number;\n}\n\nconst Schedule: React.FC = () => {\n  const { user } = useAuth();\n  const { onWorkOrderUpdate } = useSocket();\n  \n  // State management\n  const [workOrders, setWorkOrders] = useState<WorkOrder[]>([]);\n  const [productionLines, setProductionLines] = useState<ProductionLine[]>([]);\n  const [scheduleConfig, setScheduleConfig] = useState<ScheduleConfig>({\n    hours_per_day: 8,\n    days_per_week: 5,\n    efficiency_factor: 1.0\n  });\n  \n  // UI State\n  const [selectedLine, setSelectedLine] = useState<string>('all');\n  const [selectedDate, setSelectedDate] = useState<string>(new Date().toISOString().split('T')[0]);\n  const [viewMode, setViewMode] = useState<'timeline' | 'calendar' | 'list'>('timeline');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [draggedWorkOrder, setDraggedWorkOrder] = useState<WorkOrder | null>(null);\n  const [showConfigModal, setShowConfigModal] = useState(false);\n  const [showLineConfigModal, setShowLineConfigModal] = useState(false);\n  const [selectedLineForConfig, setSelectedLineForConfig] = useState<ProductionLine | null>(null);\n  const [editingLineConfig, setEditingLineConfig] = useState<LineConfig | null>(null);\n  const [autoScheduleRunning, setAutoScheduleRunning] = useState(false);\n\n  // API base URL - use production for local development since local database isn't set up\n  const baseUrl = process.env.NODE_ENV === 'production' \n    ? window.location.origin\n    : 'https://smtdatabase01-production.up.railway.app';\n\n  // Fetch work orders\n  const fetchWorkOrders = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/schedule/timeline`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) throw new Error('Failed to fetch work orders');\n      \n      const data = await response.json();\n      console.log('📥 API Response - Total work orders:', data.work_orders?.length || 0);\n      \n      // Debug: Check scheduled work orders in API response\n      const scheduledInResponse = (data.work_orders || []).filter((wo: WorkOrder) => wo.scheduled_start_time);\n      console.log('📅 Work orders with scheduled_start_time in API response:', scheduledInResponse.length);\n      \n      if (scheduledInResponse.length > 0) {\n        console.log('📋 First few scheduled work orders from API:', scheduledInResponse.slice(0, 3).map((wo: WorkOrder) => ({\n          number: wo.work_order_number,\n          start: wo.scheduled_start_time,\n          end: wo.scheduled_end_time,\n          line: wo.line_name\n        })));\n      }\n      \n      setWorkOrders(data.work_orders || []);\n    } catch (err) {\n      console.error('Error fetching work orders:', err);\n      setError('Failed to load work orders');\n    }\n  }, [baseUrl]);\n\n  // Fetch production lines\n  const fetchProductionLines = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/production-lines`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) throw new Error('Failed to fetch production lines');\n      \n      const data = await response.json();\n      setProductionLines(data.production_lines || []);\n    } catch (err) {\n      console.error('Error fetching production lines:', err);\n      setError('Failed to load production lines');\n    }\n  }, [baseUrl]);\n\n  // Update work order schedule\n  const updateWorkOrderSchedule = useCallback(async (workOrderId: string, scheduleData: any) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/schedule/work-orders/${workOrderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(scheduleData)\n      });\n\n      if (!response.ok) throw new Error('Failed to update schedule');\n      \n      return await response.json();\n    } catch (err) {\n      console.error('Error updating schedule:', err);\n      throw err;\n    }\n  }, [baseUrl]);\n\n  // Enhanced auto-schedule algorithm\n  const runAutoSchedule = useCallback(async () => {\n    if (!user || !['admin', 'scheduler'].includes(user.role)) {\n      setError('Insufficient permissions for auto-scheduling');\n      return;\n    }\n\n    console.log('🚀 Starting auto-schedule...');\n    console.log('👤 User role:', user.role);\n    console.log('🌐 Base URL:', baseUrl);\n    console.log('🔑 Auth token exists:', !!localStorage.getItem('auth_token'));\n\n    setAutoScheduleRunning(true);\n    try {\n      // Get available work orders (not completed, cancelled, or already scheduled)\n      const availableWorkOrders = workOrders.filter(wo => \n        wo.status !== 'Completed' && \n        wo.status !== 'Cancelled' && \n        !wo.scheduled_start_time\n        // Note: clear_to_build filtering removed for now since column doesn't exist in DB\n      );\n\n      // Debug logging\n      console.log('Total work orders:', workOrders.length);\n      console.log('Available work orders:', availableWorkOrders.length);\n      console.log('Work order statuses:', [...new Set(workOrders.map(wo => wo.status))]);\n      console.log('Scheduled work orders:', workOrders.filter(wo => wo.scheduled_start_time).length);\n      console.log('Clear to build statuses:', [...new Set(workOrders.map(wo => wo.clear_to_build))]);\n\n      // Get available production lines (exclude Hand Placement and disabled lines)\n      const availableLines = productionLines.filter(line => \n        line.status !== 'maintenance' &&\n        line.status !== 'down' &&\n        !line.line_name.toLowerCase().includes('hand') &&\n        line.auto_schedule_enabled !== false\n      );\n\n      // Debug logging for production lines\n      console.log('Total production lines:', productionLines.length);\n      console.log('Available production lines:', availableLines.length);\n      console.log('Line statuses:', [...new Set(productionLines.map(line => line.status))]);\n      console.log('Line names:', productionLines.map(line => line.line_name));\n\n      if (availableWorkOrders.length === 0) {\n        const totalWorkOrders = workOrders.length;\n        const completedWorkOrders = workOrders.filter(wo => wo.status === 'Completed').length;\n        const cancelledWorkOrders = workOrders.filter(wo => wo.status === 'Cancelled').length;\n        const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time).length;\n                setError(`No work orders available for scheduling. Total: ${totalWorkOrders}, Completed: ${completedWorkOrders}, Cancelled: ${cancelledWorkOrders}, Already Scheduled: ${scheduledWorkOrders}`);\n        return;\n      }\n\n      if (availableLines.length === 0) {\n        const totalLines = productionLines.length;\n        const maintenanceLines = productionLines.filter(line => line.status === 'maintenance').length;\n        const downLines = productionLines.filter(line => line.status === 'down').length;\n        const handPlacementLines = productionLines.filter(line => line.line_name.toLowerCase().includes('hand')).length;\n        const disabledLines = productionLines.filter(line => line.auto_schedule_enabled === false).length;\n        \n        setError(`No production lines available for scheduling. Total: ${totalLines}, Maintenance: ${maintenanceLines}, Down: ${downLines}, Hand Placement: ${handPlacementLines}, Auto-schedule Disabled: ${disabledLines}`);\n        return;\n      }\n\n      // Enhanced priority scoring system focused on due date adherence\n      const calculateWorkOrderPriority = (wo: WorkOrder) => {\n        let priority = 0;\n        \n        // Ship date priority - primary factor (finish as close to due date as possible)\n        if (wo.ship_date) {\n          const daysUntilShip = Math.ceil((new Date(wo.ship_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          \n          if (daysUntilShip <= 0) {\n            // Past due - HIGHEST priority\n            priority += 1000 + Math.abs(daysUntilShip);\n          } else if (daysUntilShip <= 21) {\n            // Due within 3 weeks - high priority, closer to due date = higher priority\n            priority += 500 + (21 - daysUntilShip) * 20;\n          } else {\n            // Due further out - lower priority\n            priority += Math.max(0, 100 - daysUntilShip);\n          }\n        } else {\n          // No ship date - medium priority\n          priority += 200;\n        }\n        \n        // Kit date priority (secondary factor)\n        if (wo.kit_date) {\n          const daysUntilKit = Math.ceil((new Date(wo.kit_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          if (daysUntilKit <= 7) {\n            priority += Math.max(0, 7 - daysUntilKit) * 5;\n          }\n        }\n        \n        // Status priority (ready work orders should be scheduled)\n        const statusPriority = {\n          'Ready': 50,\n          'Ready*': 50,\n          '1st Side Ready': 45,\n          'In Progress': 40,\n          'Pending': 20,\n          'On Hold': 5\n        };\n        priority += statusPriority[wo.status as keyof typeof statusPriority] || 0;\n        \n        return priority;\n      };\n\n      // Sort work orders by enhanced priority\n      const prioritizedWorkOrders = [...availableWorkOrders].sort((a, b) => {\n        const priorityA = calculateWorkOrderPriority(a);\n        const priorityB = calculateWorkOrderPriority(b);\n        return priorityB - priorityA; // Higher priority first\n      });\n\n      // Line scoring system\n      const calculateLineScore = (line: ProductionLine, workOrder: WorkOrder) => {\n        let score = 0;\n        \n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n        \n        // Capacity utilization (prefer lines with more available capacity)\n        const utilizationRatio = line.available_capacity / (line.hours_per_shift * line.shifts_per_day * line.days_per_week);\n        score += (1 - utilizationRatio) * 20; // Higher score for less utilized lines\n        \n        // Efficiency score (prefer more efficient lines)\n        score += (line.efficiency_target || 85) / 10;\n        \n        // Time multiplier preference (prefer lines with lower multipliers for faster processing)\n        score += (1 / (line.time_multiplier || 1.0)) * 10;\n        \n        // Line type preference (prefer SMT over other types)\n        if (line.line_type === 'SMT') {\n          score += 15;\n        }\n        \n        // Current utilization (prefer less busy lines)\n        score += (1 - (line.current_utilization || 0) / 100) * 10;\n        \n        return score;\n      };\n\n      // Track scheduled work orders for conflict detection\n      const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time);\n      \n      // Schedule work orders\n      for (const workOrder of prioritizedWorkOrders) {\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n\n        // Find best line for this work order\n        let bestLine: ProductionLine | null = null;\n        let bestScore = -1;\n        let bestStartTime: Date | null = null;\n\n        for (const line of availableLines) {\n          console.log(`🔍 Checking line ${line.line_name}:`);\n          \n          // Calculate daily capacity for this line\n          const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n          console.log(`  Daily capacity: ${dailyCapacity} hours/day`);\n          console.log(`  Required duration: ${totalDurationHours} hours total`);\n          \n          // Calculate how many days this work order will need\n          const daysRequired = Math.ceil(totalDurationHours / dailyCapacity);\n          console.log(`  Days required: ${daysRequired} days`);\n          \n          // Check if work order can fit within daily capacity (even if it spans multiple days)\n          if (dailyCapacity === 0) {\n            console.log(`  ❌ No daily capacity configured`);\n            continue;\n          }\n\n          // Calculate line score\n          const lineScore = calculateLineScore(line, workOrder);\n          console.log(`  📊 Line score: ${lineScore}`);\n          \n          // Find best available multi-day slot on this line (considering due dates)\n          const availableSlot = findBestMultiDaySlot(line, workOrder, scheduledWorkOrders, selectedDate, daysRequired);\n          console.log(`  ⏰ Available slot: ${availableSlot ? availableSlot.toISOString() : 'None'}`);\n          \n          if (availableSlot && lineScore > bestScore) {\n            console.log(`  ✅ New best line!`);\n            bestLine = line;\n            bestScore = lineScore;\n            bestStartTime = availableSlot;\n          }\n        }\n\n        if (bestLine && bestStartTime) {\n          // Calculate end time for multi-day scheduling\n          const adjustedDuration = totalDurationHours * (bestLine.time_multiplier || 1.0);\n          const dailyCapacity = (bestLine.shifts_per_day || 1) * (bestLine.hours_per_shift || 8);\n          const daysRequired = Math.ceil(adjustedDuration / dailyCapacity);\n          \n          // Calculate actual end time considering daily work hours\n          const endTime = new Date(bestStartTime);\n          const workingHoursPerDay = bestLine.hours_per_shift || 8;\n          \n          if (daysRequired === 1) {\n            // Single day: just add the duration\n            endTime.setHours(endTime.getHours() + adjustedDuration);\n          } else {\n            // Multi-day: calculate based on working days and daily capacity\n            let remainingHours = adjustedDuration;\n            let currentDay = new Date(bestStartTime);\n            \n            while (remainingHours > 0) {\n              const hoursThisDay = Math.min(remainingHours, workingHoursPerDay);\n              remainingHours -= hoursThisDay;\n              \n              if (remainingHours > 0) {\n                // Move to next working day\n                currentDay.setDate(currentDay.getDate() + 1);\n                // Skip weekends if line doesn't work weekends\n                while ((bestLine.days_per_week || 5) === 5 && (currentDay.getDay() === 0 || currentDay.getDay() === 6)) {\n                  currentDay.setDate(currentDay.getDate() + 1);\n                }\n              } else {\n                // Last day - calculate exact end time\n                const [startHour] = (bestLine.start_time || '08:00').split(':').map(Number);\n                currentDay.setHours(startHour + hoursThisDay);\n              }\n            }\n            \n            endTime.setTime(currentDay.getTime());\n          }\n\n          console.log(`📅 Scheduling work order ${workOrder.work_order_number} on ${bestLine.line_name}`);\n          console.log(`⏰ Start: ${bestStartTime.toISOString()}, End: ${endTime.toISOString()}`);\n\n          // Update work order with schedule\n          try {\n            await updateWorkOrderSchedule(workOrder.id, {\n              line_id: bestLine.id,\n              scheduled_start_time: bestStartTime.toISOString(),\n              scheduled_end_time: endTime.toISOString(),\n              line_position: 1\n            });\n            console.log(`✅ Successfully scheduled work order ${workOrder.work_order_number}`);\n          } catch (scheduleError) {\n            console.error(`❌ Failed to schedule work order ${workOrder.work_order_number}:`, scheduleError);\n            throw new Error(`Failed to schedule work order ${workOrder.work_order_number}: ${scheduleError.message}`);\n          }\n\n          // Add to scheduled work orders for conflict detection\n          scheduledWorkOrders.push({\n            ...workOrder,\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString()\n          });\n        }\n      }\n\n      // Refresh data\n      console.log('🔄 Refreshing work orders after auto-scheduling...');\n      await fetchWorkOrders();\n      \n      // Debug: Check if work orders have scheduled times after refresh (use a ref to avoid stale closure)\n      setTimeout(() => {\n        const currentWorkOrders = workOrders; // This might be stale, let's remove this debug for now\n        console.log('🔄 Data refresh completed after auto-scheduling');\n      }, 100);\n      \n      setSuccessMessage('Auto-schedule completed successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n      setError(null);\n    } catch (err) {\n      console.error('Auto-schedule error:', err);\n      setError('Auto-scheduling failed: ' + (err instanceof Error ? err.message : 'Unknown error'));\n    } finally {\n      setAutoScheduleRunning(false);\n    }\n  }, [workOrders, productionLines, selectedDate, user, updateWorkOrderSchedule, fetchWorkOrders]);\n\n  // Helper function to find best available multi-day time slot considering due dates\n  const findBestMultiDaySlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string,\n    daysRequired: number\n  ): Date | null => {\n    const earliestSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, targetDate, daysRequired);\n    if (!earliestSlot || !workOrder.ship_date) {\n      return earliestSlot;\n    }\n\n    // Calculate work order duration for end date calculation\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    \n    const shipDate = new Date(workOrder.ship_date);\n    const earliestDaysFromStart = Math.ceil(adjustedDuration / dailyCapacity);\n    \n    // Calculate earliest finish date\n    const earliestEndDate = new Date(earliestSlot);\n    let remainingDays = earliestDaysFromStart;\n    while (remainingDays > 0) {\n      earliestEndDate.setDate(earliestEndDate.getDate() + 1);\n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = earliestEndDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n      remainingDays--;\n    }\n\n    // If earliest finish is more than 3 weeks before due date, try to find a later slot\n    const threeWeeksBeforeDue = new Date(shipDate);\n    threeWeeksBeforeDue.setDate(threeWeeksBeforeDue.getDate() - 21);\n    \n    if (earliestEndDate < threeWeeksBeforeDue) {\n      // Try to find a slot that finishes closer to the due date\n      const targetStartDate = new Date(threeWeeksBeforeDue);\n      targetStartDate.setDate(targetStartDate.getDate() - earliestDaysFromStart);\n      \n      const laterSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, targetStartDate.toISOString().split('T')[0], daysRequired);\n      if (laterSlot) {\n        return laterSlot;\n      }\n    }\n\n    return earliestSlot;\n  };\n\n  // Helper function to find earliest available multi-day time slot\n  const findEarliestMultiDaySlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string,\n    daysRequired: number\n  ): Date | null => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate daily capacity and work order duration\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n\n    // Start checking from the target date\n    let checkDate = new Date(targetDate);\n    const maxLookAhead = 45; // Don't look more than 45 days ahead\n    \n    for (let dayOffset = 0; dayOffset < maxLookAhead; dayOffset++) {\n      const currentCheckDate = new Date(checkDate);\n      currentCheckDate.setDate(checkDate.getDate() + dayOffset);\n      \n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = currentCheckDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n\n      // Check if we have consecutive available days starting from this date\n      let consecutiveDaysAvailable = true;\n      \n      for (let dayIndex = 0; dayIndex < daysRequired; dayIndex++) {\n        const checkingDate = new Date(currentCheckDate);\n        checkingDate.setDate(currentCheckDate.getDate() + dayIndex);\n        \n        // Skip weekends for additional days too\n        const checkingDayOfWeek = checkingDate.getDay();\n        if ((line.days_per_week || 5) === 5 && (checkingDayOfWeek === 0 || checkingDayOfWeek === 6)) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n\n        // Get existing schedules for this line on this specific date\n        const daySchedules = scheduledWorkOrders.filter(wo => \n          wo.line_id === line.id && \n          wo.scheduled_start_time &&\n          wo.scheduled_end_time &&\n          new Date(wo.scheduled_start_time).toDateString() === checkingDate.toDateString()\n        );\n\n        // Calculate how much capacity is used this day\n        const usedCapacity = daySchedules.reduce((total, wo) => {\n          const start = new Date(wo.scheduled_start_time!);\n          const end = new Date(wo.scheduled_end_time!);\n          const duration = (end.getTime() - start.getTime()) / (1000 * 60 * 60); // Convert to hours\n          return total + duration;\n        }, 0);\n\n        // Check if we have enough remaining capacity for this day's portion\n        const dailyHoursNeeded = Math.min(totalDurationHours - (dayIndex * dailyCapacity), dailyCapacity);\n        \n        if (usedCapacity + dailyHoursNeeded > dailyCapacity) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n      }\n\n      if (consecutiveDaysAvailable) {\n        // Found a valid starting date - return the start time\n        const startTime = new Date(currentCheckDate);\n        startTime.setHours(startHour, startMinute, 0, 0);\n        return startTime;\n      }\n    }\n\n    return null;\n  };\n\n  // Helper function to find earliest available time slot\n  const findEarliestAvailableSlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string\n  ): Date | null => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate work order duration\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n\n    // Get existing schedules for this line on the target date\n    const lineSchedules = scheduledWorkOrders.filter(wo => \n      wo.line_id === line.id && \n      wo.scheduled_start_time &&\n      wo.scheduled_end_time &&\n      new Date(wo.scheduled_start_time).toDateString() === new Date(targetDate).toDateString()\n    ).sort((a, b) => \n      new Date(a.scheduled_start_time!).getTime() - new Date(b.scheduled_start_time!).getTime()\n    );\n\n    // Start with line opening time\n    let currentTime = new Date(targetDate);\n    currentTime.setHours(startHour, startMinute, 0, 0);\n\n    // Check each potential time slot\n    while (currentTime.getHours() < endHour) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setHours(slotEndTime.getHours() + adjustedDuration);\n\n      // Check if slot extends beyond line closing time\n      if (slotEndTime.getHours() > endHour) {\n        // Move to next day\n        currentTime.setDate(currentTime.getDate() + 1);\n        currentTime.setHours(startHour, startMinute, 0, 0);\n        continue;\n      }\n\n      // Check for conflicts with existing schedules\n      const hasConflict = lineSchedules.some(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time!);\n        const scheduleEnd = new Date(schedule.scheduled_end_time!);\n        \n        return (\n          (currentTime >= scheduleStart && currentTime < scheduleEnd) ||\n          (slotEndTime > scheduleStart && slotEndTime <= scheduleEnd) ||\n          (currentTime <= scheduleStart && slotEndTime >= scheduleEnd)\n        );\n      });\n\n      if (!hasConflict) {\n        return currentTime;\n      }\n\n      // Move to next potential slot (after the conflicting schedule)\n      const nextConflict = lineSchedules.find(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time!);\n        return scheduleStart >= currentTime;\n      });\n\n      if (nextConflict) {\n        currentTime = new Date(nextConflict.scheduled_end_time!);\n      } else {\n        // No more conflicts, but check if we still have time today\n        if (currentTime.getHours() + adjustedDuration <= endHour) {\n          return currentTime;\n        } else {\n          // Move to next day\n          currentTime.setDate(currentTime.getDate() + 1);\n          currentTime.setHours(startHour, startMinute, 0, 0);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  // Line configuration functions\n  const openLineConfig = (line: ProductionLine) => {\n    setSelectedLineForConfig(line);\n    setEditingLineConfig({\n      hours_per_shift: line.hours_per_shift || 8,\n      shifts_per_day: line.shifts_per_day || 1,\n      days_per_week: line.days_per_week || 5,\n      time_multiplier: line.time_multiplier || 1.0,\n      start_time: line.start_time || '08:00',\n      end_time: line.end_time || '17:00',\n      lunch_break_duration: line.lunch_break_duration || 60,\n      lunch_break_start: line.lunch_break_start || '12:00',\n      break_duration: line.break_duration || 15,\n      auto_schedule_enabled: true,\n      maintenance_interval_days: 30,\n      efficiency_target: 85\n    });\n    setShowLineConfigModal(true);\n  };\n\n  const updateLineConfig = async (lineId: string, config: LineConfig) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      console.log('Updating line config for:', lineId, 'with config:', config);\n      \n      const response = await fetch(`${baseUrl}/api/production-lines/${lineId}/config`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(config)\n      });\n\n      console.log('Response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Response error:', errorData);\n        throw new Error(`Failed to update line configuration: ${response.status} ${errorData}`);\n      }\n      \n      const result = await response.json();\n      console.log('Update successful:', result);\n      \n      // Refresh production lines data\n      await fetchProductionLines();\n      setShowLineConfigModal(false);\n      setSelectedLineForConfig(null);\n      setEditingLineConfig(null);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(`Line configuration updated successfully for ${selectedLineForConfig?.line_name}`);\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      console.error('Error updating line config:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update line configuration');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = (workOrder: WorkOrder) => {\n    setDraggedWorkOrder(workOrder);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = async (e: React.DragEvent, targetLineId: string, targetTime: string) => {\n    e.preventDefault();\n    \n    if (!draggedWorkOrder) return;\n\n    try {\n      const targetDateTime = new Date(`${selectedDate}T${targetTime}`);\n      const endDateTime = new Date(targetDateTime);\n      \n      // Calculate total duration from available time fields\n      const setupHours = draggedWorkOrder.setup_hours_estimated || 0;\n      const productionHours = draggedWorkOrder.production_time_hours_estimated || 0;\n      const productionDays = draggedWorkOrder.production_time_days_estimated || 0;\n      const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n      \n      endDateTime.setHours(endDateTime.getHours() + totalDurationHours);\n\n      await updateWorkOrderSchedule(draggedWorkOrder.id, {\n        line_id: targetLineId,\n        scheduled_start_time: targetDateTime.toISOString(),\n        scheduled_end_time: endDateTime.toISOString()\n      });\n\n      // Refresh data\n      await fetchWorkOrders();\n      setDraggedWorkOrder(null);\n    } catch (err) {\n      console.error('Drop error:', err);\n      setError('Failed to schedule work order');\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchWorkOrders(), fetchProductionLines()]);\n      setLoading(false);\n    };\n\n    loadData();\n  }, [fetchWorkOrders, fetchProductionLines]);\n\n  // Real-time updates - using the context's event system\n  useEffect(() => {\n    const unsubscribe = onWorkOrderUpdate(() => {\n      fetchWorkOrders();\n    });\n\n    return unsubscribe;\n  }, [onWorkOrderUpdate, fetchWorkOrders]);\n\n  // Filter work orders by selected line\n  const filteredWorkOrders = selectedLine === 'all' \n    ? workOrders \n    : workOrders.filter(wo => wo.line_name === selectedLine);\n\n  // Generate timeline slots\n  const generateTimelineSlots = () => {\n    const slots: TimelineSlot[] = [];\n\n    filteredWorkOrders.forEach((workOrder, index) => {\n      if (workOrder.scheduled_start_time) {\n        const startTime = new Date(workOrder.scheduled_start_time);\n        const endTime = workOrder.scheduled_end_time ? new Date(workOrder.scheduled_end_time) : startTime;\n        const duration = (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60); // hours\n\n        slots.push({\n          workOrder,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          duration,\n          position: index\n        });\n      }\n    });\n\n    return slots;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-sy-black-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <ArrowPathIcon className=\"h-8 w-8 text-sy-green-600 mx-auto mb-4 animate-spin\" />\n          <p className=\"text-sy-black-600\">Loading schedule...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-sy-black-900\">Production Schedule</h1>\n          <p className=\"mt-1 text-sm text-sy-black-600\">\n            Manage and optimize production scheduling\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={() => setShowConfigModal(true)}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-sy-black-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500\"\n          >\n            <CogIcon className=\"h-4 w-4 mr-2\" />\n            Config\n          </button>\n          \n          {user && ['admin', 'scheduler'].includes(user.role) && (\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={runAutoSchedule}\n                disabled={autoScheduleRunning}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sy-green-600 hover:bg-sy-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500 disabled:opacity-50\"\n              >\n                {autoScheduleRunning ? (\n                  <ArrowPathIcon className=\"h-4 w-4 mr-2 animate-spin\" />\n                ) : (\n                  <CalendarIcon className=\"h-4 w-4 mr-2\" />\n                )}\n                {autoScheduleRunning ? 'Scheduling...' : 'Auto Schedule'}\n              </button>\n              <div className=\"text-xs text-sy-black-500\">\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 mr-1\">\n                  Manual Only\n                </span>\n                Hand Placement excluded\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n              <p className=\"mt-1 text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Success Display */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <CheckCircleIcon className=\"h-5 w-5 text-green-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-green-800\">Success</h3>\n              <p className=\"mt-1 text-sm text-green-700\">{successMessage}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Controls */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {/* Date Selector */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Date\n            </label>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            />\n          </div>\n\n          {/* Line Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Production Line\n            </label>\n            <select\n              value={selectedLine}\n              onChange={(e) => setSelectedLine(e.target.value)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            >\n              <option value=\"all\">All Lines</option>\n              {productionLines.map(line => (\n                <option key={line.id} value={line.line_name}>\n                  {line.line_name}\n                  {line.line_name.toLowerCase().includes('hand') ? ' (Manual Only)' : ''}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* View Mode */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              View Mode\n            </label>\n            <select\n              value={viewMode}\n              onChange={(e) => setViewMode(e.target.value as any)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            >\n              <option value=\"timeline\">Timeline</option>\n              <option value=\"calendar\">Calendar</option>\n              <option value=\"list\">List</option>\n            </select>\n          </div>\n\n          {/* Stats */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Summary\n            </label>\n            <div className=\"text-sm text-sy-black-600\">\n              {filteredWorkOrders.length} work orders\n              <br />\n              {filteredWorkOrders.filter(wo => wo.scheduled_start_time).length} scheduled\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Timeline View */}\n      {viewMode === 'timeline' && (\n        <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Timeline View</h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <div className=\"min-w-full\">\n              {/* Time Headers */}\n              <div className=\"grid bg-gray-50 border-b border-gray-200\" style={{ gridTemplateColumns: '200px repeat(12, 1fr)' }}>\n                <div className=\"p-3 text-sm font-medium text-sy-black-700\">Line</div>\n                {Array.from({ length: 12 }, (_, i) => (\n                  <div key={i} className=\"p-3 text-sm font-medium text-sy-black-700 text-center border-l border-gray-200\">\n                    {8 + i}:00\n                  </div>\n                ))}\n              </div>\n\n              {/* Production Lines */}\n              {productionLines.map(line => (\n                <div key={line.id} className=\"grid border-b border-gray-200\" style={{ gridTemplateColumns: '200px repeat(12, 1fr)' }}>\n                  <div className=\"p-3 text-sm font-medium text-sy-black-900 bg-gray-50\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{line.line_name}</span>\n                        {line.line_name.toLowerCase().includes('hand') && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                            Manual Only\n                          </span>\n                        )}\n                      </div>\n                      {user && ['admin', 'scheduler'].includes(user.role) && (\n                        <button\n                          onClick={() => openLineConfig(line)}\n                          className=\"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-sy-black-700 bg-white hover:bg-gray-50\"\n                          title=\"Configure line settings\"\n                        >\n                          <CogIcon className=\"h-3 w-3\" />\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {Array.from({ length: 12 }, (_, i) => {\n                    const timeSlot = `${8 + i}:00`;\n                    const scheduledWorkOrder = generateTimelineSlots().find(slot => \n                      slot.workOrder.line_name === line.line_name &&\n                      slot.startTime === timeSlot\n                    );\n\n                    return (\n                      <div\n                        key={i}\n                        className=\"p-2 border-l border-gray-200 min-h-[60px] relative\"\n                        onDragOver={handleDragOver}\n                        onDrop={(e) => handleDrop(e, line.id, timeSlot)}\n                      >\n                        {scheduledWorkOrder ? (\n                          <div className=\"bg-sy-green-100 border border-sy-green-300 rounded p-2 text-xs\">\n                            <div className=\"font-medium text-sy-green-800\">\n                              {scheduledWorkOrder.workOrder.work_order_number}\n                            </div>\n                            <div className=\"text-sy-green-600\">\n                              {scheduledWorkOrder.duration}h\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"text-gray-400 text-xs\">Available</div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Work Orders List */}\n      {viewMode === 'list' && (\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Work Orders</h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Work Order\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Customer\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Assembly\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Clear to Build\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Ship Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Duration\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Scheduled\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredWorkOrders.map((workOrder) => (\n                  <tr \n                    key={workOrder.id}\n                    draggable={workOrder.clear_to_build}\n                    onDragStart={() => workOrder.clear_to_build && handleDragStart(workOrder)}\n                    className={`hover:bg-gray-50 ${workOrder.clear_to_build ? 'cursor-move' : 'cursor-not-allowed opacity-60'}`}\n                  >\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-sy-black-900\">\n                      {workOrder.work_order_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.customer_name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.assembly_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        workOrder.status === 'Completed' ? 'bg-green-100 text-green-800' :\n                        workOrder.status === 'Cancelled' ? 'bg-red-100 text-red-800' :\n                        'bg-yellow-100 text-yellow-800'\n                      }`}>\n                        {workOrder.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        workOrder.clear_to_build ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                      }`}>\n                        {workOrder.clear_to_build ? 'Yes' : 'No'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.ship_date ? new Date(workOrder.ship_date).toLocaleDateString() : 'N/A'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.production_time_hours_estimated || 0}h\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.scheduled_start_time ? (\n                        <div className=\"flex items-center\">\n                          <CheckCircleIcon className=\"h-4 w-4 text-green-500 mr-1\" />\n                          {new Date(workOrder.scheduled_start_time).toLocaleDateString()}\n                        </div>\n                      ) : (\n                        <div className=\"flex items-center\">\n                          <XCircleIcon className=\"h-4 w-4 text-red-500 mr-1\" />\n                          Not scheduled\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button \n                        className=\"text-sy-green-600 hover:text-sy-green-900\"\n                        onClick={() => {\n                          // TODO: Add toggle clear to build functionality\n                          console.log('Toggle clear to build for:', workOrder.work_order_number);\n                        }}\n                      >\n                        {workOrder.clear_to_build ? 'Mark Not Ready' : 'Mark Ready'}\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Configuration Modal */}\n      {showConfigModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-sy-black-900 mb-4\">Schedule Configuration</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Hours per Day\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={scheduleConfig.hours_per_day}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, hours_per_day: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Days per Week\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={scheduleConfig.days_per_week}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, days_per_week: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Efficiency Factor\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={scheduleConfig.efficiency_factor}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, efficiency_factor: parseFloat(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => setShowConfigModal(false)}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Save configuration logic here\n                    setShowConfigModal(false);\n                  }}\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\"\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Line Configuration Modal */}\n      {showLineConfigModal && selectedLineForConfig && editingLineConfig && (\n        <div \n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\"\n          onClick={() => {\n            setShowLineConfigModal(false);\n            setSelectedLineForConfig(null);\n            setEditingLineConfig(null);\n          }}\n        >\n          <div \n            className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"mt-3\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-sy-black-900\">\n                  Configure {selectedLineForConfig.line_name}\n                </h3>\n                <button\n                  onClick={() => {\n                    setShowLineConfigModal(false);\n                    setSelectedLineForConfig(null);\n                    setEditingLineConfig(null);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Hours per Shift\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.hours_per_shift}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, hours_per_shift: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Shifts per Day\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.shifts_per_day}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, shifts_per_day: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Days per Week\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.days_per_week}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, days_per_week: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Time Multiplier\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={editingLineConfig.time_multiplier}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, time_multiplier: parseFloat(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Start Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.start_time}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, start_time: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    End Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.end_time}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, end_time: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Lunch Break Duration (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.lunch_break_duration}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, lunch_break_duration: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Lunch Break Start Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.lunch_break_start}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, lunch_break_start: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Break Duration (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.break_duration}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, break_duration: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => {\n                    setShowLineConfigModal(false);\n                    setSelectedLineForConfig(null);\n                    setEditingLineConfig(null);\n                  }}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => updateLineConfig(selectedLineForConfig.id, editingLineConfig)}\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\"\n                >\n                  Save Configuration\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Schedule; \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}