{"ast":null,"code":"var _jsxFileName = \"/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/Schedule.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CalendarIcon, CogIcon, ArrowPathIcon, ExclamationTriangleIcon, CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext.tsx';\nimport { useSocket } from '../contexts/SocketContext.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    onWorkOrderUpdate\n  } = useSocket();\n\n  // State management\n  const [workOrders, setWorkOrders] = useState([]);\n  const [productionLines, setProductionLines] = useState([]);\n  const [scheduleConfig, setScheduleConfig] = useState({\n    hours_per_day: 8,\n    days_per_week: 5,\n    efficiency_factor: 1.0\n  });\n\n  // UI State\n  const [selectedLine, setSelectedLine] = useState('all');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [viewMode, setViewMode] = useState('timeline');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [draggedWorkOrder, setDraggedWorkOrder] = useState(null);\n  const [showConfigModal, setShowConfigModal] = useState(false);\n  const [showLineConfigModal, setShowLineConfigModal] = useState(false);\n  const [selectedLineForConfig, setSelectedLineForConfig] = useState(null);\n  const [editingLineConfig, setEditingLineConfig] = useState(null);\n  const [autoScheduleRunning, setAutoScheduleRunning] = useState(false);\n\n  // API base URL - use production for local development since local database isn't set up\n  const baseUrl = process.env.NODE_ENV === 'production' ? window.location.origin : 'https://smtdatabase01-production.up.railway.app';\n\n  // Fetch work orders\n  const fetchWorkOrders = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/schedule/timeline`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch work orders');\n      const data = await response.json();\n      setWorkOrders(data.work_orders || []);\n    } catch (err) {\n      console.error('Error fetching work orders:', err);\n      setError('Failed to load work orders');\n    }\n  }, [baseUrl]);\n\n  // Fetch production lines\n  const fetchProductionLines = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/production-lines`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch production lines');\n      const data = await response.json();\n      setProductionLines(data.production_lines || []);\n    } catch (err) {\n      console.error('Error fetching production lines:', err);\n      setError('Failed to load production lines');\n    }\n  }, [baseUrl]);\n\n  // Update work order schedule\n  const updateWorkOrderSchedule = useCallback(async (workOrderId, scheduleData) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/schedule/work-orders/${workOrderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(scheduleData)\n      });\n      if (!response.ok) throw new Error('Failed to update schedule');\n      return await response.json();\n    } catch (err) {\n      console.error('Error updating schedule:', err);\n      throw err;\n    }\n  }, [baseUrl]);\n\n  // Enhanced auto-schedule algorithm\n  const runAutoSchedule = useCallback(async () => {\n    if (!user || !['admin', 'scheduler'].includes(user.role)) {\n      setError('Insufficient permissions for auto-scheduling');\n      return;\n    }\n    console.log('🚀 Starting auto-schedule...');\n    console.log('👤 User role:', user.role);\n    console.log('🌐 Base URL:', baseUrl);\n    console.log('🔑 Auth token exists:', !!localStorage.getItem('auth_token'));\n    setAutoScheduleRunning(true);\n    try {\n      // Get available work orders (not completed, cancelled, or already scheduled)\n      const availableWorkOrders = workOrders.filter(wo => wo.status !== 'Completed' && wo.status !== 'Cancelled' && !wo.scheduled_start_time\n      // Note: clear_to_build filtering removed for now since column doesn't exist in DB\n      );\n\n      // Debug logging\n      console.log('Total work orders:', workOrders.length);\n      console.log('Available work orders:', availableWorkOrders.length);\n      console.log('Work order statuses:', [...new Set(workOrders.map(wo => wo.status))]);\n      console.log('Scheduled work orders:', workOrders.filter(wo => wo.scheduled_start_time).length);\n      console.log('Clear to build statuses:', [...new Set(workOrders.map(wo => wo.clear_to_build))]);\n\n      // Get available production lines (exclude Hand Placement and disabled lines)\n      const availableLines = productionLines.filter(line => line.status !== 'maintenance' && line.status !== 'down' && !line.line_name.toLowerCase().includes('hand') && line.auto_schedule_enabled !== false);\n\n      // Debug logging for production lines\n      console.log('Total production lines:', productionLines.length);\n      console.log('Available production lines:', availableLines.length);\n      console.log('Line statuses:', [...new Set(productionLines.map(line => line.status))]);\n      console.log('Line names:', productionLines.map(line => line.line_name));\n      if (availableWorkOrders.length === 0) {\n        const totalWorkOrders = workOrders.length;\n        const completedWorkOrders = workOrders.filter(wo => wo.status === 'Completed').length;\n        const cancelledWorkOrders = workOrders.filter(wo => wo.status === 'Cancelled').length;\n        const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time).length;\n        setError(`No work orders available for scheduling. Total: ${totalWorkOrders}, Completed: ${completedWorkOrders}, Cancelled: ${cancelledWorkOrders}, Already Scheduled: ${scheduledWorkOrders}`);\n        return;\n      }\n      if (availableLines.length === 0) {\n        const totalLines = productionLines.length;\n        const maintenanceLines = productionLines.filter(line => line.status === 'maintenance').length;\n        const downLines = productionLines.filter(line => line.status === 'down').length;\n        const handPlacementLines = productionLines.filter(line => line.line_name.toLowerCase().includes('hand')).length;\n        const disabledLines = productionLines.filter(line => line.auto_schedule_enabled === false).length;\n        setError(`No production lines available for scheduling. Total: ${totalLines}, Maintenance: ${maintenanceLines}, Down: ${downLines}, Hand Placement: ${handPlacementLines}, Auto-schedule Disabled: ${disabledLines}`);\n        return;\n      }\n\n      // Enhanced priority scoring system\n      const calculateWorkOrderPriority = wo => {\n        let priority = 0;\n\n        // Ship date priority (earlier = higher priority)\n        if (wo.ship_date) {\n          const daysUntilShip = Math.ceil((new Date(wo.ship_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          priority += Math.max(0, 30 - daysUntilShip) * 10; // Higher priority for urgent shipments\n        }\n\n        // Kit date priority\n        if (wo.kit_date) {\n          const daysUntilKit = Math.ceil((new Date(wo.kit_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          priority += Math.max(0, 7 - daysUntilKit) * 5; // Higher priority for urgent kits\n        }\n\n        // Quantity priority (larger orders get higher priority)\n        priority += Math.min(wo.quantity / 100, 5); // Cap at 5 points\n\n        // Status priority\n        const statusPriority = {\n          'Ready': 10,\n          'In Progress': 8,\n          'Pending': 5,\n          'On Hold': 2\n        };\n        priority += statusPriority[wo.status] || 0;\n        return priority;\n      };\n\n      // Sort work orders by enhanced priority\n      const prioritizedWorkOrders = [...availableWorkOrders].sort((a, b) => {\n        const priorityA = calculateWorkOrderPriority(a);\n        const priorityB = calculateWorkOrderPriority(b);\n        return priorityB - priorityA; // Higher priority first\n      });\n\n      // Line scoring system\n      const calculateLineScore = (line, workOrder) => {\n        let score = 0;\n\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n        // Capacity utilization (prefer lines with more available capacity)\n        const utilizationRatio = line.available_capacity / (line.hours_per_shift * line.shifts_per_day * line.days_per_week);\n        score += (1 - utilizationRatio) * 20; // Higher score for less utilized lines\n\n        // Efficiency score (prefer more efficient lines)\n        score += (line.efficiency_target || 85) / 10;\n\n        // Time multiplier preference (prefer lines with lower multipliers for faster processing)\n        score += 1 / (line.time_multiplier || 1.0) * 10;\n\n        // Line type preference (prefer SMT over other types)\n        if (line.line_type === 'SMT') {\n          score += 15;\n        }\n\n        // Current utilization (prefer less busy lines)\n        score += (1 - (line.current_utilization || 0) / 100) * 10;\n        return score;\n      };\n\n      // Track scheduled work orders for conflict detection\n      const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time);\n\n      // Schedule work orders\n      for (const workOrder of prioritizedWorkOrders) {\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n        // Find best line for this work order\n        let bestLine = null;\n        let bestScore = -1;\n        let bestStartTime = null;\n        for (const line of availableLines) {\n          console.log(`🔍 Checking line ${line.line_name}:`);\n\n          // Calculate daily capacity for this line\n          const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n          console.log(`  Daily capacity: ${dailyCapacity} hours/day`);\n          console.log(`  Required duration: ${totalDurationHours} hours total`);\n\n          // Calculate how many days this work order will need\n          const daysRequired = Math.ceil(totalDurationHours / dailyCapacity);\n          console.log(`  Days required: ${daysRequired} days`);\n\n          // Check if work order can fit within daily capacity (even if it spans multiple days)\n          if (dailyCapacity === 0) {\n            console.log(`  ❌ No daily capacity configured`);\n            continue;\n          }\n\n          // Calculate line score\n          const lineScore = calculateLineScore(line, workOrder);\n          console.log(`  📊 Line score: ${lineScore}`);\n\n          // Find earliest available multi-day slot on this line\n          const availableSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, selectedDate, daysRequired);\n          console.log(`  ⏰ Available slot: ${availableSlot ? availableSlot.toISOString() : 'None'}`);\n          if (availableSlot && lineScore > bestScore) {\n            console.log(`  ✅ New best line!`);\n            bestLine = line;\n            bestScore = lineScore;\n            bestStartTime = availableSlot;\n          }\n        }\n        if (bestLine && bestStartTime) {\n          // Calculate end time for multi-day scheduling\n          const adjustedDuration = totalDurationHours * (bestLine.time_multiplier || 1.0);\n          const dailyCapacity = (bestLine.shifts_per_day || 1) * (bestLine.hours_per_shift || 8);\n          const daysRequired = Math.ceil(adjustedDuration / dailyCapacity);\n\n          // Calculate actual end time considering daily work hours\n          const endTime = new Date(bestStartTime);\n          const workingHoursPerDay = bestLine.hours_per_shift || 8;\n          if (daysRequired === 1) {\n            // Single day: just add the duration\n            endTime.setHours(endTime.getHours() + adjustedDuration);\n          } else {\n            // Multi-day: calculate based on working days and daily capacity\n            let remainingHours = adjustedDuration;\n            let currentDay = new Date(bestStartTime);\n            while (remainingHours > 0) {\n              const hoursThisDay = Math.min(remainingHours, workingHoursPerDay);\n              remainingHours -= hoursThisDay;\n              if (remainingHours > 0) {\n                // Move to next working day\n                currentDay.setDate(currentDay.getDate() + 1);\n                // Skip weekends if line doesn't work weekends\n                while ((bestLine.days_per_week || 5) === 5 && (currentDay.getDay() === 0 || currentDay.getDay() === 6)) {\n                  currentDay.setDate(currentDay.getDate() + 1);\n                }\n              } else {\n                // Last day - calculate exact end time\n                const [startHour] = (bestLine.start_time || '08:00').split(':').map(Number);\n                currentDay.setHours(startHour + hoursThisDay);\n              }\n            }\n            endTime.setTime(currentDay.getTime());\n          }\n          console.log(`📅 Scheduling work order ${workOrder.work_order_number} on ${bestLine.line_name}`);\n          console.log(`⏰ Start: ${bestStartTime.toISOString()}, End: ${endTime.toISOString()}`);\n\n          // Update work order with schedule\n          try {\n            await updateWorkOrderSchedule(workOrder.id, {\n              line_id: bestLine.id,\n              scheduled_start_time: bestStartTime.toISOString(),\n              scheduled_end_time: endTime.toISOString(),\n              line_position: 1\n            });\n            console.log(`✅ Successfully scheduled work order ${workOrder.work_order_number}`);\n          } catch (scheduleError) {\n            console.error(`❌ Failed to schedule work order ${workOrder.work_order_number}:`, scheduleError);\n            throw new Error(`Failed to schedule work order ${workOrder.work_order_number}: ${scheduleError.message}`);\n          }\n\n          // Add to scheduled work orders for conflict detection\n          scheduledWorkOrders.push({\n            ...workOrder,\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString()\n          });\n        }\n      }\n\n      // Refresh data\n      await fetchWorkOrders();\n      setSuccessMessage('Auto-schedule completed successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n      setError(null);\n    } catch (err) {\n      console.error('Auto-schedule error:', err);\n      setError('Auto-scheduling failed: ' + (err instanceof Error ? err.message : 'Unknown error'));\n    } finally {\n      setAutoScheduleRunning(false);\n    }\n  }, [workOrders, productionLines, selectedDate, user, updateWorkOrderSchedule, fetchWorkOrders]);\n\n  // Helper function to find earliest available multi-day time slot\n  const findEarliestMultiDaySlot = (line, workOrder, scheduledWorkOrders, targetDate, daysRequired) => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate daily capacity and work order duration\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n    // Start checking from the target date\n    let checkDate = new Date(targetDate);\n    const maxLookAhead = 45; // Don't look more than 45 days ahead\n\n    for (let dayOffset = 0; dayOffset < maxLookAhead; dayOffset++) {\n      const currentCheckDate = new Date(checkDate);\n      currentCheckDate.setDate(checkDate.getDate() + dayOffset);\n\n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = currentCheckDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n\n      // Check if we have consecutive available days starting from this date\n      let consecutiveDaysAvailable = true;\n      for (let dayIndex = 0; dayIndex < daysRequired; dayIndex++) {\n        const checkingDate = new Date(currentCheckDate);\n        checkingDate.setDate(currentCheckDate.getDate() + dayIndex);\n\n        // Skip weekends for additional days too\n        const checkingDayOfWeek = checkingDate.getDay();\n        if ((line.days_per_week || 5) === 5 && (checkingDayOfWeek === 0 || checkingDayOfWeek === 6)) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n\n        // Get existing schedules for this line on this specific date\n        const daySchedules = scheduledWorkOrders.filter(wo => wo.line_id === line.id && wo.scheduled_start_time && wo.scheduled_end_time && new Date(wo.scheduled_start_time).toDateString() === checkingDate.toDateString());\n\n        // Calculate how much capacity is used this day\n        const usedCapacity = daySchedules.reduce((total, wo) => {\n          const start = new Date(wo.scheduled_start_time);\n          const end = new Date(wo.scheduled_end_time);\n          const duration = (end.getTime() - start.getTime()) / (1000 * 60 * 60); // Convert to hours\n          return total + duration;\n        }, 0);\n\n        // Check if we have enough remaining capacity for this day's portion\n        const dailyHoursNeeded = Math.min(totalDurationHours - dayIndex * dailyCapacity, dailyCapacity);\n        if (usedCapacity + dailyHoursNeeded > dailyCapacity) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n      }\n      if (consecutiveDaysAvailable) {\n        // Found a valid starting date - return the start time\n        const startTime = new Date(currentCheckDate);\n        startTime.setHours(startHour, startMinute, 0, 0);\n        return startTime;\n      }\n    }\n    return null;\n  };\n\n  // Helper function to find earliest available time slot\n  const findEarliestAvailableSlot = (line, workOrder, scheduledWorkOrders, targetDate) => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate work order duration\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n\n    // Get existing schedules for this line on the target date\n    const lineSchedules = scheduledWorkOrders.filter(wo => wo.line_id === line.id && wo.scheduled_start_time && wo.scheduled_end_time && new Date(wo.scheduled_start_time).toDateString() === new Date(targetDate).toDateString()).sort((a, b) => new Date(a.scheduled_start_time).getTime() - new Date(b.scheduled_start_time).getTime());\n\n    // Start with line opening time\n    let currentTime = new Date(targetDate);\n    currentTime.setHours(startHour, startMinute, 0, 0);\n\n    // Check each potential time slot\n    while (currentTime.getHours() < endHour) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setHours(slotEndTime.getHours() + adjustedDuration);\n\n      // Check if slot extends beyond line closing time\n      if (slotEndTime.getHours() > endHour) {\n        // Move to next day\n        currentTime.setDate(currentTime.getDate() + 1);\n        currentTime.setHours(startHour, startMinute, 0, 0);\n        continue;\n      }\n\n      // Check for conflicts with existing schedules\n      const hasConflict = lineSchedules.some(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time);\n        const scheduleEnd = new Date(schedule.scheduled_end_time);\n        return currentTime >= scheduleStart && currentTime < scheduleEnd || slotEndTime > scheduleStart && slotEndTime <= scheduleEnd || currentTime <= scheduleStart && slotEndTime >= scheduleEnd;\n      });\n      if (!hasConflict) {\n        return currentTime;\n      }\n\n      // Move to next potential slot (after the conflicting schedule)\n      const nextConflict = lineSchedules.find(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time);\n        return scheduleStart >= currentTime;\n      });\n      if (nextConflict) {\n        currentTime = new Date(nextConflict.scheduled_end_time);\n      } else {\n        // No more conflicts, but check if we still have time today\n        if (currentTime.getHours() + adjustedDuration <= endHour) {\n          return currentTime;\n        } else {\n          // Move to next day\n          currentTime.setDate(currentTime.getDate() + 1);\n          currentTime.setHours(startHour, startMinute, 0, 0);\n        }\n      }\n    }\n    return null;\n  };\n\n  // Line configuration functions\n  const openLineConfig = line => {\n    setSelectedLineForConfig(line);\n    setEditingLineConfig({\n      hours_per_shift: line.hours_per_shift || 8,\n      shifts_per_day: line.shifts_per_day || 1,\n      days_per_week: line.days_per_week || 5,\n      time_multiplier: line.time_multiplier || 1.0,\n      start_time: line.start_time || '08:00',\n      end_time: line.end_time || '17:00',\n      lunch_break_duration: line.lunch_break_duration || 60,\n      lunch_break_start: line.lunch_break_start || '12:00',\n      break_duration: line.break_duration || 15,\n      auto_schedule_enabled: true,\n      maintenance_interval_days: 30,\n      efficiency_target: 85\n    });\n    setShowLineConfigModal(true);\n  };\n  const updateLineConfig = async (lineId, config) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      console.log('Updating line config for:', lineId, 'with config:', config);\n      const response = await fetch(`${baseUrl}/api/production-lines/${lineId}/config`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(config)\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Response error:', errorData);\n        throw new Error(`Failed to update line configuration: ${response.status} ${errorData}`);\n      }\n      const result = await response.json();\n      console.log('Update successful:', result);\n\n      // Refresh production lines data\n      await fetchProductionLines();\n      setShowLineConfigModal(false);\n      setSelectedLineForConfig(null);\n      setEditingLineConfig(null);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(`Line configuration updated successfully for ${selectedLineForConfig === null || selectedLineForConfig === void 0 ? void 0 : selectedLineForConfig.line_name}`);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      console.error('Error updating line config:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update line configuration');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = workOrder => {\n    setDraggedWorkOrder(workOrder);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = async (e, targetLineId, targetTime) => {\n    e.preventDefault();\n    if (!draggedWorkOrder) return;\n    try {\n      const targetDateTime = new Date(`${selectedDate}T${targetTime}`);\n      const endDateTime = new Date(targetDateTime);\n\n      // Calculate total duration from available time fields\n      const setupHours = draggedWorkOrder.setup_hours_estimated || 0;\n      const productionHours = draggedWorkOrder.production_time_hours_estimated || 0;\n      const productionDays = draggedWorkOrder.production_time_days_estimated || 0;\n      const totalDurationHours = setupHours + productionHours + productionDays * 8;\n      endDateTime.setHours(endDateTime.getHours() + totalDurationHours);\n      await updateWorkOrderSchedule(draggedWorkOrder.id, {\n        line_id: targetLineId,\n        scheduled_start_time: targetDateTime.toISOString(),\n        scheduled_end_time: endDateTime.toISOString()\n      });\n\n      // Refresh data\n      await fetchWorkOrders();\n      setDraggedWorkOrder(null);\n    } catch (err) {\n      console.error('Drop error:', err);\n      setError('Failed to schedule work order');\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchWorkOrders(), fetchProductionLines()]);\n      setLoading(false);\n    };\n    loadData();\n  }, [fetchWorkOrders, fetchProductionLines]);\n\n  // Real-time updates - using the context's event system\n  useEffect(() => {\n    const unsubscribe = onWorkOrderUpdate(() => {\n      fetchWorkOrders();\n    });\n    return unsubscribe;\n  }, [onWorkOrderUpdate, fetchWorkOrders]);\n\n  // Filter work orders by selected line\n  const filteredWorkOrders = selectedLine === 'all' ? workOrders : workOrders.filter(wo => wo.line_name === selectedLine);\n\n  // Generate timeline slots\n  const generateTimelineSlots = () => {\n    const slots = [];\n    filteredWorkOrders.forEach((workOrder, index) => {\n      if (workOrder.scheduled_start_time) {\n        const startTime = new Date(workOrder.scheduled_start_time);\n        const endTime = workOrder.scheduled_end_time ? new Date(workOrder.scheduled_end_time) : startTime;\n        const duration = (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60); // hours\n\n        slots.push({\n          workOrder,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          duration,\n          position: index\n        });\n      }\n    });\n    return slots;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-sy-black-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n          className: \"h-8 w-8 text-sy-green-600 mx-auto mb-4 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sy-black-600\",\n          children: \"Loading schedule...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-sy-black-900\",\n          children: \"Production Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-sy-black-600\",\n          children: \"Manage and optimize production scheduling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfigModal(true),\n          className: \"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-sy-black-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500\",\n          children: [/*#__PURE__*/_jsxDEV(CogIcon, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this), \"Config\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this), user && ['admin', 'scheduler'].includes(user.role) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: runAutoSchedule,\n            disabled: autoScheduleRunning,\n            className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sy-green-600 hover:bg-sy-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500 disabled:opacity-50\",\n            children: [autoScheduleRunning ? /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n              className: \"h-4 w-4 mr-2 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(CalendarIcon, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 19\n            }, this), autoScheduleRunning ? 'Scheduling...' : 'Auto Schedule']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-sy-black-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 mr-1\",\n              children: \"Manual Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 17\n            }, this), \"Hand Placement excluded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n          className: \"h-5 w-5 text-red-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-red-800\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-700\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-50 border border-green-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: \"h-5 w-5 text-green-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-green-800\",\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-green-700\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: selectedDate,\n            onChange: e => setSelectedDate(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Production Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLine,\n            onChange: e => setSelectedLine(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Lines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 15\n            }, this), productionLines.map(line => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: line.line_name,\n              children: [line.line_name, line.line_name.toLowerCase().includes('hand') ? ' (Manual Only)' : '']\n            }, line.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"View Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: viewMode,\n            onChange: e => setViewMode(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"timeline\",\n              children: \"Timeline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"calendar\",\n              children: \"Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"list\",\n              children: \"List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-sy-black-600\",\n            children: [filteredWorkOrders.length, \" work orders\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 15\n            }, this), filteredWorkOrders.filter(wo => wo.scheduled_start_time).length, \" scheduled\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 7\n    }, this), viewMode === 'timeline' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Timeline View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid bg-gray-50 border-b border-gray-200\",\n            style: {\n              gridTemplateColumns: '200px repeat(12, 1fr)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-700\",\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 17\n            }, this), Array.from({\n              length: 12\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-700 text-center border-l border-gray-200\",\n              children: [8 + i, \":00\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 15\n          }, this), productionLines.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid border-b border-gray-200\",\n            style: {\n              gridTemplateColumns: '200px repeat(12, 1fr)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-900 bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: line.line_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 944,\n                    columnNumber: 25\n                  }, this), line.line_name.toLowerCase().includes('hand') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\",\n                    children: \"Manual Only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 946,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 943,\n                  columnNumber: 23\n                }, this), user && ['admin', 'scheduler'].includes(user.role) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openLineConfig(line),\n                  className: \"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-sy-black-700 bg-white hover:bg-gray-50\",\n                  title: \"Configure line settings\",\n                  children: /*#__PURE__*/_jsxDEV(CogIcon, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 957,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 952,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 19\n            }, this), Array.from({\n              length: 12\n            }, (_, i) => {\n              const timeSlot = `${8 + i}:00`;\n              const scheduledWorkOrder = generateTimelineSlots().find(slot => slot.workOrder.line_name === line.line_name && slot.startTime === timeSlot);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 border-l border-gray-200 min-h-[60px] relative\",\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, line.id, timeSlot),\n                children: scheduledWorkOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-sy-green-100 border border-sy-green-300 rounded p-2 text-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-sy-green-800\",\n                    children: scheduledWorkOrder.workOrder.work_order_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 979,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sy-green-600\",\n                    children: [scheduledWorkOrder.duration, \"h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 982,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-400 text-xs\",\n                  children: \"Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 23\n              }, this);\n            })]\n          }, line.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 9\n    }, this), viewMode === 'list' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Work Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Work Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Assembly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Clear to Build\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Ship Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Scheduled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredWorkOrders.map(workOrder => /*#__PURE__*/_jsxDEV(\"tr\", {\n              draggable: workOrder.clear_to_build,\n              onDragStart: () => workOrder.clear_to_build && handleDragStart(workOrder),\n              className: `hover:bg-gray-50 ${workOrder.clear_to_build ? 'cursor-move' : 'cursor-not-allowed opacity-60'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-sy-black-900\",\n                children: workOrder.work_order_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.customer_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.assembly_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${workOrder.status === 'Completed' ? 'bg-green-100 text-green-800' : workOrder.status === 'Cancelled' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: workOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1057,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${workOrder.clear_to_build ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                  children: workOrder.clear_to_build ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.ship_date ? new Date(workOrder.ship_date).toLocaleDateString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1072,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: [workOrder.production_time_hours_estimated || 0, \"h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.scheduled_start_time ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    className: \"h-4 w-4 text-green-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1081,\n                    columnNumber: 27\n                  }, this), new Date(workOrder.scheduled_start_time).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(XCircleIcon, {\n                    className: \"h-4 w-4 text-red-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1086,\n                    columnNumber: 27\n                  }, this), \"Not scheduled\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1085,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"text-sy-green-600 hover:text-sy-green-900\",\n                  onClick: () => {\n                    // TODO: Add toggle clear to build functionality\n                    console.log('Toggle clear to build for:', workOrder.work_order_number);\n                  },\n                  children: workOrder.clear_to_build ? 'Mark Not Ready' : 'Mark Ready'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1092,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1091,\n                columnNumber: 21\n              }, this)]\n            }, workOrder.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 9\n    }, this), showConfigModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-sy-black-900 mb-4\",\n            children: \"Schedule Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Hours per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: scheduleConfig.hours_per_day,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  hours_per_day: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Days per Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: scheduleConfig.days_per_week,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  days_per_week: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Efficiency Factor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                value: scheduleConfig.efficiency_factor,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  efficiency_factor: parseFloat(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowConfigModal(false),\n              className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // Save configuration logic here\n                setShowConfigModal(false);\n              },\n              className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1112,\n      columnNumber: 9\n    }, this), showLineConfigModal && selectedLineForConfig && editingLineConfig && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      onClick: () => {\n        setShowLineConfigModal(false);\n        setSelectedLineForConfig(null);\n        setEditingLineConfig(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-sy-black-900\",\n              children: [\"Configure \", selectedLineForConfig.line_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowLineConfigModal(false);\n                setSelectedLineForConfig(null);\n                setEditingLineConfig(null);\n              },\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"h-6 w-6\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M6 18L18 6M6 6l12 12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1206,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Hours per Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.hours_per_shift,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  hours_per_shift: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Shifts per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.shifts_per_day,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  shifts_per_day: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Days per Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.days_per_week,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  days_per_week: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1240,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Time Multiplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                value: editingLineConfig.time_multiplier,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  time_multiplier: parseFloat(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.start_time,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  start_time: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1265,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.end_time,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  end_time: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Lunch Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.lunch_break_duration,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  lunch_break_duration: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1289,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Lunch Break Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.lunch_break_start,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  lunch_break_start: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1301,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1310,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.break_duration,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  break_duration: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1313,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowLineConfigModal(false);\n                setSelectedLineForConfig(null);\n                setEditingLineConfig(null);\n              },\n              className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateLineConfig(selectedLineForConfig.id, editingLineConfig),\n              className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\",\n              children: \"Save Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 783,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"qwRJ+2Yb+7ZwhMmlxIRweB9uPC8=\", false, function () {\n  return [useAuth, useSocket];\n});\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CalendarIcon","CogIcon","ArrowPathIcon","ExclamationTriangleIcon","CheckCircleIcon","XCircleIcon","useAuth","useSocket","jsxDEV","_jsxDEV","Schedule","_s","user","onWorkOrderUpdate","workOrders","setWorkOrders","productionLines","setProductionLines","scheduleConfig","setScheduleConfig","hours_per_day","days_per_week","efficiency_factor","selectedLine","setSelectedLine","selectedDate","setSelectedDate","Date","toISOString","split","viewMode","setViewMode","loading","setLoading","error","setError","successMessage","setSuccessMessage","draggedWorkOrder","setDraggedWorkOrder","showConfigModal","setShowConfigModal","showLineConfigModal","setShowLineConfigModal","selectedLineForConfig","setSelectedLineForConfig","editingLineConfig","setEditingLineConfig","autoScheduleRunning","setAutoScheduleRunning","baseUrl","process","env","NODE_ENV","window","location","origin","fetchWorkOrders","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","work_orders","err","console","fetchProductionLines","production_lines","updateWorkOrderSchedule","workOrderId","scheduleData","method","body","JSON","stringify","runAutoSchedule","includes","role","log","availableWorkOrders","filter","wo","status","scheduled_start_time","length","Set","map","clear_to_build","availableLines","line","line_name","toLowerCase","auto_schedule_enabled","totalWorkOrders","completedWorkOrders","cancelledWorkOrders","scheduledWorkOrders","totalLines","maintenanceLines","downLines","handPlacementLines","disabledLines","calculateWorkOrderPriority","priority","ship_date","daysUntilShip","Math","ceil","getTime","max","kit_date","daysUntilKit","min","quantity","statusPriority","prioritizedWorkOrders","sort","a","b","priorityA","priorityB","calculateLineScore","workOrder","score","setupHours","setup_hours_estimated","productionHours","production_time_hours_estimated","productionDays","production_time_days_estimated","totalDurationHours","utilizationRatio","available_capacity","hours_per_shift","shifts_per_day","efficiency_target","time_multiplier","line_type","current_utilization","bestLine","bestScore","bestStartTime","dailyCapacity","daysRequired","lineScore","availableSlot","findEarliestMultiDaySlot","adjustedDuration","endTime","workingHoursPerDay","setHours","getHours","remainingHours","currentDay","hoursThisDay","setDate","getDate","getDay","startHour","start_time","Number","setTime","work_order_number","id","line_id","scheduled_end_time","line_position","scheduleError","message","push","setTimeout","targetDate","startTimeStr","endTimeStr","end_time","startMinute","endHour","endMinute","checkDate","maxLookAhead","dayOffset","currentCheckDate","dayOfWeek","consecutiveDaysAvailable","dayIndex","checkingDate","checkingDayOfWeek","daySchedules","toDateString","usedCapacity","reduce","total","start","end","duration","dailyHoursNeeded","startTime","findEarliestAvailableSlot","lineSchedules","currentTime","slotEndTime","hasConflict","some","schedule","scheduleStart","scheduleEnd","nextConflict","find","openLineConfig","lunch_break_duration","lunch_break_start","break_duration","maintenance_interval_days","updateLineConfig","lineId","config","errorData","text","result","handleDragStart","handleDragOver","e","preventDefault","handleDrop","targetLineId","targetTime","targetDateTime","endDateTime","loadData","Promise","all","unsubscribe","filteredWorkOrders","generateTimelineSlots","slots","forEach","index","toTimeString","slice","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","value","onChange","target","style","gridTemplateColumns","Array","from","_","i","title","timeSlot","scheduledWorkOrder","slot","onDragOver","onDrop","draggable","onDragStart","customer_name","assembly_number","toLocaleDateString","prev","parseInt","step","parseFloat","stopPropagation","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/Schedule.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  CalendarIcon, \n  CogIcon, \n  ArrowPathIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  XCircleIcon\n} from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext.tsx';\nimport { useSocket } from '../contexts/SocketContext.tsx';\n\ninterface WorkOrder {\n  id: string;\n  work_order_number: string;\n  quantity: number;\n  status: string;\n  clear_to_build: boolean; // New field\n  kit_date: string | null;\n  ship_date: string | null;\n  setup_hours_estimated: number | null;\n  production_time_hours_estimated: number | null;\n  production_time_days_estimated: number | null;\n  setup_hours_actual: number | null;\n  production_time_hours_actual: number | null;\n  production_time_days_actual: number | null;\n  completion_date: string | null;\n  trolley_number: number | null;\n  line_id: string | null;\n  line_position: number | null;\n  scheduled_start_time: string | null;\n  scheduled_end_time: string | null;\n  is_hand_placed: boolean;\n  created_at: string;\n  updated_at: string;\n  assembly_number: string;\n  revision: string;\n  description: string | null;\n  customer_name: string;\n  customer_id: string;\n  line_name: string | null;\n  line_type: string | null;\n}\n\ninterface ProductionLine {\n  id: string;\n  line_name: string;\n  line_type: string;\n  status: string;\n  current_utilization: number;\n  available_capacity: number;\n  time_multiplier: number;\n  hours_per_shift: number;\n  shifts_per_day: number;\n  days_per_week: number;\n  start_time: string;\n  end_time: string;\n  lunch_break_duration: number;\n  lunch_break_start: string;\n  break_duration: number;\n  auto_schedule_enabled?: boolean;\n  maintenance_interval_days?: number;\n  efficiency_target?: number;\n  next_available_slot?: string;\n}\n\ninterface ScheduleConfig {\n  hours_per_day: number;\n  days_per_week: number;\n  efficiency_factor: number;\n}\n\ninterface LineConfig {\n  hours_per_shift: number;\n  shifts_per_day: number;\n  days_per_week: number;\n  time_multiplier: number;\n  start_time: string;\n  end_time: string;\n  lunch_break_duration: number;\n  lunch_break_start: string;\n  break_duration: number;\n  auto_schedule_enabled: boolean;\n  maintenance_interval_days: number;\n  efficiency_target: number;\n}\n\ninterface TimelineSlot {\n  workOrder: WorkOrder;\n  startTime: string;\n  endTime: string;\n  duration: number;\n  position: number;\n}\n\nconst Schedule: React.FC = () => {\n  const { user } = useAuth();\n  const { onWorkOrderUpdate } = useSocket();\n  \n  // State management\n  const [workOrders, setWorkOrders] = useState<WorkOrder[]>([]);\n  const [productionLines, setProductionLines] = useState<ProductionLine[]>([]);\n  const [scheduleConfig, setScheduleConfig] = useState<ScheduleConfig>({\n    hours_per_day: 8,\n    days_per_week: 5,\n    efficiency_factor: 1.0\n  });\n  \n  // UI State\n  const [selectedLine, setSelectedLine] = useState<string>('all');\n  const [selectedDate, setSelectedDate] = useState<string>(new Date().toISOString().split('T')[0]);\n  const [viewMode, setViewMode] = useState<'timeline' | 'calendar' | 'list'>('timeline');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [draggedWorkOrder, setDraggedWorkOrder] = useState<WorkOrder | null>(null);\n  const [showConfigModal, setShowConfigModal] = useState(false);\n  const [showLineConfigModal, setShowLineConfigModal] = useState(false);\n  const [selectedLineForConfig, setSelectedLineForConfig] = useState<ProductionLine | null>(null);\n  const [editingLineConfig, setEditingLineConfig] = useState<LineConfig | null>(null);\n  const [autoScheduleRunning, setAutoScheduleRunning] = useState(false);\n\n  // API base URL - use production for local development since local database isn't set up\n  const baseUrl = process.env.NODE_ENV === 'production' \n    ? window.location.origin\n    : 'https://smtdatabase01-production.up.railway.app';\n\n  // Fetch work orders\n  const fetchWorkOrders = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/schedule/timeline`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) throw new Error('Failed to fetch work orders');\n      \n      const data = await response.json();\n      setWorkOrders(data.work_orders || []);\n    } catch (err) {\n      console.error('Error fetching work orders:', err);\n      setError('Failed to load work orders');\n    }\n  }, [baseUrl]);\n\n  // Fetch production lines\n  const fetchProductionLines = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/production-lines`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) throw new Error('Failed to fetch production lines');\n      \n      const data = await response.json();\n      setProductionLines(data.production_lines || []);\n    } catch (err) {\n      console.error('Error fetching production lines:', err);\n      setError('Failed to load production lines');\n    }\n  }, [baseUrl]);\n\n  // Update work order schedule\n  const updateWorkOrderSchedule = useCallback(async (workOrderId: string, scheduleData: any) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/schedule/work-orders/${workOrderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(scheduleData)\n      });\n\n      if (!response.ok) throw new Error('Failed to update schedule');\n      \n      return await response.json();\n    } catch (err) {\n      console.error('Error updating schedule:', err);\n      throw err;\n    }\n  }, [baseUrl]);\n\n  // Enhanced auto-schedule algorithm\n  const runAutoSchedule = useCallback(async () => {\n    if (!user || !['admin', 'scheduler'].includes(user.role)) {\n      setError('Insufficient permissions for auto-scheduling');\n      return;\n    }\n\n    console.log('🚀 Starting auto-schedule...');\n    console.log('👤 User role:', user.role);\n    console.log('🌐 Base URL:', baseUrl);\n    console.log('🔑 Auth token exists:', !!localStorage.getItem('auth_token'));\n\n    setAutoScheduleRunning(true);\n    try {\n      // Get available work orders (not completed, cancelled, or already scheduled)\n      const availableWorkOrders = workOrders.filter(wo => \n        wo.status !== 'Completed' && \n        wo.status !== 'Cancelled' && \n        !wo.scheduled_start_time\n        // Note: clear_to_build filtering removed for now since column doesn't exist in DB\n      );\n\n      // Debug logging\n      console.log('Total work orders:', workOrders.length);\n      console.log('Available work orders:', availableWorkOrders.length);\n      console.log('Work order statuses:', [...new Set(workOrders.map(wo => wo.status))]);\n      console.log('Scheduled work orders:', workOrders.filter(wo => wo.scheduled_start_time).length);\n      console.log('Clear to build statuses:', [...new Set(workOrders.map(wo => wo.clear_to_build))]);\n\n      // Get available production lines (exclude Hand Placement and disabled lines)\n      const availableLines = productionLines.filter(line => \n        line.status !== 'maintenance' &&\n        line.status !== 'down' &&\n        !line.line_name.toLowerCase().includes('hand') &&\n        line.auto_schedule_enabled !== false\n      );\n\n      // Debug logging for production lines\n      console.log('Total production lines:', productionLines.length);\n      console.log('Available production lines:', availableLines.length);\n      console.log('Line statuses:', [...new Set(productionLines.map(line => line.status))]);\n      console.log('Line names:', productionLines.map(line => line.line_name));\n\n      if (availableWorkOrders.length === 0) {\n        const totalWorkOrders = workOrders.length;\n        const completedWorkOrders = workOrders.filter(wo => wo.status === 'Completed').length;\n        const cancelledWorkOrders = workOrders.filter(wo => wo.status === 'Cancelled').length;\n        const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time).length;\n                setError(`No work orders available for scheduling. Total: ${totalWorkOrders}, Completed: ${completedWorkOrders}, Cancelled: ${cancelledWorkOrders}, Already Scheduled: ${scheduledWorkOrders}`);\n        return;\n      }\n\n      if (availableLines.length === 0) {\n        const totalLines = productionLines.length;\n        const maintenanceLines = productionLines.filter(line => line.status === 'maintenance').length;\n        const downLines = productionLines.filter(line => line.status === 'down').length;\n        const handPlacementLines = productionLines.filter(line => line.line_name.toLowerCase().includes('hand')).length;\n        const disabledLines = productionLines.filter(line => line.auto_schedule_enabled === false).length;\n        \n        setError(`No production lines available for scheduling. Total: ${totalLines}, Maintenance: ${maintenanceLines}, Down: ${downLines}, Hand Placement: ${handPlacementLines}, Auto-schedule Disabled: ${disabledLines}`);\n        return;\n      }\n\n      // Enhanced priority scoring system\n      const calculateWorkOrderPriority = (wo: WorkOrder) => {\n        let priority = 0;\n        \n        // Ship date priority (earlier = higher priority)\n        if (wo.ship_date) {\n          const daysUntilShip = Math.ceil((new Date(wo.ship_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          priority += Math.max(0, 30 - daysUntilShip) * 10; // Higher priority for urgent shipments\n        }\n        \n        // Kit date priority\n        if (wo.kit_date) {\n          const daysUntilKit = Math.ceil((new Date(wo.kit_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          priority += Math.max(0, 7 - daysUntilKit) * 5; // Higher priority for urgent kits\n        }\n        \n        // Quantity priority (larger orders get higher priority)\n        priority += Math.min(wo.quantity / 100, 5); // Cap at 5 points\n        \n        // Status priority\n        const statusPriority = {\n          'Ready': 10,\n          'In Progress': 8,\n          'Pending': 5,\n          'On Hold': 2\n        };\n        priority += statusPriority[wo.status as keyof typeof statusPriority] || 0;\n        \n        return priority;\n      };\n\n      // Sort work orders by enhanced priority\n      const prioritizedWorkOrders = [...availableWorkOrders].sort((a, b) => {\n        const priorityA = calculateWorkOrderPriority(a);\n        const priorityB = calculateWorkOrderPriority(b);\n        return priorityB - priorityA; // Higher priority first\n      });\n\n      // Line scoring system\n      const calculateLineScore = (line: ProductionLine, workOrder: WorkOrder) => {\n        let score = 0;\n        \n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n        \n        // Capacity utilization (prefer lines with more available capacity)\n        const utilizationRatio = line.available_capacity / (line.hours_per_shift * line.shifts_per_day * line.days_per_week);\n        score += (1 - utilizationRatio) * 20; // Higher score for less utilized lines\n        \n        // Efficiency score (prefer more efficient lines)\n        score += (line.efficiency_target || 85) / 10;\n        \n        // Time multiplier preference (prefer lines with lower multipliers for faster processing)\n        score += (1 / (line.time_multiplier || 1.0)) * 10;\n        \n        // Line type preference (prefer SMT over other types)\n        if (line.line_type === 'SMT') {\n          score += 15;\n        }\n        \n        // Current utilization (prefer less busy lines)\n        score += (1 - (line.current_utilization || 0) / 100) * 10;\n        \n        return score;\n      };\n\n      // Track scheduled work orders for conflict detection\n      const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time);\n      \n      // Schedule work orders\n      for (const workOrder of prioritizedWorkOrders) {\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n\n        // Find best line for this work order\n        let bestLine: ProductionLine | null = null;\n        let bestScore = -1;\n        let bestStartTime: Date | null = null;\n\n        for (const line of availableLines) {\n          console.log(`🔍 Checking line ${line.line_name}:`);\n          \n          // Calculate daily capacity for this line\n          const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n          console.log(`  Daily capacity: ${dailyCapacity} hours/day`);\n          console.log(`  Required duration: ${totalDurationHours} hours total`);\n          \n          // Calculate how many days this work order will need\n          const daysRequired = Math.ceil(totalDurationHours / dailyCapacity);\n          console.log(`  Days required: ${daysRequired} days`);\n          \n          // Check if work order can fit within daily capacity (even if it spans multiple days)\n          if (dailyCapacity === 0) {\n            console.log(`  ❌ No daily capacity configured`);\n            continue;\n          }\n\n          // Calculate line score\n          const lineScore = calculateLineScore(line, workOrder);\n          console.log(`  📊 Line score: ${lineScore}`);\n          \n          // Find earliest available multi-day slot on this line\n          const availableSlot = findEarliestMultiDaySlot(line, workOrder, scheduledWorkOrders, selectedDate, daysRequired);\n          console.log(`  ⏰ Available slot: ${availableSlot ? availableSlot.toISOString() : 'None'}`);\n          \n          if (availableSlot && lineScore > bestScore) {\n            console.log(`  ✅ New best line!`);\n            bestLine = line;\n            bestScore = lineScore;\n            bestStartTime = availableSlot;\n          }\n        }\n\n        if (bestLine && bestStartTime) {\n          // Calculate end time for multi-day scheduling\n          const adjustedDuration = totalDurationHours * (bestLine.time_multiplier || 1.0);\n          const dailyCapacity = (bestLine.shifts_per_day || 1) * (bestLine.hours_per_shift || 8);\n          const daysRequired = Math.ceil(adjustedDuration / dailyCapacity);\n          \n          // Calculate actual end time considering daily work hours\n          const endTime = new Date(bestStartTime);\n          const workingHoursPerDay = bestLine.hours_per_shift || 8;\n          \n          if (daysRequired === 1) {\n            // Single day: just add the duration\n            endTime.setHours(endTime.getHours() + adjustedDuration);\n          } else {\n            // Multi-day: calculate based on working days and daily capacity\n            let remainingHours = adjustedDuration;\n            let currentDay = new Date(bestStartTime);\n            \n            while (remainingHours > 0) {\n              const hoursThisDay = Math.min(remainingHours, workingHoursPerDay);\n              remainingHours -= hoursThisDay;\n              \n              if (remainingHours > 0) {\n                // Move to next working day\n                currentDay.setDate(currentDay.getDate() + 1);\n                // Skip weekends if line doesn't work weekends\n                while ((bestLine.days_per_week || 5) === 5 && (currentDay.getDay() === 0 || currentDay.getDay() === 6)) {\n                  currentDay.setDate(currentDay.getDate() + 1);\n                }\n              } else {\n                // Last day - calculate exact end time\n                const [startHour] = (bestLine.start_time || '08:00').split(':').map(Number);\n                currentDay.setHours(startHour + hoursThisDay);\n              }\n            }\n            \n            endTime.setTime(currentDay.getTime());\n          }\n\n          console.log(`📅 Scheduling work order ${workOrder.work_order_number} on ${bestLine.line_name}`);\n          console.log(`⏰ Start: ${bestStartTime.toISOString()}, End: ${endTime.toISOString()}`);\n\n          // Update work order with schedule\n          try {\n            await updateWorkOrderSchedule(workOrder.id, {\n              line_id: bestLine.id,\n              scheduled_start_time: bestStartTime.toISOString(),\n              scheduled_end_time: endTime.toISOString(),\n              line_position: 1\n            });\n            console.log(`✅ Successfully scheduled work order ${workOrder.work_order_number}`);\n          } catch (scheduleError) {\n            console.error(`❌ Failed to schedule work order ${workOrder.work_order_number}:`, scheduleError);\n            throw new Error(`Failed to schedule work order ${workOrder.work_order_number}: ${scheduleError.message}`);\n          }\n\n          // Add to scheduled work orders for conflict detection\n          scheduledWorkOrders.push({\n            ...workOrder,\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString()\n          });\n        }\n      }\n\n      // Refresh data\n      await fetchWorkOrders();\n      setSuccessMessage('Auto-schedule completed successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n      setError(null);\n    } catch (err) {\n      console.error('Auto-schedule error:', err);\n      setError('Auto-scheduling failed: ' + (err instanceof Error ? err.message : 'Unknown error'));\n    } finally {\n      setAutoScheduleRunning(false);\n    }\n  }, [workOrders, productionLines, selectedDate, user, updateWorkOrderSchedule, fetchWorkOrders]);\n\n  // Helper function to find earliest available multi-day time slot\n  const findEarliestMultiDaySlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string,\n    daysRequired: number\n  ): Date | null => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate daily capacity and work order duration\n    const dailyCapacity = (line.shifts_per_day || 1) * (line.hours_per_shift || 8);\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n\n    // Start checking from the target date\n    let checkDate = new Date(targetDate);\n    const maxLookAhead = 45; // Don't look more than 45 days ahead\n    \n    for (let dayOffset = 0; dayOffset < maxLookAhead; dayOffset++) {\n      const currentCheckDate = new Date(checkDate);\n      currentCheckDate.setDate(checkDate.getDate() + dayOffset);\n      \n      // Skip weekends if line doesn't work weekends\n      const dayOfWeek = currentCheckDate.getDay();\n      if ((line.days_per_week || 5) === 5 && (dayOfWeek === 0 || dayOfWeek === 6)) {\n        continue;\n      }\n\n      // Check if we have consecutive available days starting from this date\n      let consecutiveDaysAvailable = true;\n      \n      for (let dayIndex = 0; dayIndex < daysRequired; dayIndex++) {\n        const checkingDate = new Date(currentCheckDate);\n        checkingDate.setDate(currentCheckDate.getDate() + dayIndex);\n        \n        // Skip weekends for additional days too\n        const checkingDayOfWeek = checkingDate.getDay();\n        if ((line.days_per_week || 5) === 5 && (checkingDayOfWeek === 0 || checkingDayOfWeek === 6)) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n\n        // Get existing schedules for this line on this specific date\n        const daySchedules = scheduledWorkOrders.filter(wo => \n          wo.line_id === line.id && \n          wo.scheduled_start_time &&\n          wo.scheduled_end_time &&\n          new Date(wo.scheduled_start_time).toDateString() === checkingDate.toDateString()\n        );\n\n        // Calculate how much capacity is used this day\n        const usedCapacity = daySchedules.reduce((total, wo) => {\n          const start = new Date(wo.scheduled_start_time!);\n          const end = new Date(wo.scheduled_end_time!);\n          const duration = (end.getTime() - start.getTime()) / (1000 * 60 * 60); // Convert to hours\n          return total + duration;\n        }, 0);\n\n        // Check if we have enough remaining capacity for this day's portion\n        const dailyHoursNeeded = Math.min(totalDurationHours - (dayIndex * dailyCapacity), dailyCapacity);\n        \n        if (usedCapacity + dailyHoursNeeded > dailyCapacity) {\n          consecutiveDaysAvailable = false;\n          break;\n        }\n      }\n\n      if (consecutiveDaysAvailable) {\n        // Found a valid starting date - return the start time\n        const startTime = new Date(currentCheckDate);\n        startTime.setHours(startHour, startMinute, 0, 0);\n        return startTime;\n      }\n    }\n\n    return null;\n  };\n\n  // Helper function to find earliest available time slot\n  const findEarliestAvailableSlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string\n  ): Date | null => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate work order duration\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n\n    // Get existing schedules for this line on the target date\n    const lineSchedules = scheduledWorkOrders.filter(wo => \n      wo.line_id === line.id && \n      wo.scheduled_start_time &&\n      wo.scheduled_end_time &&\n      new Date(wo.scheduled_start_time).toDateString() === new Date(targetDate).toDateString()\n    ).sort((a, b) => \n      new Date(a.scheduled_start_time!).getTime() - new Date(b.scheduled_start_time!).getTime()\n    );\n\n    // Start with line opening time\n    let currentTime = new Date(targetDate);\n    currentTime.setHours(startHour, startMinute, 0, 0);\n\n    // Check each potential time slot\n    while (currentTime.getHours() < endHour) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setHours(slotEndTime.getHours() + adjustedDuration);\n\n      // Check if slot extends beyond line closing time\n      if (slotEndTime.getHours() > endHour) {\n        // Move to next day\n        currentTime.setDate(currentTime.getDate() + 1);\n        currentTime.setHours(startHour, startMinute, 0, 0);\n        continue;\n      }\n\n      // Check for conflicts with existing schedules\n      const hasConflict = lineSchedules.some(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time!);\n        const scheduleEnd = new Date(schedule.scheduled_end_time!);\n        \n        return (\n          (currentTime >= scheduleStart && currentTime < scheduleEnd) ||\n          (slotEndTime > scheduleStart && slotEndTime <= scheduleEnd) ||\n          (currentTime <= scheduleStart && slotEndTime >= scheduleEnd)\n        );\n      });\n\n      if (!hasConflict) {\n        return currentTime;\n      }\n\n      // Move to next potential slot (after the conflicting schedule)\n      const nextConflict = lineSchedules.find(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time!);\n        return scheduleStart >= currentTime;\n      });\n\n      if (nextConflict) {\n        currentTime = new Date(nextConflict.scheduled_end_time!);\n      } else {\n        // No more conflicts, but check if we still have time today\n        if (currentTime.getHours() + adjustedDuration <= endHour) {\n          return currentTime;\n        } else {\n          // Move to next day\n          currentTime.setDate(currentTime.getDate() + 1);\n          currentTime.setHours(startHour, startMinute, 0, 0);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  // Line configuration functions\n  const openLineConfig = (line: ProductionLine) => {\n    setSelectedLineForConfig(line);\n    setEditingLineConfig({\n      hours_per_shift: line.hours_per_shift || 8,\n      shifts_per_day: line.shifts_per_day || 1,\n      days_per_week: line.days_per_week || 5,\n      time_multiplier: line.time_multiplier || 1.0,\n      start_time: line.start_time || '08:00',\n      end_time: line.end_time || '17:00',\n      lunch_break_duration: line.lunch_break_duration || 60,\n      lunch_break_start: line.lunch_break_start || '12:00',\n      break_duration: line.break_duration || 15,\n      auto_schedule_enabled: true,\n      maintenance_interval_days: 30,\n      efficiency_target: 85\n    });\n    setShowLineConfigModal(true);\n  };\n\n  const updateLineConfig = async (lineId: string, config: LineConfig) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      console.log('Updating line config for:', lineId, 'with config:', config);\n      \n      const response = await fetch(`${baseUrl}/api/production-lines/${lineId}/config`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(config)\n      });\n\n      console.log('Response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Response error:', errorData);\n        throw new Error(`Failed to update line configuration: ${response.status} ${errorData}`);\n      }\n      \n      const result = await response.json();\n      console.log('Update successful:', result);\n      \n      // Refresh production lines data\n      await fetchProductionLines();\n      setShowLineConfigModal(false);\n      setSelectedLineForConfig(null);\n      setEditingLineConfig(null);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(`Line configuration updated successfully for ${selectedLineForConfig?.line_name}`);\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      console.error('Error updating line config:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update line configuration');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = (workOrder: WorkOrder) => {\n    setDraggedWorkOrder(workOrder);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = async (e: React.DragEvent, targetLineId: string, targetTime: string) => {\n    e.preventDefault();\n    \n    if (!draggedWorkOrder) return;\n\n    try {\n      const targetDateTime = new Date(`${selectedDate}T${targetTime}`);\n      const endDateTime = new Date(targetDateTime);\n      \n      // Calculate total duration from available time fields\n      const setupHours = draggedWorkOrder.setup_hours_estimated || 0;\n      const productionHours = draggedWorkOrder.production_time_hours_estimated || 0;\n      const productionDays = draggedWorkOrder.production_time_days_estimated || 0;\n      const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n      \n      endDateTime.setHours(endDateTime.getHours() + totalDurationHours);\n\n      await updateWorkOrderSchedule(draggedWorkOrder.id, {\n        line_id: targetLineId,\n        scheduled_start_time: targetDateTime.toISOString(),\n        scheduled_end_time: endDateTime.toISOString()\n      });\n\n      // Refresh data\n      await fetchWorkOrders();\n      setDraggedWorkOrder(null);\n    } catch (err) {\n      console.error('Drop error:', err);\n      setError('Failed to schedule work order');\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchWorkOrders(), fetchProductionLines()]);\n      setLoading(false);\n    };\n\n    loadData();\n  }, [fetchWorkOrders, fetchProductionLines]);\n\n  // Real-time updates - using the context's event system\n  useEffect(() => {\n    const unsubscribe = onWorkOrderUpdate(() => {\n      fetchWorkOrders();\n    });\n\n    return unsubscribe;\n  }, [onWorkOrderUpdate, fetchWorkOrders]);\n\n  // Filter work orders by selected line\n  const filteredWorkOrders = selectedLine === 'all' \n    ? workOrders \n    : workOrders.filter(wo => wo.line_name === selectedLine);\n\n  // Generate timeline slots\n  const generateTimelineSlots = () => {\n    const slots: TimelineSlot[] = [];\n\n    filteredWorkOrders.forEach((workOrder, index) => {\n      if (workOrder.scheduled_start_time) {\n        const startTime = new Date(workOrder.scheduled_start_time);\n        const endTime = workOrder.scheduled_end_time ? new Date(workOrder.scheduled_end_time) : startTime;\n        const duration = (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60); // hours\n\n        slots.push({\n          workOrder,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          duration,\n          position: index\n        });\n      }\n    });\n\n    return slots;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-sy-black-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <ArrowPathIcon className=\"h-8 w-8 text-sy-green-600 mx-auto mb-4 animate-spin\" />\n          <p className=\"text-sy-black-600\">Loading schedule...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-sy-black-900\">Production Schedule</h1>\n          <p className=\"mt-1 text-sm text-sy-black-600\">\n            Manage and optimize production scheduling\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={() => setShowConfigModal(true)}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-sy-black-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500\"\n          >\n            <CogIcon className=\"h-4 w-4 mr-2\" />\n            Config\n          </button>\n          \n          {user && ['admin', 'scheduler'].includes(user.role) && (\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={runAutoSchedule}\n                disabled={autoScheduleRunning}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sy-green-600 hover:bg-sy-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500 disabled:opacity-50\"\n              >\n                {autoScheduleRunning ? (\n                  <ArrowPathIcon className=\"h-4 w-4 mr-2 animate-spin\" />\n                ) : (\n                  <CalendarIcon className=\"h-4 w-4 mr-2\" />\n                )}\n                {autoScheduleRunning ? 'Scheduling...' : 'Auto Schedule'}\n              </button>\n              <div className=\"text-xs text-sy-black-500\">\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 mr-1\">\n                  Manual Only\n                </span>\n                Hand Placement excluded\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n              <p className=\"mt-1 text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Success Display */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <CheckCircleIcon className=\"h-5 w-5 text-green-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-green-800\">Success</h3>\n              <p className=\"mt-1 text-sm text-green-700\">{successMessage}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Controls */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {/* Date Selector */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Date\n            </label>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            />\n          </div>\n\n          {/* Line Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Production Line\n            </label>\n            <select\n              value={selectedLine}\n              onChange={(e) => setSelectedLine(e.target.value)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            >\n              <option value=\"all\">All Lines</option>\n              {productionLines.map(line => (\n                <option key={line.id} value={line.line_name}>\n                  {line.line_name}\n                  {line.line_name.toLowerCase().includes('hand') ? ' (Manual Only)' : ''}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* View Mode */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              View Mode\n            </label>\n            <select\n              value={viewMode}\n              onChange={(e) => setViewMode(e.target.value as any)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            >\n              <option value=\"timeline\">Timeline</option>\n              <option value=\"calendar\">Calendar</option>\n              <option value=\"list\">List</option>\n            </select>\n          </div>\n\n          {/* Stats */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Summary\n            </label>\n            <div className=\"text-sm text-sy-black-600\">\n              {filteredWorkOrders.length} work orders\n              <br />\n              {filteredWorkOrders.filter(wo => wo.scheduled_start_time).length} scheduled\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Timeline View */}\n      {viewMode === 'timeline' && (\n        <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Timeline View</h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <div className=\"min-w-full\">\n              {/* Time Headers */}\n              <div className=\"grid bg-gray-50 border-b border-gray-200\" style={{ gridTemplateColumns: '200px repeat(12, 1fr)' }}>\n                <div className=\"p-3 text-sm font-medium text-sy-black-700\">Line</div>\n                {Array.from({ length: 12 }, (_, i) => (\n                  <div key={i} className=\"p-3 text-sm font-medium text-sy-black-700 text-center border-l border-gray-200\">\n                    {8 + i}:00\n                  </div>\n                ))}\n              </div>\n\n              {/* Production Lines */}\n              {productionLines.map(line => (\n                <div key={line.id} className=\"grid border-b border-gray-200\" style={{ gridTemplateColumns: '200px repeat(12, 1fr)' }}>\n                  <div className=\"p-3 text-sm font-medium text-sy-black-900 bg-gray-50\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{line.line_name}</span>\n                        {line.line_name.toLowerCase().includes('hand') && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                            Manual Only\n                          </span>\n                        )}\n                      </div>\n                      {user && ['admin', 'scheduler'].includes(user.role) && (\n                        <button\n                          onClick={() => openLineConfig(line)}\n                          className=\"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-sy-black-700 bg-white hover:bg-gray-50\"\n                          title=\"Configure line settings\"\n                        >\n                          <CogIcon className=\"h-3 w-3\" />\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {Array.from({ length: 12 }, (_, i) => {\n                    const timeSlot = `${8 + i}:00`;\n                    const scheduledWorkOrder = generateTimelineSlots().find(slot => \n                      slot.workOrder.line_name === line.line_name &&\n                      slot.startTime === timeSlot\n                    );\n\n                    return (\n                      <div\n                        key={i}\n                        className=\"p-2 border-l border-gray-200 min-h-[60px] relative\"\n                        onDragOver={handleDragOver}\n                        onDrop={(e) => handleDrop(e, line.id, timeSlot)}\n                      >\n                        {scheduledWorkOrder ? (\n                          <div className=\"bg-sy-green-100 border border-sy-green-300 rounded p-2 text-xs\">\n                            <div className=\"font-medium text-sy-green-800\">\n                              {scheduledWorkOrder.workOrder.work_order_number}\n                            </div>\n                            <div className=\"text-sy-green-600\">\n                              {scheduledWorkOrder.duration}h\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"text-gray-400 text-xs\">Available</div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Work Orders List */}\n      {viewMode === 'list' && (\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Work Orders</h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Work Order\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Customer\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Assembly\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Clear to Build\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Ship Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Duration\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Scheduled\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredWorkOrders.map((workOrder) => (\n                  <tr \n                    key={workOrder.id}\n                    draggable={workOrder.clear_to_build}\n                    onDragStart={() => workOrder.clear_to_build && handleDragStart(workOrder)}\n                    className={`hover:bg-gray-50 ${workOrder.clear_to_build ? 'cursor-move' : 'cursor-not-allowed opacity-60'}`}\n                  >\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-sy-black-900\">\n                      {workOrder.work_order_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.customer_name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.assembly_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        workOrder.status === 'Completed' ? 'bg-green-100 text-green-800' :\n                        workOrder.status === 'Cancelled' ? 'bg-red-100 text-red-800' :\n                        'bg-yellow-100 text-yellow-800'\n                      }`}>\n                        {workOrder.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        workOrder.clear_to_build ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                      }`}>\n                        {workOrder.clear_to_build ? 'Yes' : 'No'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.ship_date ? new Date(workOrder.ship_date).toLocaleDateString() : 'N/A'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.production_time_hours_estimated || 0}h\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.scheduled_start_time ? (\n                        <div className=\"flex items-center\">\n                          <CheckCircleIcon className=\"h-4 w-4 text-green-500 mr-1\" />\n                          {new Date(workOrder.scheduled_start_time).toLocaleDateString()}\n                        </div>\n                      ) : (\n                        <div className=\"flex items-center\">\n                          <XCircleIcon className=\"h-4 w-4 text-red-500 mr-1\" />\n                          Not scheduled\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button \n                        className=\"text-sy-green-600 hover:text-sy-green-900\"\n                        onClick={() => {\n                          // TODO: Add toggle clear to build functionality\n                          console.log('Toggle clear to build for:', workOrder.work_order_number);\n                        }}\n                      >\n                        {workOrder.clear_to_build ? 'Mark Not Ready' : 'Mark Ready'}\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Configuration Modal */}\n      {showConfigModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-sy-black-900 mb-4\">Schedule Configuration</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Hours per Day\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={scheduleConfig.hours_per_day}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, hours_per_day: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Days per Week\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={scheduleConfig.days_per_week}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, days_per_week: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Efficiency Factor\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={scheduleConfig.efficiency_factor}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, efficiency_factor: parseFloat(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => setShowConfigModal(false)}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Save configuration logic here\n                    setShowConfigModal(false);\n                  }}\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\"\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Line Configuration Modal */}\n      {showLineConfigModal && selectedLineForConfig && editingLineConfig && (\n        <div \n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\"\n          onClick={() => {\n            setShowLineConfigModal(false);\n            setSelectedLineForConfig(null);\n            setEditingLineConfig(null);\n          }}\n        >\n          <div \n            className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"mt-3\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-sy-black-900\">\n                  Configure {selectedLineForConfig.line_name}\n                </h3>\n                <button\n                  onClick={() => {\n                    setShowLineConfigModal(false);\n                    setSelectedLineForConfig(null);\n                    setEditingLineConfig(null);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Hours per Shift\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.hours_per_shift}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, hours_per_shift: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Shifts per Day\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.shifts_per_day}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, shifts_per_day: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Days per Week\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.days_per_week}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, days_per_week: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Time Multiplier\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={editingLineConfig.time_multiplier}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, time_multiplier: parseFloat(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Start Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.start_time}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, start_time: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    End Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.end_time}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, end_time: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Lunch Break Duration (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.lunch_break_duration}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, lunch_break_duration: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Lunch Break Start Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.lunch_break_start}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, lunch_break_start: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Break Duration (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.break_duration}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, break_duration: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => {\n                    setShowLineConfigModal(false);\n                    setSelectedLineForConfig(null);\n                    setEditingLineConfig(null);\n                  }}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => updateLineConfig(selectedLineForConfig.id, editingLineConfig)}\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\"\n                >\n                  Save Configuration\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Schedule; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}