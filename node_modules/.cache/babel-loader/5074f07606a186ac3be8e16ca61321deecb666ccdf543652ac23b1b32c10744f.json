{"ast":null,"code":"var _jsxFileName = \"/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/Schedule.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CalendarIcon, CogIcon, ArrowPathIcon, ExclamationTriangleIcon, CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext.tsx';\nimport { useSocket } from '../contexts/SocketContext.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    onWorkOrderUpdate\n  } = useSocket();\n\n  // State management\n  const [workOrders, setWorkOrders] = useState([]);\n  const [productionLines, setProductionLines] = useState([]);\n  const [scheduleConfig, setScheduleConfig] = useState({\n    hours_per_day: 8,\n    days_per_week: 5,\n    efficiency_factor: 1.0\n  });\n\n  // UI State\n  const [selectedLine, setSelectedLine] = useState('all');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [viewMode, setViewMode] = useState('timeline');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [draggedWorkOrder, setDraggedWorkOrder] = useState(null);\n  const [showConfigModal, setShowConfigModal] = useState(false);\n  const [showLineConfigModal, setShowLineConfigModal] = useState(false);\n  const [selectedLineForConfig, setSelectedLineForConfig] = useState(null);\n  const [editingLineConfig, setEditingLineConfig] = useState(null);\n  const [autoScheduleRunning, setAutoScheduleRunning] = useState(false);\n\n  // API base URL - use production for local development since local database isn't set up\n  const baseUrl = process.env.NODE_ENV === 'production' ? window.location.origin : 'https://smtdatabase01-production.up.railway.app';\n\n  // Fetch work orders\n  const fetchWorkOrders = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/schedule/timeline`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch work orders');\n      const data = await response.json();\n      setWorkOrders(data.timeline || []);\n    } catch (err) {\n      console.error('Error fetching work orders:', err);\n      setError('Failed to load work orders');\n    }\n  }, [baseUrl]);\n\n  // Fetch production lines\n  const fetchProductionLines = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/production-lines`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch production lines');\n      const data = await response.json();\n      setProductionLines(data.production_lines || []);\n    } catch (err) {\n      console.error('Error fetching production lines:', err);\n      setError('Failed to load production lines');\n    }\n  }, [baseUrl]);\n\n  // Update work order schedule\n  const updateWorkOrderSchedule = useCallback(async (workOrderId, scheduleData) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/schedule/work-orders/${workOrderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(scheduleData)\n      });\n      if (!response.ok) throw new Error('Failed to update schedule');\n      return await response.json();\n    } catch (err) {\n      console.error('Error updating schedule:', err);\n      throw err;\n    }\n  }, [baseUrl]);\n\n  // Enhanced auto-schedule algorithm\n  const runAutoSchedule = useCallback(async () => {\n    if (!user || !['admin', 'scheduler'].includes(user.role)) {\n      setError('Insufficient permissions for auto-scheduling');\n      return;\n    }\n    setAutoScheduleRunning(true);\n    try {\n      // Get available work orders (not completed, cancelled, or already scheduled)\n      const availableWorkOrders = workOrders.filter(wo => wo.status !== 'Completed' && wo.status !== 'Cancelled' && !wo.scheduled_start_time && (wo.clear_to_build === undefined || wo.clear_to_build === true) // Only schedule if clear to build is true or undefined\n      );\n\n      // Debug logging\n      console.log('Total work orders:', workOrders.length);\n      console.log('Available work orders:', availableWorkOrders.length);\n      console.log('Work order statuses:', [...new Set(workOrders.map(wo => wo.status))]);\n      console.log('Scheduled work orders:', workOrders.filter(wo => wo.scheduled_start_time).length);\n      console.log('Clear to build statuses:', [...new Set(workOrders.map(wo => wo.clear_to_build))]);\n\n      // Get available production lines (exclude Hand Placement and disabled lines)\n      const availableLines = productionLines.filter(line => line.status !== 'maintenance' && line.status !== 'down' && !line.line_name.toLowerCase().includes('hand') && line.auto_schedule_enabled !== false);\n\n      // Debug logging for production lines\n      console.log('Total production lines:', productionLines.length);\n      console.log('Available production lines:', availableLines.length);\n      console.log('Line statuses:', [...new Set(productionLines.map(line => line.status))]);\n      console.log('Line names:', productionLines.map(line => line.line_name));\n      if (availableWorkOrders.length === 0) {\n        const totalWorkOrders = workOrders.length;\n        const completedWorkOrders = workOrders.filter(wo => wo.status === 'Completed').length;\n        const cancelledWorkOrders = workOrders.filter(wo => wo.status === 'Cancelled').length;\n        const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time).length;\n        const clearToBuildFalse = workOrders.filter(wo => wo.clear_to_build === false).length;\n        setError(`No work orders available for scheduling. Total: ${totalWorkOrders}, Completed: ${completedWorkOrders}, Cancelled: ${cancelledWorkOrders}, Already Scheduled: ${scheduledWorkOrders}, Clear to Build False: ${clearToBuildFalse}`);\n        return;\n      }\n      if (availableLines.length === 0) {\n        const totalLines = productionLines.length;\n        const maintenanceLines = productionLines.filter(line => line.status === 'maintenance').length;\n        const downLines = productionLines.filter(line => line.status === 'down').length;\n        const handPlacementLines = productionLines.filter(line => line.line_name.toLowerCase().includes('hand')).length;\n        const disabledLines = productionLines.filter(line => line.auto_schedule_enabled === false).length;\n        setError(`No production lines available for scheduling. Total: ${totalLines}, Maintenance: ${maintenanceLines}, Down: ${downLines}, Hand Placement: ${handPlacementLines}, Auto-schedule Disabled: ${disabledLines}`);\n        return;\n      }\n\n      // Enhanced priority scoring system\n      const calculateWorkOrderPriority = wo => {\n        let priority = 0;\n\n        // Ship date priority (earlier = higher priority)\n        if (wo.ship_date) {\n          const daysUntilShip = Math.ceil((new Date(wo.ship_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          priority += Math.max(0, 30 - daysUntilShip) * 10; // Higher priority for urgent shipments\n        }\n\n        // Kit date priority\n        if (wo.kit_date) {\n          const daysUntilKit = Math.ceil((new Date(wo.kit_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          priority += Math.max(0, 7 - daysUntilKit) * 5; // Higher priority for urgent kits\n        }\n\n        // Quantity priority (larger orders get higher priority)\n        priority += Math.min(wo.quantity / 100, 5); // Cap at 5 points\n\n        // Status priority\n        const statusPriority = {\n          'Ready': 10,\n          'In Progress': 8,\n          'Pending': 5,\n          'On Hold': 2\n        };\n        priority += statusPriority[wo.status] || 0;\n        return priority;\n      };\n\n      // Sort work orders by enhanced priority\n      const prioritizedWorkOrders = [...availableWorkOrders].sort((a, b) => {\n        const priorityA = calculateWorkOrderPriority(a);\n        const priorityB = calculateWorkOrderPriority(b);\n        return priorityB - priorityA; // Higher priority first\n      });\n\n      // Line scoring system\n      const calculateLineScore = (line, workOrder) => {\n        let score = 0;\n\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n        // Capacity utilization (prefer lines with more available capacity)\n        const utilizationRatio = line.available_capacity / (line.hours_per_shift * line.shifts_per_day * line.days_per_week);\n        score += (1 - utilizationRatio) * 20; // Higher score for less utilized lines\n\n        // Efficiency score (prefer more efficient lines)\n        score += (line.efficiency_target || 85) / 10;\n\n        // Time multiplier preference (prefer lines with lower multipliers for faster processing)\n        score += 1 / (line.time_multiplier || 1.0) * 10;\n\n        // Line type preference (prefer SMT over other types)\n        if (line.line_type === 'SMT') {\n          score += 15;\n        }\n\n        // Current utilization (prefer less busy lines)\n        score += (1 - (line.current_utilization || 0) / 100) * 10;\n        return score;\n      };\n\n      // Track scheduled work orders for conflict detection\n      const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time);\n\n      // Schedule work orders\n      for (const workOrder of prioritizedWorkOrders) {\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + productionDays * 8;\n\n        // Find best line for this work order\n        let bestLine = null;\n        let bestScore = -1;\n        let bestStartTime = null;\n        for (const line of availableLines) {\n          // Check if line has enough capacity\n          if (line.available_capacity < totalDurationHours) continue;\n\n          // Calculate line score\n          const lineScore = calculateLineScore(line, workOrder);\n\n          // Find earliest available time slot on this line\n          const availableSlot = findEarliestAvailableSlot(line, workOrder, scheduledWorkOrders, selectedDate);\n          if (availableSlot && lineScore > bestScore) {\n            bestLine = line;\n            bestScore = lineScore;\n            bestStartTime = availableSlot;\n          }\n        }\n        if (bestLine && bestStartTime) {\n          // Calculate end time with line-specific adjustments\n          const adjustedDuration = totalDurationHours * (bestLine.time_multiplier || 1.0);\n          const endTime = new Date(bestStartTime);\n          endTime.setHours(endTime.getHours() + adjustedDuration);\n\n          // Update work order with schedule\n          await updateWorkOrderSchedule(workOrder.id, {\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString(),\n            line_position: 1\n          });\n\n          // Add to scheduled work orders for conflict detection\n          scheduledWorkOrders.push({\n            ...workOrder,\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString()\n          });\n        }\n      }\n\n      // Refresh data\n      await fetchWorkOrders();\n      setSuccessMessage('Auto-schedule completed successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n      setError(null);\n    } catch (err) {\n      console.error('Auto-schedule error:', err);\n      setError('Auto-scheduling failed: ' + (err instanceof Error ? err.message : 'Unknown error'));\n    } finally {\n      setAutoScheduleRunning(false);\n    }\n  }, [workOrders, productionLines, selectedDate, user, updateWorkOrderSchedule, fetchWorkOrders]);\n\n  // Helper function to find earliest available time slot\n  const findEarliestAvailableSlot = (line, workOrder, scheduledWorkOrders, targetDate) => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate work order duration\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + productionDays * 8;\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n\n    // Get existing schedules for this line on the target date\n    const lineSchedules = scheduledWorkOrders.filter(wo => wo.line_id === line.id && wo.scheduled_start_time && wo.scheduled_end_time && new Date(wo.scheduled_start_time).toDateString() === new Date(targetDate).toDateString()).sort((a, b) => new Date(a.scheduled_start_time).getTime() - new Date(b.scheduled_start_time).getTime());\n\n    // Start with line opening time\n    let currentTime = new Date(targetDate);\n    currentTime.setHours(startHour, startMinute, 0, 0);\n\n    // Check each potential time slot\n    while (currentTime.getHours() < endHour) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setHours(slotEndTime.getHours() + adjustedDuration);\n\n      // Check if slot extends beyond line closing time\n      if (slotEndTime.getHours() > endHour) {\n        // Move to next day\n        currentTime.setDate(currentTime.getDate() + 1);\n        currentTime.setHours(startHour, startMinute, 0, 0);\n        continue;\n      }\n\n      // Check for conflicts with existing schedules\n      const hasConflict = lineSchedules.some(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time);\n        const scheduleEnd = new Date(schedule.scheduled_end_time);\n        return currentTime >= scheduleStart && currentTime < scheduleEnd || slotEndTime > scheduleStart && slotEndTime <= scheduleEnd || currentTime <= scheduleStart && slotEndTime >= scheduleEnd;\n      });\n      if (!hasConflict) {\n        return currentTime;\n      }\n\n      // Move to next potential slot (after the conflicting schedule)\n      const nextConflict = lineSchedules.find(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time);\n        return scheduleStart >= currentTime;\n      });\n      if (nextConflict) {\n        currentTime = new Date(nextConflict.scheduled_end_time);\n      } else {\n        // No more conflicts, but check if we still have time today\n        if (currentTime.getHours() + adjustedDuration <= endHour) {\n          return currentTime;\n        } else {\n          // Move to next day\n          currentTime.setDate(currentTime.getDate() + 1);\n          currentTime.setHours(startHour, startMinute, 0, 0);\n        }\n      }\n    }\n    return null;\n  };\n\n  // Line configuration functions\n  const openLineConfig = line => {\n    setSelectedLineForConfig(line);\n    setEditingLineConfig({\n      hours_per_shift: line.hours_per_shift || 8,\n      shifts_per_day: line.shifts_per_day || 1,\n      days_per_week: line.days_per_week || 5,\n      time_multiplier: line.time_multiplier || 1.0,\n      start_time: line.start_time || '08:00',\n      end_time: line.end_time || '17:00',\n      lunch_break_duration: line.lunch_break_duration || 60,\n      lunch_break_start: line.lunch_break_start || '12:00',\n      break_duration: line.break_duration || 15,\n      auto_schedule_enabled: true,\n      maintenance_interval_days: 30,\n      efficiency_target: 85\n    });\n    setShowLineConfigModal(true);\n  };\n  const updateLineConfig = async (lineId, config) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      console.log('Updating line config for:', lineId, 'with config:', config);\n      const response = await fetch(`${baseUrl}/api/production-lines/${lineId}/config`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(config)\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Response error:', errorData);\n        throw new Error(`Failed to update line configuration: ${response.status} ${errorData}`);\n      }\n      const result = await response.json();\n      console.log('Update successful:', result);\n\n      // Refresh production lines data\n      await fetchProductionLines();\n      setShowLineConfigModal(false);\n      setSelectedLineForConfig(null);\n      setEditingLineConfig(null);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(`Line configuration updated successfully for ${selectedLineForConfig === null || selectedLineForConfig === void 0 ? void 0 : selectedLineForConfig.line_name}`);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      console.error('Error updating line config:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update line configuration');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = workOrder => {\n    setDraggedWorkOrder(workOrder);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = async (e, targetLineId, targetTime) => {\n    e.preventDefault();\n    if (!draggedWorkOrder) return;\n    try {\n      const targetDateTime = new Date(`${selectedDate}T${targetTime}`);\n      const endDateTime = new Date(targetDateTime);\n\n      // Calculate total duration from available time fields\n      const setupHours = draggedWorkOrder.setup_hours_estimated || 0;\n      const productionHours = draggedWorkOrder.production_time_hours_estimated || 0;\n      const productionDays = draggedWorkOrder.production_time_days_estimated || 0;\n      const totalDurationHours = setupHours + productionHours + productionDays * 8;\n      endDateTime.setHours(endDateTime.getHours() + totalDurationHours);\n      await updateWorkOrderSchedule(draggedWorkOrder.id, {\n        line_id: targetLineId,\n        scheduled_start_time: targetDateTime.toISOString(),\n        scheduled_end_time: endDateTime.toISOString()\n      });\n\n      // Refresh data\n      await fetchWorkOrders();\n      setDraggedWorkOrder(null);\n    } catch (err) {\n      console.error('Drop error:', err);\n      setError('Failed to schedule work order');\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchWorkOrders(), fetchProductionLines()]);\n      setLoading(false);\n    };\n    loadData();\n  }, [fetchWorkOrders, fetchProductionLines]);\n\n  // Real-time updates - using the context's event system\n  useEffect(() => {\n    const unsubscribe = onWorkOrderUpdate(() => {\n      fetchWorkOrders();\n    });\n    return unsubscribe;\n  }, [onWorkOrderUpdate, fetchWorkOrders]);\n\n  // Filter work orders by selected line\n  const filteredWorkOrders = selectedLine === 'all' ? workOrders : workOrders.filter(wo => wo.line_name === selectedLine);\n\n  // Generate timeline slots\n  const generateTimelineSlots = () => {\n    const slots = [];\n    filteredWorkOrders.forEach((workOrder, index) => {\n      if (workOrder.scheduled_start_time) {\n        const startTime = new Date(workOrder.scheduled_start_time);\n        const endTime = workOrder.scheduled_end_time ? new Date(workOrder.scheduled_end_time) : startTime;\n        const duration = (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60); // hours\n\n        slots.push({\n          workOrder,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          duration,\n          position: index\n        });\n      }\n    });\n    return slots;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-sy-black-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n          className: \"h-8 w-8 text-sy-green-600 mx-auto mb-4 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sy-black-600\",\n          children: \"Loading schedule...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-sy-black-900\",\n          children: \"Production Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-sy-black-600\",\n          children: \"Manage and optimize production scheduling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfigModal(true),\n          className: \"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-sy-black-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500\",\n          children: [/*#__PURE__*/_jsxDEV(CogIcon, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), \"Config\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), user && ['admin', 'scheduler'].includes(user.role) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: runAutoSchedule,\n            disabled: autoScheduleRunning,\n            className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sy-green-600 hover:bg-sy-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500 disabled:opacity-50\",\n            children: [autoScheduleRunning ? /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n              className: \"h-4 w-4 mr-2 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(CalendarIcon, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 19\n            }, this), autoScheduleRunning ? 'Scheduling...' : 'Auto Schedule']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-sy-black-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 mr-1\",\n              children: \"Manual Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 17\n            }, this), \"Hand Placement excluded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n          className: \"h-5 w-5 text-red-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-red-800\",\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-700\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-50 border border-green-200 rounded-md p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: \"h-5 w-5 text-green-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-green-800\",\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-green-700\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: selectedDate,\n            onChange: e => setSelectedDate(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Production Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLine,\n            onChange: e => setSelectedLine(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Lines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this), productionLines.map(line => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: line.line_name,\n              children: [line.line_name, line.line_name.toLowerCase().includes('hand') ? ' (Manual Only)' : '']\n            }, line.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"View Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: viewMode,\n            onChange: e => setViewMode(e.target.value),\n            className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"timeline\",\n              children: \"Timeline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"calendar\",\n              children: \"Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"list\",\n              children: \"List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-sy-black-600\",\n            children: [filteredWorkOrders.length, \" work orders\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 15\n            }, this), filteredWorkOrders.filter(wo => wo.scheduled_start_time).length, \" scheduled\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }, this), viewMode === 'timeline' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Timeline View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid bg-gray-50 border-b border-gray-200\",\n            style: {\n              gridTemplateColumns: '200px repeat(12, 1fr)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-700\",\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 17\n            }, this), Array.from({\n              length: 12\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-700 text-center border-l border-gray-200\",\n              children: [8 + i, \":00\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this), productionLines.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid border-b border-gray-200\",\n            style: {\n              gridTemplateColumns: '200px repeat(12, 1fr)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 text-sm font-medium text-sy-black-900 bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: line.line_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 25\n                  }, this), line.line_name.toLowerCase().includes('hand') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\",\n                    children: \"Manual Only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 799,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 23\n                }, this), user && ['admin', 'scheduler'].includes(user.role) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openLineConfig(line),\n                  className: \"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-sy-black-700 bg-white hover:bg-gray-50\",\n                  title: \"Configure line settings\",\n                  children: /*#__PURE__*/_jsxDEV(CogIcon, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 19\n            }, this), Array.from({\n              length: 12\n            }, (_, i) => {\n              const timeSlot = `${8 + i}:00`;\n              const scheduledWorkOrder = generateTimelineSlots().find(slot => slot.workOrder.line_name === line.line_name && slot.startTime === timeSlot);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 border-l border-gray-200 min-h-[60px] relative\",\n                onDragOver: handleDragOver,\n                onDrop: e => handleDrop(e, line.id, timeSlot),\n                children: scheduledWorkOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-sy-green-100 border border-sy-green-300 rounded p-2 text-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-sy-green-800\",\n                    children: scheduledWorkOrder.workOrder.work_order_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 832,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sy-green-600\",\n                    children: [scheduledWorkOrder.duration, \"h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 835,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-400 text-xs\",\n                  children: \"Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 23\n              }, this);\n            })]\n          }, line.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 9\n    }, this), viewMode === 'list' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-sy-black-900\",\n          children: \"Work Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Work Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Assembly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Clear to Build\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Ship Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Scheduled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredWorkOrders.map(workOrder => /*#__PURE__*/_jsxDEV(\"tr\", {\n              draggable: workOrder.clear_to_build,\n              onDragStart: () => workOrder.clear_to_build && handleDragStart(workOrder),\n              className: `hover:bg-gray-50 ${workOrder.clear_to_build ? 'cursor-move' : 'cursor-not-allowed opacity-60'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-sy-black-900\",\n                children: workOrder.work_order_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.customer_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.assembly_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${workOrder.status === 'Completed' ? 'bg-green-100 text-green-800' : workOrder.status === 'Cancelled' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`,\n                  children: workOrder.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 910,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${workOrder.clear_to_build ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                  children: workOrder.clear_to_build ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.ship_date ? new Date(workOrder.ship_date).toLocaleDateString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: [workOrder.production_time_hours_estimated || 0, \"h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\",\n                children: workOrder.scheduled_start_time ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    className: \"h-4 w-4 text-green-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 934,\n                    columnNumber: 27\n                  }, this), new Date(workOrder.scheduled_start_time).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 933,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(XCircleIcon, {\n                    className: \"h-4 w-4 text-red-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 939,\n                    columnNumber: 27\n                  }, this), \"Not scheduled\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"text-sy-green-600 hover:text-sy-green-900\",\n                  onClick: () => {\n                    // TODO: Add toggle clear to build functionality\n                    console.log('Toggle clear to build for:', workOrder.work_order_number);\n                  },\n                  children: workOrder.clear_to_build ? 'Mark Not Ready' : 'Mark Ready'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 21\n              }, this)]\n            }, workOrder.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 9\n    }, this), showConfigModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-sy-black-900 mb-4\",\n            children: \"Schedule Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Hours per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: scheduleConfig.hours_per_day,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  hours_per_day: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Days per Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: scheduleConfig.days_per_week,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  days_per_week: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Efficiency Factor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                value: scheduleConfig.efficiency_factor,\n                onChange: e => setScheduleConfig(prev => ({\n                  ...prev,\n                  efficiency_factor: parseFloat(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowConfigModal(false),\n              className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // Save configuration logic here\n                setShowConfigModal(false);\n              },\n              className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 9\n    }, this), showLineConfigModal && selectedLineForConfig && editingLineConfig && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      onClick: () => {\n        setShowLineConfigModal(false);\n        setSelectedLineForConfig(null);\n        setEditingLineConfig(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-sy-black-900\",\n              children: [\"Configure \", selectedLineForConfig.line_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowLineConfigModal(false);\n                setSelectedLineForConfig(null);\n                setEditingLineConfig(null);\n              },\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"h-6 w-6\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M6 18L18 6M6 6l12 12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Hours per Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.hours_per_shift,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  hours_per_shift: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Shifts per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.shifts_per_day,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  shifts_per_day: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Days per Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1090,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.days_per_week,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  days_per_week: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Time Multiplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                value: editingLineConfig.time_multiplier,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  time_multiplier: parseFloat(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.start_time,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  start_time: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.end_time,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  end_time: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Lunch Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.lunch_break_duration,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  lunch_break_duration: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Lunch Break Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: editingLineConfig.lunch_break_start,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  lunch_break_start: e.target.value\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1154,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-sy-black-700 mb-2\",\n                children: \"Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editingLineConfig.break_duration,\n                onChange: e => setEditingLineConfig(prev => ({\n                  ...prev,\n                  break_duration: parseInt(e.target.value)\n                })),\n                className: \"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowLineConfigModal(false);\n                setSelectedLineForConfig(null);\n                setEditingLineConfig(null);\n              },\n              className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateLineConfig(selectedLineForConfig.id, editingLineConfig),\n              className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\",\n              children: \"Save Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 636,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"qwRJ+2Yb+7ZwhMmlxIRweB9uPC8=\", false, function () {\n  return [useAuth, useSocket];\n});\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CalendarIcon","CogIcon","ArrowPathIcon","ExclamationTriangleIcon","CheckCircleIcon","XCircleIcon","useAuth","useSocket","jsxDEV","_jsxDEV","Schedule","_s","user","onWorkOrderUpdate","workOrders","setWorkOrders","productionLines","setProductionLines","scheduleConfig","setScheduleConfig","hours_per_day","days_per_week","efficiency_factor","selectedLine","setSelectedLine","selectedDate","setSelectedDate","Date","toISOString","split","viewMode","setViewMode","loading","setLoading","error","setError","successMessage","setSuccessMessage","draggedWorkOrder","setDraggedWorkOrder","showConfigModal","setShowConfigModal","showLineConfigModal","setShowLineConfigModal","selectedLineForConfig","setSelectedLineForConfig","editingLineConfig","setEditingLineConfig","autoScheduleRunning","setAutoScheduleRunning","baseUrl","process","env","NODE_ENV","window","location","origin","fetchWorkOrders","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","timeline","err","console","fetchProductionLines","production_lines","updateWorkOrderSchedule","workOrderId","scheduleData","method","body","JSON","stringify","runAutoSchedule","includes","role","availableWorkOrders","filter","wo","status","scheduled_start_time","clear_to_build","undefined","log","length","Set","map","availableLines","line","line_name","toLowerCase","auto_schedule_enabled","totalWorkOrders","completedWorkOrders","cancelledWorkOrders","scheduledWorkOrders","clearToBuildFalse","totalLines","maintenanceLines","downLines","handPlacementLines","disabledLines","calculateWorkOrderPriority","priority","ship_date","daysUntilShip","Math","ceil","getTime","max","kit_date","daysUntilKit","min","quantity","statusPriority","prioritizedWorkOrders","sort","a","b","priorityA","priorityB","calculateLineScore","workOrder","score","setupHours","setup_hours_estimated","productionHours","production_time_hours_estimated","productionDays","production_time_days_estimated","totalDurationHours","utilizationRatio","available_capacity","hours_per_shift","shifts_per_day","efficiency_target","time_multiplier","line_type","current_utilization","bestLine","bestScore","bestStartTime","lineScore","availableSlot","findEarliestAvailableSlot","adjustedDuration","endTime","setHours","getHours","id","line_id","scheduled_end_time","line_position","push","setTimeout","message","targetDate","startTimeStr","start_time","endTimeStr","end_time","startHour","startMinute","Number","endHour","endMinute","lineSchedules","toDateString","currentTime","slotEndTime","setDate","getDate","hasConflict","some","schedule","scheduleStart","scheduleEnd","nextConflict","find","openLineConfig","lunch_break_duration","lunch_break_start","break_duration","maintenance_interval_days","updateLineConfig","lineId","config","errorData","text","result","handleDragStart","handleDragOver","e","preventDefault","handleDrop","targetLineId","targetTime","targetDateTime","endDateTime","loadData","Promise","all","unsubscribe","filteredWorkOrders","generateTimelineSlots","slots","forEach","index","startTime","duration","toTimeString","slice","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","value","onChange","target","style","gridTemplateColumns","Array","from","_","i","title","timeSlot","scheduledWorkOrder","slot","onDragOver","onDrop","work_order_number","draggable","onDragStart","customer_name","assembly_number","toLocaleDateString","prev","parseInt","step","parseFloat","stopPropagation","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/pages/Schedule.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  CalendarIcon, \n  CogIcon, \n  ArrowPathIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  XCircleIcon\n} from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext.tsx';\nimport { useSocket } from '../contexts/SocketContext.tsx';\n\ninterface WorkOrder {\n  id: string;\n  work_order_number: string;\n  quantity: number;\n  status: string;\n  clear_to_build: boolean; // New field\n  kit_date: string | null;\n  ship_date: string | null;\n  setup_hours_estimated: number | null;\n  production_time_hours_estimated: number | null;\n  production_time_days_estimated: number | null;\n  setup_hours_actual: number | null;\n  production_time_hours_actual: number | null;\n  production_time_days_actual: number | null;\n  completion_date: string | null;\n  trolley_number: number | null;\n  line_id: string | null;\n  line_position: number | null;\n  scheduled_start_time: string | null;\n  scheduled_end_time: string | null;\n  is_hand_placed: boolean;\n  created_at: string;\n  updated_at: string;\n  assembly_number: string;\n  revision: string;\n  description: string | null;\n  customer_name: string;\n  customer_id: string;\n  line_name: string | null;\n  line_type: string | null;\n}\n\ninterface ProductionLine {\n  id: string;\n  line_name: string;\n  line_type: string;\n  status: string;\n  current_utilization: number;\n  available_capacity: number;\n  time_multiplier: number;\n  hours_per_shift: number;\n  shifts_per_day: number;\n  days_per_week: number;\n  start_time: string;\n  end_time: string;\n  lunch_break_duration: number;\n  lunch_break_start: string;\n  break_duration: number;\n  auto_schedule_enabled?: boolean;\n  maintenance_interval_days?: number;\n  efficiency_target?: number;\n  next_available_slot?: string;\n}\n\ninterface ScheduleConfig {\n  hours_per_day: number;\n  days_per_week: number;\n  efficiency_factor: number;\n}\n\ninterface LineConfig {\n  hours_per_shift: number;\n  shifts_per_day: number;\n  days_per_week: number;\n  time_multiplier: number;\n  start_time: string;\n  end_time: string;\n  lunch_break_duration: number;\n  lunch_break_start: string;\n  break_duration: number;\n  auto_schedule_enabled: boolean;\n  maintenance_interval_days: number;\n  efficiency_target: number;\n}\n\ninterface TimelineSlot {\n  workOrder: WorkOrder;\n  startTime: string;\n  endTime: string;\n  duration: number;\n  position: number;\n}\n\nconst Schedule: React.FC = () => {\n  const { user } = useAuth();\n  const { onWorkOrderUpdate } = useSocket();\n  \n  // State management\n  const [workOrders, setWorkOrders] = useState<WorkOrder[]>([]);\n  const [productionLines, setProductionLines] = useState<ProductionLine[]>([]);\n  const [scheduleConfig, setScheduleConfig] = useState<ScheduleConfig>({\n    hours_per_day: 8,\n    days_per_week: 5,\n    efficiency_factor: 1.0\n  });\n  \n  // UI State\n  const [selectedLine, setSelectedLine] = useState<string>('all');\n  const [selectedDate, setSelectedDate] = useState<string>(new Date().toISOString().split('T')[0]);\n  const [viewMode, setViewMode] = useState<'timeline' | 'calendar' | 'list'>('timeline');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [draggedWorkOrder, setDraggedWorkOrder] = useState<WorkOrder | null>(null);\n  const [showConfigModal, setShowConfigModal] = useState(false);\n  const [showLineConfigModal, setShowLineConfigModal] = useState(false);\n  const [selectedLineForConfig, setSelectedLineForConfig] = useState<ProductionLine | null>(null);\n  const [editingLineConfig, setEditingLineConfig] = useState<LineConfig | null>(null);\n  const [autoScheduleRunning, setAutoScheduleRunning] = useState(false);\n\n  // API base URL - use production for local development since local database isn't set up\n  const baseUrl = process.env.NODE_ENV === 'production' \n    ? window.location.origin\n    : 'https://smtdatabase01-production.up.railway.app';\n\n  // Fetch work orders\n  const fetchWorkOrders = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/schedule/timeline`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) throw new Error('Failed to fetch work orders');\n      \n      const data = await response.json();\n      setWorkOrders(data.timeline || []);\n    } catch (err) {\n      console.error('Error fetching work orders:', err);\n      setError('Failed to load work orders');\n    }\n  }, [baseUrl]);\n\n  // Fetch production lines\n  const fetchProductionLines = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`${baseUrl}/api/production-lines`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) throw new Error('Failed to fetch production lines');\n      \n      const data = await response.json();\n      setProductionLines(data.production_lines || []);\n    } catch (err) {\n      console.error('Error fetching production lines:', err);\n      setError('Failed to load production lines');\n    }\n  }, [baseUrl]);\n\n  // Update work order schedule\n  const updateWorkOrderSchedule = useCallback(async (workOrderId: string, scheduleData: any) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/schedule/work-orders/${workOrderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(scheduleData)\n      });\n\n      if (!response.ok) throw new Error('Failed to update schedule');\n      \n      return await response.json();\n    } catch (err) {\n      console.error('Error updating schedule:', err);\n      throw err;\n    }\n  }, [baseUrl]);\n\n  // Enhanced auto-schedule algorithm\n  const runAutoSchedule = useCallback(async () => {\n    if (!user || !['admin', 'scheduler'].includes(user.role)) {\n      setError('Insufficient permissions for auto-scheduling');\n      return;\n    }\n\n    setAutoScheduleRunning(true);\n    try {\n      // Get available work orders (not completed, cancelled, or already scheduled)\n      const availableWorkOrders = workOrders.filter(wo => \n        wo.status !== 'Completed' && \n        wo.status !== 'Cancelled' && \n        !wo.scheduled_start_time &&\n        (wo.clear_to_build === undefined || wo.clear_to_build === true) // Only schedule if clear to build is true or undefined\n      );\n\n      // Debug logging\n      console.log('Total work orders:', workOrders.length);\n      console.log('Available work orders:', availableWorkOrders.length);\n      console.log('Work order statuses:', [...new Set(workOrders.map(wo => wo.status))]);\n      console.log('Scheduled work orders:', workOrders.filter(wo => wo.scheduled_start_time).length);\n      console.log('Clear to build statuses:', [...new Set(workOrders.map(wo => wo.clear_to_build))]);\n\n      // Get available production lines (exclude Hand Placement and disabled lines)\n      const availableLines = productionLines.filter(line => \n        line.status !== 'maintenance' &&\n        line.status !== 'down' &&\n        !line.line_name.toLowerCase().includes('hand') &&\n        line.auto_schedule_enabled !== false\n      );\n\n      // Debug logging for production lines\n      console.log('Total production lines:', productionLines.length);\n      console.log('Available production lines:', availableLines.length);\n      console.log('Line statuses:', [...new Set(productionLines.map(line => line.status))]);\n      console.log('Line names:', productionLines.map(line => line.line_name));\n\n      if (availableWorkOrders.length === 0) {\n        const totalWorkOrders = workOrders.length;\n        const completedWorkOrders = workOrders.filter(wo => wo.status === 'Completed').length;\n        const cancelledWorkOrders = workOrders.filter(wo => wo.status === 'Cancelled').length;\n        const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time).length;\n        const clearToBuildFalse = workOrders.filter(wo => wo.clear_to_build === false).length;\n        \n        setError(`No work orders available for scheduling. Total: ${totalWorkOrders}, Completed: ${completedWorkOrders}, Cancelled: ${cancelledWorkOrders}, Already Scheduled: ${scheduledWorkOrders}, Clear to Build False: ${clearToBuildFalse}`);\n        return;\n      }\n\n      if (availableLines.length === 0) {\n        const totalLines = productionLines.length;\n        const maintenanceLines = productionLines.filter(line => line.status === 'maintenance').length;\n        const downLines = productionLines.filter(line => line.status === 'down').length;\n        const handPlacementLines = productionLines.filter(line => line.line_name.toLowerCase().includes('hand')).length;\n        const disabledLines = productionLines.filter(line => line.auto_schedule_enabled === false).length;\n        \n        setError(`No production lines available for scheduling. Total: ${totalLines}, Maintenance: ${maintenanceLines}, Down: ${downLines}, Hand Placement: ${handPlacementLines}, Auto-schedule Disabled: ${disabledLines}`);\n        return;\n      }\n\n      // Enhanced priority scoring system\n      const calculateWorkOrderPriority = (wo: WorkOrder) => {\n        let priority = 0;\n        \n        // Ship date priority (earlier = higher priority)\n        if (wo.ship_date) {\n          const daysUntilShip = Math.ceil((new Date(wo.ship_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          priority += Math.max(0, 30 - daysUntilShip) * 10; // Higher priority for urgent shipments\n        }\n        \n        // Kit date priority\n        if (wo.kit_date) {\n          const daysUntilKit = Math.ceil((new Date(wo.kit_date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n          priority += Math.max(0, 7 - daysUntilKit) * 5; // Higher priority for urgent kits\n        }\n        \n        // Quantity priority (larger orders get higher priority)\n        priority += Math.min(wo.quantity / 100, 5); // Cap at 5 points\n        \n        // Status priority\n        const statusPriority = {\n          'Ready': 10,\n          'In Progress': 8,\n          'Pending': 5,\n          'On Hold': 2\n        };\n        priority += statusPriority[wo.status as keyof typeof statusPriority] || 0;\n        \n        return priority;\n      };\n\n      // Sort work orders by enhanced priority\n      const prioritizedWorkOrders = [...availableWorkOrders].sort((a, b) => {\n        const priorityA = calculateWorkOrderPriority(a);\n        const priorityB = calculateWorkOrderPriority(b);\n        return priorityB - priorityA; // Higher priority first\n      });\n\n      // Line scoring system\n      const calculateLineScore = (line: ProductionLine, workOrder: WorkOrder) => {\n        let score = 0;\n        \n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n        \n        // Capacity utilization (prefer lines with more available capacity)\n        const utilizationRatio = line.available_capacity / (line.hours_per_shift * line.shifts_per_day * line.days_per_week);\n        score += (1 - utilizationRatio) * 20; // Higher score for less utilized lines\n        \n        // Efficiency score (prefer more efficient lines)\n        score += (line.efficiency_target || 85) / 10;\n        \n        // Time multiplier preference (prefer lines with lower multipliers for faster processing)\n        score += (1 / (line.time_multiplier || 1.0)) * 10;\n        \n        // Line type preference (prefer SMT over other types)\n        if (line.line_type === 'SMT') {\n          score += 15;\n        }\n        \n        // Current utilization (prefer less busy lines)\n        score += (1 - (line.current_utilization || 0) / 100) * 10;\n        \n        return score;\n      };\n\n      // Track scheduled work orders for conflict detection\n      const scheduledWorkOrders = workOrders.filter(wo => wo.scheduled_start_time);\n      \n      // Schedule work orders\n      for (const workOrder of prioritizedWorkOrders) {\n        // Calculate work order duration\n        const setupHours = workOrder.setup_hours_estimated || 0;\n        const productionHours = workOrder.production_time_hours_estimated || 0;\n        const productionDays = workOrder.production_time_days_estimated || 0;\n        const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n\n        // Find best line for this work order\n        let bestLine: ProductionLine | null = null;\n        let bestScore = -1;\n        let bestStartTime: Date | null = null;\n\n        for (const line of availableLines) {\n          // Check if line has enough capacity\n          if (line.available_capacity < totalDurationHours) continue;\n\n          // Calculate line score\n          const lineScore = calculateLineScore(line, workOrder);\n          \n          // Find earliest available time slot on this line\n          const availableSlot = findEarliestAvailableSlot(line, workOrder, scheduledWorkOrders, selectedDate);\n          \n          if (availableSlot && lineScore > bestScore) {\n            bestLine = line;\n            bestScore = lineScore;\n            bestStartTime = availableSlot;\n          }\n        }\n\n        if (bestLine && bestStartTime) {\n          // Calculate end time with line-specific adjustments\n          const adjustedDuration = totalDurationHours * (bestLine.time_multiplier || 1.0);\n          const endTime = new Date(bestStartTime);\n          endTime.setHours(endTime.getHours() + adjustedDuration);\n\n          // Update work order with schedule\n          await updateWorkOrderSchedule(workOrder.id, {\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString(),\n            line_position: 1\n          });\n\n          // Add to scheduled work orders for conflict detection\n          scheduledWorkOrders.push({\n            ...workOrder,\n            line_id: bestLine.id,\n            scheduled_start_time: bestStartTime.toISOString(),\n            scheduled_end_time: endTime.toISOString()\n          });\n        }\n      }\n\n      // Refresh data\n      await fetchWorkOrders();\n      setSuccessMessage('Auto-schedule completed successfully');\n      setTimeout(() => setSuccessMessage(null), 3000);\n      setError(null);\n    } catch (err) {\n      console.error('Auto-schedule error:', err);\n      setError('Auto-scheduling failed: ' + (err instanceof Error ? err.message : 'Unknown error'));\n    } finally {\n      setAutoScheduleRunning(false);\n    }\n  }, [workOrders, productionLines, selectedDate, user, updateWorkOrderSchedule, fetchWorkOrders]);\n\n  // Helper function to find earliest available time slot\n  const findEarliestAvailableSlot = (\n    line: ProductionLine, \n    workOrder: WorkOrder, \n    scheduledWorkOrders: WorkOrder[], \n    targetDate: string\n  ): Date | null => {\n    // Parse line work hours\n    const startTimeStr = line.start_time || '08:00';\n    const endTimeStr = line.end_time || '17:00';\n    const [startHour, startMinute] = startTimeStr.split(':').map(Number);\n    const [endHour, endMinute] = endTimeStr.split(':').map(Number);\n\n    // Calculate work order duration\n    const setupHours = workOrder.setup_hours_estimated || 0;\n    const productionHours = workOrder.production_time_hours_estimated || 0;\n    const productionDays = workOrder.production_time_days_estimated || 0;\n    const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n    const adjustedDuration = totalDurationHours * (line.time_multiplier || 1.0);\n\n    // Get existing schedules for this line on the target date\n    const lineSchedules = scheduledWorkOrders.filter(wo => \n      wo.line_id === line.id && \n      wo.scheduled_start_time &&\n      wo.scheduled_end_time &&\n      new Date(wo.scheduled_start_time).toDateString() === new Date(targetDate).toDateString()\n    ).sort((a, b) => \n      new Date(a.scheduled_start_time!).getTime() - new Date(b.scheduled_start_time!).getTime()\n    );\n\n    // Start with line opening time\n    let currentTime = new Date(targetDate);\n    currentTime.setHours(startHour, startMinute, 0, 0);\n\n    // Check each potential time slot\n    while (currentTime.getHours() < endHour) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setHours(slotEndTime.getHours() + adjustedDuration);\n\n      // Check if slot extends beyond line closing time\n      if (slotEndTime.getHours() > endHour) {\n        // Move to next day\n        currentTime.setDate(currentTime.getDate() + 1);\n        currentTime.setHours(startHour, startMinute, 0, 0);\n        continue;\n      }\n\n      // Check for conflicts with existing schedules\n      const hasConflict = lineSchedules.some(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time!);\n        const scheduleEnd = new Date(schedule.scheduled_end_time!);\n        \n        return (\n          (currentTime >= scheduleStart && currentTime < scheduleEnd) ||\n          (slotEndTime > scheduleStart && slotEndTime <= scheduleEnd) ||\n          (currentTime <= scheduleStart && slotEndTime >= scheduleEnd)\n        );\n      });\n\n      if (!hasConflict) {\n        return currentTime;\n      }\n\n      // Move to next potential slot (after the conflicting schedule)\n      const nextConflict = lineSchedules.find(schedule => {\n        const scheduleStart = new Date(schedule.scheduled_start_time!);\n        return scheduleStart >= currentTime;\n      });\n\n      if (nextConflict) {\n        currentTime = new Date(nextConflict.scheduled_end_time!);\n      } else {\n        // No more conflicts, but check if we still have time today\n        if (currentTime.getHours() + adjustedDuration <= endHour) {\n          return currentTime;\n        } else {\n          // Move to next day\n          currentTime.setDate(currentTime.getDate() + 1);\n          currentTime.setHours(startHour, startMinute, 0, 0);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  // Line configuration functions\n  const openLineConfig = (line: ProductionLine) => {\n    setSelectedLineForConfig(line);\n    setEditingLineConfig({\n      hours_per_shift: line.hours_per_shift || 8,\n      shifts_per_day: line.shifts_per_day || 1,\n      days_per_week: line.days_per_week || 5,\n      time_multiplier: line.time_multiplier || 1.0,\n      start_time: line.start_time || '08:00',\n      end_time: line.end_time || '17:00',\n      lunch_break_duration: line.lunch_break_duration || 60,\n      lunch_break_start: line.lunch_break_start || '12:00',\n      break_duration: line.break_duration || 15,\n      auto_schedule_enabled: true,\n      maintenance_interval_days: 30,\n      efficiency_target: 85\n    });\n    setShowLineConfigModal(true);\n  };\n\n  const updateLineConfig = async (lineId: string, config: LineConfig) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      console.log('Updating line config for:', lineId, 'with config:', config);\n      \n      const response = await fetch(`${baseUrl}/api/production-lines/${lineId}/config`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(config)\n      });\n\n      console.log('Response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Response error:', errorData);\n        throw new Error(`Failed to update line configuration: ${response.status} ${errorData}`);\n      }\n      \n      const result = await response.json();\n      console.log('Update successful:', result);\n      \n      // Refresh production lines data\n      await fetchProductionLines();\n      setShowLineConfigModal(false);\n      setSelectedLineForConfig(null);\n      setEditingLineConfig(null);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(`Line configuration updated successfully for ${selectedLineForConfig?.line_name}`);\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(null), 3000);\n    } catch (err) {\n      console.error('Error updating line config:', err);\n      setError(err instanceof Error ? err.message : 'Failed to update line configuration');\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = (workOrder: WorkOrder) => {\n    setDraggedWorkOrder(workOrder);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = async (e: React.DragEvent, targetLineId: string, targetTime: string) => {\n    e.preventDefault();\n    \n    if (!draggedWorkOrder) return;\n\n    try {\n      const targetDateTime = new Date(`${selectedDate}T${targetTime}`);\n      const endDateTime = new Date(targetDateTime);\n      \n      // Calculate total duration from available time fields\n      const setupHours = draggedWorkOrder.setup_hours_estimated || 0;\n      const productionHours = draggedWorkOrder.production_time_hours_estimated || 0;\n      const productionDays = draggedWorkOrder.production_time_days_estimated || 0;\n      const totalDurationHours = setupHours + productionHours + (productionDays * 8);\n      \n      endDateTime.setHours(endDateTime.getHours() + totalDurationHours);\n\n      await updateWorkOrderSchedule(draggedWorkOrder.id, {\n        line_id: targetLineId,\n        scheduled_start_time: targetDateTime.toISOString(),\n        scheduled_end_time: endDateTime.toISOString()\n      });\n\n      // Refresh data\n      await fetchWorkOrders();\n      setDraggedWorkOrder(null);\n    } catch (err) {\n      console.error('Drop error:', err);\n      setError('Failed to schedule work order');\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([fetchWorkOrders(), fetchProductionLines()]);\n      setLoading(false);\n    };\n\n    loadData();\n  }, [fetchWorkOrders, fetchProductionLines]);\n\n  // Real-time updates - using the context's event system\n  useEffect(() => {\n    const unsubscribe = onWorkOrderUpdate(() => {\n      fetchWorkOrders();\n    });\n\n    return unsubscribe;\n  }, [onWorkOrderUpdate, fetchWorkOrders]);\n\n  // Filter work orders by selected line\n  const filteredWorkOrders = selectedLine === 'all' \n    ? workOrders \n    : workOrders.filter(wo => wo.line_name === selectedLine);\n\n  // Generate timeline slots\n  const generateTimelineSlots = () => {\n    const slots: TimelineSlot[] = [];\n\n    filteredWorkOrders.forEach((workOrder, index) => {\n      if (workOrder.scheduled_start_time) {\n        const startTime = new Date(workOrder.scheduled_start_time);\n        const endTime = workOrder.scheduled_end_time ? new Date(workOrder.scheduled_end_time) : startTime;\n        const duration = (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60); // hours\n\n        slots.push({\n          workOrder,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          duration,\n          position: index\n        });\n      }\n    });\n\n    return slots;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-sy-black-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <ArrowPathIcon className=\"h-8 w-8 text-sy-green-600 mx-auto mb-4 animate-spin\" />\n          <p className=\"text-sy-black-600\">Loading schedule...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-sy-black-900\">Production Schedule</h1>\n          <p className=\"mt-1 text-sm text-sy-black-600\">\n            Manage and optimize production scheduling\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={() => setShowConfigModal(true)}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-sy-black-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500\"\n          >\n            <CogIcon className=\"h-4 w-4 mr-2\" />\n            Config\n          </button>\n          \n          {user && ['admin', 'scheduler'].includes(user.role) && (\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={runAutoSchedule}\n                disabled={autoScheduleRunning}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sy-green-600 hover:bg-sy-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sy-green-500 disabled:opacity-50\"\n              >\n                {autoScheduleRunning ? (\n                  <ArrowPathIcon className=\"h-4 w-4 mr-2 animate-spin\" />\n                ) : (\n                  <CalendarIcon className=\"h-4 w-4 mr-2\" />\n                )}\n                {autoScheduleRunning ? 'Scheduling...' : 'Auto Schedule'}\n              </button>\n              <div className=\"text-xs text-sy-black-500\">\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 mr-1\">\n                  Manual Only\n                </span>\n                Hand Placement excluded\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n              <p className=\"mt-1 text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Success Display */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <CheckCircleIcon className=\"h-5 w-5 text-green-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-green-800\">Success</h3>\n              <p className=\"mt-1 text-sm text-green-700\">{successMessage}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Controls */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {/* Date Selector */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Date\n            </label>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            />\n          </div>\n\n          {/* Line Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Production Line\n            </label>\n            <select\n              value={selectedLine}\n              onChange={(e) => setSelectedLine(e.target.value)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            >\n              <option value=\"all\">All Lines</option>\n              {productionLines.map(line => (\n                <option key={line.id} value={line.line_name}>\n                  {line.line_name}\n                  {line.line_name.toLowerCase().includes('hand') ? ' (Manual Only)' : ''}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* View Mode */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              View Mode\n            </label>\n            <select\n              value={viewMode}\n              onChange={(e) => setViewMode(e.target.value as any)}\n              className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n            >\n              <option value=\"timeline\">Timeline</option>\n              <option value=\"calendar\">Calendar</option>\n              <option value=\"list\">List</option>\n            </select>\n          </div>\n\n          {/* Stats */}\n          <div>\n            <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n              Summary\n            </label>\n            <div className=\"text-sm text-sy-black-600\">\n              {filteredWorkOrders.length} work orders\n              <br />\n              {filteredWorkOrders.filter(wo => wo.scheduled_start_time).length} scheduled\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Timeline View */}\n      {viewMode === 'timeline' && (\n        <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Timeline View</h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <div className=\"min-w-full\">\n              {/* Time Headers */}\n              <div className=\"grid bg-gray-50 border-b border-gray-200\" style={{ gridTemplateColumns: '200px repeat(12, 1fr)' }}>\n                <div className=\"p-3 text-sm font-medium text-sy-black-700\">Line</div>\n                {Array.from({ length: 12 }, (_, i) => (\n                  <div key={i} className=\"p-3 text-sm font-medium text-sy-black-700 text-center border-l border-gray-200\">\n                    {8 + i}:00\n                  </div>\n                ))}\n              </div>\n\n              {/* Production Lines */}\n              {productionLines.map(line => (\n                <div key={line.id} className=\"grid border-b border-gray-200\" style={{ gridTemplateColumns: '200px repeat(12, 1fr)' }}>\n                  <div className=\"p-3 text-sm font-medium text-sy-black-900 bg-gray-50\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{line.line_name}</span>\n                        {line.line_name.toLowerCase().includes('hand') && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n                            Manual Only\n                          </span>\n                        )}\n                      </div>\n                      {user && ['admin', 'scheduler'].includes(user.role) && (\n                        <button\n                          onClick={() => openLineConfig(line)}\n                          className=\"inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-sy-black-700 bg-white hover:bg-gray-50\"\n                          title=\"Configure line settings\"\n                        >\n                          <CogIcon className=\"h-3 w-3\" />\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {Array.from({ length: 12 }, (_, i) => {\n                    const timeSlot = `${8 + i}:00`;\n                    const scheduledWorkOrder = generateTimelineSlots().find(slot => \n                      slot.workOrder.line_name === line.line_name &&\n                      slot.startTime === timeSlot\n                    );\n\n                    return (\n                      <div\n                        key={i}\n                        className=\"p-2 border-l border-gray-200 min-h-[60px] relative\"\n                        onDragOver={handleDragOver}\n                        onDrop={(e) => handleDrop(e, line.id, timeSlot)}\n                      >\n                        {scheduledWorkOrder ? (\n                          <div className=\"bg-sy-green-100 border border-sy-green-300 rounded p-2 text-xs\">\n                            <div className=\"font-medium text-sy-green-800\">\n                              {scheduledWorkOrder.workOrder.work_order_number}\n                            </div>\n                            <div className=\"text-sy-green-600\">\n                              {scheduledWorkOrder.duration}h\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"text-gray-400 text-xs\">Available</div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Work Orders List */}\n      {viewMode === 'list' && (\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-sy-black-900\">Work Orders</h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Work Order\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Customer\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Assembly\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Clear to Build\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Ship Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Duration\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Scheduled\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-sy-black-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredWorkOrders.map((workOrder) => (\n                  <tr \n                    key={workOrder.id}\n                    draggable={workOrder.clear_to_build}\n                    onDragStart={() => workOrder.clear_to_build && handleDragStart(workOrder)}\n                    className={`hover:bg-gray-50 ${workOrder.clear_to_build ? 'cursor-move' : 'cursor-not-allowed opacity-60'}`}\n                  >\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-sy-black-900\">\n                      {workOrder.work_order_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.customer_name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.assembly_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        workOrder.status === 'Completed' ? 'bg-green-100 text-green-800' :\n                        workOrder.status === 'Cancelled' ? 'bg-red-100 text-red-800' :\n                        'bg-yellow-100 text-yellow-800'\n                      }`}>\n                        {workOrder.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        workOrder.clear_to_build ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                      }`}>\n                        {workOrder.clear_to_build ? 'Yes' : 'No'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.ship_date ? new Date(workOrder.ship_date).toLocaleDateString() : 'N/A'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.production_time_hours_estimated || 0}h\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sy-black-500\">\n                      {workOrder.scheduled_start_time ? (\n                        <div className=\"flex items-center\">\n                          <CheckCircleIcon className=\"h-4 w-4 text-green-500 mr-1\" />\n                          {new Date(workOrder.scheduled_start_time).toLocaleDateString()}\n                        </div>\n                      ) : (\n                        <div className=\"flex items-center\">\n                          <XCircleIcon className=\"h-4 w-4 text-red-500 mr-1\" />\n                          Not scheduled\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button \n                        className=\"text-sy-green-600 hover:text-sy-green-900\"\n                        onClick={() => {\n                          // TODO: Add toggle clear to build functionality\n                          console.log('Toggle clear to build for:', workOrder.work_order_number);\n                        }}\n                      >\n                        {workOrder.clear_to_build ? 'Mark Not Ready' : 'Mark Ready'}\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Configuration Modal */}\n      {showConfigModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <h3 className=\"text-lg font-medium text-sy-black-900 mb-4\">Schedule Configuration</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Hours per Day\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={scheduleConfig.hours_per_day}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, hours_per_day: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Days per Week\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={scheduleConfig.days_per_week}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, days_per_week: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Efficiency Factor\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={scheduleConfig.efficiency_factor}\n                    onChange={(e) => setScheduleConfig(prev => ({ ...prev, efficiency_factor: parseFloat(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => setShowConfigModal(false)}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Save configuration logic here\n                    setShowConfigModal(false);\n                  }}\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\"\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Line Configuration Modal */}\n      {showLineConfigModal && selectedLineForConfig && editingLineConfig && (\n        <div \n          className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\"\n          onClick={() => {\n            setShowLineConfigModal(false);\n            setSelectedLineForConfig(null);\n            setEditingLineConfig(null);\n          }}\n        >\n          <div \n            className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"mt-3\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-sy-black-900\">\n                  Configure {selectedLineForConfig.line_name}\n                </h3>\n                <button\n                  onClick={() => {\n                    setShowLineConfigModal(false);\n                    setSelectedLineForConfig(null);\n                    setEditingLineConfig(null);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Hours per Shift\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.hours_per_shift}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, hours_per_shift: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Shifts per Day\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.shifts_per_day}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, shifts_per_day: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Days per Week\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.days_per_week}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, days_per_week: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Time Multiplier\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={editingLineConfig.time_multiplier}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, time_multiplier: parseFloat(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Start Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.start_time}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, start_time: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    End Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.end_time}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, end_time: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Lunch Break Duration (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.lunch_break_duration}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, lunch_break_duration: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Lunch Break Start Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={editingLineConfig.lunch_break_start}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, lunch_break_start: e.target.value }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-sy-black-700 mb-2\">\n                    Break Duration (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={editingLineConfig.break_duration}\n                    onChange={(e) => setEditingLineConfig(prev => ({ ...prev!, break_duration: parseInt(e.target.value) }))}\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-sy-green-500 focus:border-sy-green-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => {\n                    setShowLineConfigModal(false);\n                    setSelectedLineForConfig(null);\n                    setEditingLineConfig(null);\n                  }}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-sy-black-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => updateLineConfig(selectedLineForConfig.id, editingLineConfig)}\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sy-green-600 hover:bg-sy-green-700\"\n                >\n                  Save Configuration\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Schedule; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SACEC,YAAY,EACZC,OAAO,EACPC,aAAa,EACbC,uBAAuB,EACvBC,eAAe,EACfC,WAAW,QACN,6BAA6B;AACpC,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,SAAS,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAqF1D,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC1B,MAAM;IAAEO;EAAkB,CAAC,GAAGN,SAAS,CAAC,CAAC;;EAEzC;EACA,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAc,EAAE,CAAC;EAC7D,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAmB,EAAE,CAAC;EAC5E,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAiB;IACnEuB,aAAa,EAAE,CAAC;IAChBC,aAAa,EAAE,CAAC;IAChBC,iBAAiB,EAAE;EACrB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAS,KAAK,CAAC;EAC/D,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAS,IAAI8B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAmC,UAAU,CAAC;EACtF,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACuC,cAAc,EAAEC,iBAAiB,CAAC,GAAGxC,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAM,CAACyC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1C,QAAQ,CAAmB,IAAI,CAAC;EAChF,MAAM,CAAC2C,eAAe,EAAEC,kBAAkB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC6C,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC+C,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGhD,QAAQ,CAAwB,IAAI,CAAC;EAC/F,MAAM,CAACiD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlD,QAAQ,CAAoB,IAAI,CAAC;EACnF,MAAM,CAACmD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;;EAErE;EACA,MAAMqD,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GACjDC,MAAM,CAACC,QAAQ,CAACC,MAAM,GACtB,iDAAiD;;EAErD;EACA,MAAMC,eAAe,GAAG1D,WAAW,CAAC,YAAY;IAC9C,IAAI;MACF,MAAM2D,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,wBAAwB,EAAE;QAC/Da,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAEhE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCpD,aAAa,CAACmD,IAAI,CAACE,QAAQ,IAAI,EAAE,CAAC;IACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACpC,KAAK,CAAC,6BAA6B,EAAEmC,GAAG,CAAC;MACjDlC,QAAQ,CAAC,4BAA4B,CAAC;IACxC;EACF,CAAC,EAAE,CAACe,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMqB,oBAAoB,GAAGxE,WAAW,CAAC,YAAY;IACnD,IAAI;MACF,MAAM2D,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,uBAAuB,EAAE;QAC9Da,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MAErE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClClD,kBAAkB,CAACiD,IAAI,CAACM,gBAAgB,IAAI,EAAE,CAAC;IACjD,CAAC,CAAC,OAAOH,GAAG,EAAE;MACZC,OAAO,CAACpC,KAAK,CAAC,kCAAkC,EAAEmC,GAAG,CAAC;MACtDlC,QAAQ,CAAC,iCAAiC,CAAC;IAC7C;EACF,CAAC,EAAE,CAACe,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMuB,uBAAuB,GAAG1E,WAAW,CAAC,OAAO2E,WAAmB,EAAEC,YAAiB,KAAK;IAC5F,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,6BAA6BwB,WAAW,EAAE,EAAE;QACjFE,MAAM,EAAE,KAAK;QACbb,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAC/D,CAAC;QACDiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,YAAY;MACnC,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAE9D,OAAO,MAAMJ,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACpC,KAAK,CAAC,0BAA0B,EAAEmC,GAAG,CAAC;MAC9C,MAAMA,GAAG;IACX;EACF,CAAC,EAAE,CAACnB,OAAO,CAAC,CAAC;;EAEb;EACA,MAAM8B,eAAe,GAAGjF,WAAW,CAAC,YAAY;IAC9C,IAAI,CAACa,IAAI,IAAI,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAACqE,QAAQ,CAACrE,IAAI,CAACsE,IAAI,CAAC,EAAE;MACxD/C,QAAQ,CAAC,8CAA8C,CAAC;MACxD;IACF;IAEAc,sBAAsB,CAAC,IAAI,CAAC;IAC5B,IAAI;MACF;MACA,MAAMkC,mBAAmB,GAAGrE,UAAU,CAACsE,MAAM,CAACC,EAAE,IAC9CA,EAAE,CAACC,MAAM,KAAK,WAAW,IACzBD,EAAE,CAACC,MAAM,KAAK,WAAW,IACzB,CAACD,EAAE,CAACE,oBAAoB,KACvBF,EAAE,CAACG,cAAc,KAAKC,SAAS,IAAIJ,EAAE,CAACG,cAAc,KAAK,IAAI,CAAC,CAAC;MAClE,CAAC;;MAED;MACAlB,OAAO,CAACoB,GAAG,CAAC,oBAAoB,EAAE5E,UAAU,CAAC6E,MAAM,CAAC;MACpDrB,OAAO,CAACoB,GAAG,CAAC,wBAAwB,EAAEP,mBAAmB,CAACQ,MAAM,CAAC;MACjErB,OAAO,CAACoB,GAAG,CAAC,sBAAsB,EAAE,CAAC,GAAG,IAAIE,GAAG,CAAC9E,UAAU,CAAC+E,GAAG,CAACR,EAAE,IAAIA,EAAE,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAClFhB,OAAO,CAACoB,GAAG,CAAC,wBAAwB,EAAE5E,UAAU,CAACsE,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACE,oBAAoB,CAAC,CAACI,MAAM,CAAC;MAC9FrB,OAAO,CAACoB,GAAG,CAAC,0BAA0B,EAAE,CAAC,GAAG,IAAIE,GAAG,CAAC9E,UAAU,CAAC+E,GAAG,CAACR,EAAE,IAAIA,EAAE,CAACG,cAAc,CAAC,CAAC,CAAC,CAAC;;MAE9F;MACA,MAAMM,cAAc,GAAG9E,eAAe,CAACoE,MAAM,CAACW,IAAI,IAChDA,IAAI,CAACT,MAAM,KAAK,aAAa,IAC7BS,IAAI,CAACT,MAAM,KAAK,MAAM,IACtB,CAACS,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAC,MAAM,CAAC,IAC9Cc,IAAI,CAACG,qBAAqB,KAAK,KACjC,CAAC;;MAED;MACA5B,OAAO,CAACoB,GAAG,CAAC,yBAAyB,EAAE1E,eAAe,CAAC2E,MAAM,CAAC;MAC9DrB,OAAO,CAACoB,GAAG,CAAC,6BAA6B,EAAEI,cAAc,CAACH,MAAM,CAAC;MACjErB,OAAO,CAACoB,GAAG,CAAC,gBAAgB,EAAE,CAAC,GAAG,IAAIE,GAAG,CAAC5E,eAAe,CAAC6E,GAAG,CAACE,IAAI,IAAIA,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAAC;MACrFhB,OAAO,CAACoB,GAAG,CAAC,aAAa,EAAE1E,eAAe,CAAC6E,GAAG,CAACE,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,CAAC;MAEvE,IAAIb,mBAAmB,CAACQ,MAAM,KAAK,CAAC,EAAE;QACpC,MAAMQ,eAAe,GAAGrF,UAAU,CAAC6E,MAAM;QACzC,MAAMS,mBAAmB,GAAGtF,UAAU,CAACsE,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,MAAM,KAAK,WAAW,CAAC,CAACK,MAAM;QACrF,MAAMU,mBAAmB,GAAGvF,UAAU,CAACsE,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,MAAM,KAAK,WAAW,CAAC,CAACK,MAAM;QACrF,MAAMW,mBAAmB,GAAGxF,UAAU,CAACsE,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACE,oBAAoB,CAAC,CAACI,MAAM;QACnF,MAAMY,iBAAiB,GAAGzF,UAAU,CAACsE,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACG,cAAc,KAAK,KAAK,CAAC,CAACG,MAAM;QAErFxD,QAAQ,CAAC,mDAAmDgE,eAAe,gBAAgBC,mBAAmB,gBAAgBC,mBAAmB,wBAAwBC,mBAAmB,2BAA2BC,iBAAiB,EAAE,CAAC;QAC3O;MACF;MAEA,IAAIT,cAAc,CAACH,MAAM,KAAK,CAAC,EAAE;QAC/B,MAAMa,UAAU,GAAGxF,eAAe,CAAC2E,MAAM;QACzC,MAAMc,gBAAgB,GAAGzF,eAAe,CAACoE,MAAM,CAACW,IAAI,IAAIA,IAAI,CAACT,MAAM,KAAK,aAAa,CAAC,CAACK,MAAM;QAC7F,MAAMe,SAAS,GAAG1F,eAAe,CAACoE,MAAM,CAACW,IAAI,IAAIA,IAAI,CAACT,MAAM,KAAK,MAAM,CAAC,CAACK,MAAM;QAC/E,MAAMgB,kBAAkB,GAAG3F,eAAe,CAACoE,MAAM,CAACW,IAAI,IAAIA,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAACU,MAAM;QAC/G,MAAMiB,aAAa,GAAG5F,eAAe,CAACoE,MAAM,CAACW,IAAI,IAAIA,IAAI,CAACG,qBAAqB,KAAK,KAAK,CAAC,CAACP,MAAM;QAEjGxD,QAAQ,CAAC,wDAAwDqE,UAAU,kBAAkBC,gBAAgB,WAAWC,SAAS,qBAAqBC,kBAAkB,6BAA6BC,aAAa,EAAE,CAAC;QACrN;MACF;;MAEA;MACA,MAAMC,0BAA0B,GAAIxB,EAAa,IAAK;QACpD,IAAIyB,QAAQ,GAAG,CAAC;;QAEhB;QACA,IAAIzB,EAAE,CAAC0B,SAAS,EAAE;UAChB,MAAMC,aAAa,GAAGC,IAAI,CAACC,IAAI,CAAC,CAAC,IAAIvF,IAAI,CAAC0D,EAAE,CAAC0B,SAAS,CAAC,CAACI,OAAO,CAAC,CAAC,GAAG,IAAIxF,IAAI,CAAC,CAAC,CAACwF,OAAO,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;UAClHL,QAAQ,IAAIG,IAAI,CAACG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAGJ,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC;QACpD;;QAEA;QACA,IAAI3B,EAAE,CAACgC,QAAQ,EAAE;UACf,MAAMC,YAAY,GAAGL,IAAI,CAACC,IAAI,CAAC,CAAC,IAAIvF,IAAI,CAAC0D,EAAE,CAACgC,QAAQ,CAAC,CAACF,OAAO,CAAC,CAAC,GAAG,IAAIxF,IAAI,CAAC,CAAC,CAACwF,OAAO,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;UAChHL,QAAQ,IAAIG,IAAI,CAACG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGE,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;QACjD;;QAEA;QACAR,QAAQ,IAAIG,IAAI,CAACM,GAAG,CAAClC,EAAE,CAACmC,QAAQ,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;QAE5C;QACA,MAAMC,cAAc,GAAG;UACrB,OAAO,EAAE,EAAE;UACX,aAAa,EAAE,CAAC;UAChB,SAAS,EAAE,CAAC;UACZ,SAAS,EAAE;QACb,CAAC;QACDX,QAAQ,IAAIW,cAAc,CAACpC,EAAE,CAACC,MAAM,CAAgC,IAAI,CAAC;QAEzE,OAAOwB,QAAQ;MACjB,CAAC;;MAED;MACA,MAAMY,qBAAqB,GAAG,CAAC,GAAGvC,mBAAmB,CAAC,CAACwC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACpE,MAAMC,SAAS,GAAGjB,0BAA0B,CAACe,CAAC,CAAC;QAC/C,MAAMG,SAAS,GAAGlB,0BAA0B,CAACgB,CAAC,CAAC;QAC/C,OAAOE,SAAS,GAAGD,SAAS,CAAC,CAAC;MAChC,CAAC,CAAC;;MAEF;MACA,MAAME,kBAAkB,GAAGA,CAACjC,IAAoB,EAAEkC,SAAoB,KAAK;QACzE,IAAIC,KAAK,GAAG,CAAC;;QAEb;QACA,MAAMC,UAAU,GAAGF,SAAS,CAACG,qBAAqB,IAAI,CAAC;QACvD,MAAMC,eAAe,GAAGJ,SAAS,CAACK,+BAA+B,IAAI,CAAC;QACtE,MAAMC,cAAc,GAAGN,SAAS,CAACO,8BAA8B,IAAI,CAAC;QACpE,MAAMC,kBAAkB,GAAGN,UAAU,GAAGE,eAAe,GAAIE,cAAc,GAAG,CAAE;;QAE9E;QACA,MAAMG,gBAAgB,GAAG3C,IAAI,CAAC4C,kBAAkB,IAAI5C,IAAI,CAAC6C,eAAe,GAAG7C,IAAI,CAAC8C,cAAc,GAAG9C,IAAI,CAAC1E,aAAa,CAAC;QACpH6G,KAAK,IAAI,CAAC,CAAC,GAAGQ,gBAAgB,IAAI,EAAE,CAAC,CAAC;;QAEtC;QACAR,KAAK,IAAI,CAACnC,IAAI,CAAC+C,iBAAiB,IAAI,EAAE,IAAI,EAAE;;QAE5C;QACAZ,KAAK,IAAK,CAAC,IAAInC,IAAI,CAACgD,eAAe,IAAI,GAAG,CAAC,GAAI,EAAE;;QAEjD;QACA,IAAIhD,IAAI,CAACiD,SAAS,KAAK,KAAK,EAAE;UAC5Bd,KAAK,IAAI,EAAE;QACb;;QAEA;QACAA,KAAK,IAAI,CAAC,CAAC,GAAG,CAACnC,IAAI,CAACkD,mBAAmB,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE;QAEzD,OAAOf,KAAK;MACd,CAAC;;MAED;MACA,MAAM5B,mBAAmB,GAAGxF,UAAU,CAACsE,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACE,oBAAoB,CAAC;;MAE5E;MACA,KAAK,MAAM0C,SAAS,IAAIP,qBAAqB,EAAE;QAC7C;QACA,MAAMS,UAAU,GAAGF,SAAS,CAACG,qBAAqB,IAAI,CAAC;QACvD,MAAMC,eAAe,GAAGJ,SAAS,CAACK,+BAA+B,IAAI,CAAC;QACtE,MAAMC,cAAc,GAAGN,SAAS,CAACO,8BAA8B,IAAI,CAAC;QACpE,MAAMC,kBAAkB,GAAGN,UAAU,GAAGE,eAAe,GAAIE,cAAc,GAAG,CAAE;;QAE9E;QACA,IAAIW,QAA+B,GAAG,IAAI;QAC1C,IAAIC,SAAS,GAAG,CAAC,CAAC;QAClB,IAAIC,aAA0B,GAAG,IAAI;QAErC,KAAK,MAAMrD,IAAI,IAAID,cAAc,EAAE;UACjC;UACA,IAAIC,IAAI,CAAC4C,kBAAkB,GAAGF,kBAAkB,EAAE;;UAElD;UACA,MAAMY,SAAS,GAAGrB,kBAAkB,CAACjC,IAAI,EAAEkC,SAAS,CAAC;;UAErD;UACA,MAAMqB,aAAa,GAAGC,yBAAyB,CAACxD,IAAI,EAAEkC,SAAS,EAAE3B,mBAAmB,EAAE7E,YAAY,CAAC;UAEnG,IAAI6H,aAAa,IAAID,SAAS,GAAGF,SAAS,EAAE;YAC1CD,QAAQ,GAAGnD,IAAI;YACfoD,SAAS,GAAGE,SAAS;YACrBD,aAAa,GAAGE,aAAa;UAC/B;QACF;QAEA,IAAIJ,QAAQ,IAAIE,aAAa,EAAE;UAC7B;UACA,MAAMI,gBAAgB,GAAGf,kBAAkB,IAAIS,QAAQ,CAACH,eAAe,IAAI,GAAG,CAAC;UAC/E,MAAMU,OAAO,GAAG,IAAI9H,IAAI,CAACyH,aAAa,CAAC;UACvCK,OAAO,CAACC,QAAQ,CAACD,OAAO,CAACE,QAAQ,CAAC,CAAC,GAAGH,gBAAgB,CAAC;;UAEvD;UACA,MAAM/E,uBAAuB,CAACwD,SAAS,CAAC2B,EAAE,EAAE;YAC1CC,OAAO,EAAEX,QAAQ,CAACU,EAAE;YACpBrE,oBAAoB,EAAE6D,aAAa,CAACxH,WAAW,CAAC,CAAC;YACjDkI,kBAAkB,EAAEL,OAAO,CAAC7H,WAAW,CAAC,CAAC;YACzCmI,aAAa,EAAE;UACjB,CAAC,CAAC;;UAEF;UACAzD,mBAAmB,CAAC0D,IAAI,CAAC;YACvB,GAAG/B,SAAS;YACZ4B,OAAO,EAAEX,QAAQ,CAACU,EAAE;YACpBrE,oBAAoB,EAAE6D,aAAa,CAACxH,WAAW,CAAC,CAAC;YACjDkI,kBAAkB,EAAEL,OAAO,CAAC7H,WAAW,CAAC;UAC1C,CAAC,CAAC;QACJ;MACF;;MAEA;MACA,MAAM6B,eAAe,CAAC,CAAC;MACvBpB,iBAAiB,CAAC,sCAAsC,CAAC;MACzD4H,UAAU,CAAC,MAAM5H,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MAC/CF,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOkC,GAAG,EAAE;MACZC,OAAO,CAACpC,KAAK,CAAC,sBAAsB,EAAEmC,GAAG,CAAC;MAC1ClC,QAAQ,CAAC,0BAA0B,IAAIkC,GAAG,YAAYJ,KAAK,GAAGI,GAAG,CAAC6F,OAAO,GAAG,eAAe,CAAC,CAAC;IAC/F,CAAC,SAAS;MACRjH,sBAAsB,CAAC,KAAK,CAAC;IAC/B;EACF,CAAC,EAAE,CAACnC,UAAU,EAAEE,eAAe,EAAES,YAAY,EAAEb,IAAI,EAAE6D,uBAAuB,EAAEhB,eAAe,CAAC,CAAC;;EAE/F;EACA,MAAM8F,yBAAyB,GAAGA,CAChCxD,IAAoB,EACpBkC,SAAoB,EACpB3B,mBAAgC,EAChC6D,UAAkB,KACF;IAChB;IACA,MAAMC,YAAY,GAAGrE,IAAI,CAACsE,UAAU,IAAI,OAAO;IAC/C,MAAMC,UAAU,GAAGvE,IAAI,CAACwE,QAAQ,IAAI,OAAO;IAC3C,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGL,YAAY,CAACvI,KAAK,CAAC,GAAG,CAAC,CAACgE,GAAG,CAAC6E,MAAM,CAAC;IACpE,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGN,UAAU,CAACzI,KAAK,CAAC,GAAG,CAAC,CAACgE,GAAG,CAAC6E,MAAM,CAAC;;IAE9D;IACA,MAAMvC,UAAU,GAAGF,SAAS,CAACG,qBAAqB,IAAI,CAAC;IACvD,MAAMC,eAAe,GAAGJ,SAAS,CAACK,+BAA+B,IAAI,CAAC;IACtE,MAAMC,cAAc,GAAGN,SAAS,CAACO,8BAA8B,IAAI,CAAC;IACpE,MAAMC,kBAAkB,GAAGN,UAAU,GAAGE,eAAe,GAAIE,cAAc,GAAG,CAAE;IAC9E,MAAMiB,gBAAgB,GAAGf,kBAAkB,IAAI1C,IAAI,CAACgD,eAAe,IAAI,GAAG,CAAC;;IAE3E;IACA,MAAM8B,aAAa,GAAGvE,mBAAmB,CAAClB,MAAM,CAACC,EAAE,IACjDA,EAAE,CAACwE,OAAO,KAAK9D,IAAI,CAAC6D,EAAE,IACtBvE,EAAE,CAACE,oBAAoB,IACvBF,EAAE,CAACyE,kBAAkB,IACrB,IAAInI,IAAI,CAAC0D,EAAE,CAACE,oBAAoB,CAAC,CAACuF,YAAY,CAAC,CAAC,KAAK,IAAInJ,IAAI,CAACwI,UAAU,CAAC,CAACW,YAAY,CAAC,CACzF,CAAC,CAACnD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACV,IAAIlG,IAAI,CAACiG,CAAC,CAACrC,oBAAqB,CAAC,CAAC4B,OAAO,CAAC,CAAC,GAAG,IAAIxF,IAAI,CAACkG,CAAC,CAACtC,oBAAqB,CAAC,CAAC4B,OAAO,CAAC,CAC1F,CAAC;;IAED;IACA,IAAI4D,WAAW,GAAG,IAAIpJ,IAAI,CAACwI,UAAU,CAAC;IACtCY,WAAW,CAACrB,QAAQ,CAACc,SAAS,EAAEC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;;IAElD;IACA,OAAOM,WAAW,CAACpB,QAAQ,CAAC,CAAC,GAAGgB,OAAO,EAAE;MACvC,MAAMK,WAAW,GAAG,IAAIrJ,IAAI,CAACoJ,WAAW,CAAC;MACzCC,WAAW,CAACtB,QAAQ,CAACsB,WAAW,CAACrB,QAAQ,CAAC,CAAC,GAAGH,gBAAgB,CAAC;;MAE/D;MACA,IAAIwB,WAAW,CAACrB,QAAQ,CAAC,CAAC,GAAGgB,OAAO,EAAE;QACpC;QACAI,WAAW,CAACE,OAAO,CAACF,WAAW,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9CH,WAAW,CAACrB,QAAQ,CAACc,SAAS,EAAEC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAClD;MACF;;MAEA;MACA,MAAMU,WAAW,GAAGN,aAAa,CAACO,IAAI,CAACC,QAAQ,IAAI;QACjD,MAAMC,aAAa,GAAG,IAAI3J,IAAI,CAAC0J,QAAQ,CAAC9F,oBAAqB,CAAC;QAC9D,MAAMgG,WAAW,GAAG,IAAI5J,IAAI,CAAC0J,QAAQ,CAACvB,kBAAmB,CAAC;QAE1D,OACGiB,WAAW,IAAIO,aAAa,IAAIP,WAAW,GAAGQ,WAAW,IACzDP,WAAW,GAAGM,aAAa,IAAIN,WAAW,IAAIO,WAAY,IAC1DR,WAAW,IAAIO,aAAa,IAAIN,WAAW,IAAIO,WAAY;MAEhE,CAAC,CAAC;MAEF,IAAI,CAACJ,WAAW,EAAE;QAChB,OAAOJ,WAAW;MACpB;;MAEA;MACA,MAAMS,YAAY,GAAGX,aAAa,CAACY,IAAI,CAACJ,QAAQ,IAAI;QAClD,MAAMC,aAAa,GAAG,IAAI3J,IAAI,CAAC0J,QAAQ,CAAC9F,oBAAqB,CAAC;QAC9D,OAAO+F,aAAa,IAAIP,WAAW;MACrC,CAAC,CAAC;MAEF,IAAIS,YAAY,EAAE;QAChBT,WAAW,GAAG,IAAIpJ,IAAI,CAAC6J,YAAY,CAAC1B,kBAAmB,CAAC;MAC1D,CAAC,MAAM;QACL;QACA,IAAIiB,WAAW,CAACpB,QAAQ,CAAC,CAAC,GAAGH,gBAAgB,IAAImB,OAAO,EAAE;UACxD,OAAOI,WAAW;QACpB,CAAC,MAAM;UACL;UACAA,WAAW,CAACE,OAAO,CAACF,WAAW,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;UAC9CH,WAAW,CAACrB,QAAQ,CAACc,SAAS,EAAEC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QACpD;MACF;IACF;IAEA,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMiB,cAAc,GAAI3F,IAAoB,IAAK;IAC/ClD,wBAAwB,CAACkD,IAAI,CAAC;IAC9BhD,oBAAoB,CAAC;MACnB6F,eAAe,EAAE7C,IAAI,CAAC6C,eAAe,IAAI,CAAC;MAC1CC,cAAc,EAAE9C,IAAI,CAAC8C,cAAc,IAAI,CAAC;MACxCxH,aAAa,EAAE0E,IAAI,CAAC1E,aAAa,IAAI,CAAC;MACtC0H,eAAe,EAAEhD,IAAI,CAACgD,eAAe,IAAI,GAAG;MAC5CsB,UAAU,EAAEtE,IAAI,CAACsE,UAAU,IAAI,OAAO;MACtCE,QAAQ,EAAExE,IAAI,CAACwE,QAAQ,IAAI,OAAO;MAClCoB,oBAAoB,EAAE5F,IAAI,CAAC4F,oBAAoB,IAAI,EAAE;MACrDC,iBAAiB,EAAE7F,IAAI,CAAC6F,iBAAiB,IAAI,OAAO;MACpDC,cAAc,EAAE9F,IAAI,CAAC8F,cAAc,IAAI,EAAE;MACzC3F,qBAAqB,EAAE,IAAI;MAC3B4F,yBAAyB,EAAE,EAAE;MAC7BhD,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFnG,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMoJ,gBAAgB,GAAG,MAAAA,CAAOC,MAAc,EAAEC,MAAkB,KAAK;IACrE,IAAI;MACF,MAAMvI,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChDU,OAAO,CAACoB,GAAG,CAAC,2BAA2B,EAAEsG,MAAM,EAAE,cAAc,EAAEC,MAAM,CAAC;MAExE,MAAMpI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,yBAAyB8I,MAAM,SAAS,EAAE;QAC/EpH,MAAM,EAAE,KAAK;QACbb,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB,CAAC;QACDmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACkH,MAAM;MAC7B,CAAC,CAAC;MAEF3H,OAAO,CAACoB,GAAG,CAAC,kBAAkB,EAAE7B,QAAQ,CAACyB,MAAM,CAAC;MAEhD,IAAI,CAACzB,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMkI,SAAS,GAAG,MAAMrI,QAAQ,CAACsI,IAAI,CAAC,CAAC;QACvC7H,OAAO,CAACpC,KAAK,CAAC,iBAAiB,EAAEgK,SAAS,CAAC;QAC3C,MAAM,IAAIjI,KAAK,CAAC,wCAAwCJ,QAAQ,CAACyB,MAAM,IAAI4G,SAAS,EAAE,CAAC;MACzF;MAEA,MAAME,MAAM,GAAG,MAAMvI,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpCG,OAAO,CAACoB,GAAG,CAAC,oBAAoB,EAAE0G,MAAM,CAAC;;MAEzC;MACA,MAAM7H,oBAAoB,CAAC,CAAC;MAC5B5B,sBAAsB,CAAC,KAAK,CAAC;MAC7BE,wBAAwB,CAAC,IAAI,CAAC;MAC9BE,oBAAoB,CAAC,IAAI,CAAC;MAC1BZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChBE,iBAAiB,CAAC,+CAA+CO,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEoD,SAAS,EAAE,CAAC;;MAEpG;MACAiE,UAAU,CAAC,MAAM5H,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOgC,GAAG,EAAE;MACZC,OAAO,CAACpC,KAAK,CAAC,6BAA6B,EAAEmC,GAAG,CAAC;MACjDlC,QAAQ,CAACkC,GAAG,YAAYJ,KAAK,GAAGI,GAAG,CAAC6F,OAAO,GAAG,qCAAqC,CAAC;IACtF;EACF,CAAC;;EAED;EACA,MAAMmC,eAAe,GAAIpE,SAAoB,IAAK;IAChD1F,mBAAmB,CAAC0F,SAAS,CAAC;EAChC,CAAC;EAED,MAAMqE,cAAc,GAAIC,CAAkB,IAAK;IAC7CA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAOF,CAAkB,EAAEG,YAAoB,EAAEC,UAAkB,KAAK;IACzFJ,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAClK,gBAAgB,EAAE;IAEvB,IAAI;MACF,MAAMsK,cAAc,GAAG,IAAIjL,IAAI,CAAC,GAAGF,YAAY,IAAIkL,UAAU,EAAE,CAAC;MAChE,MAAME,WAAW,GAAG,IAAIlL,IAAI,CAACiL,cAAc,CAAC;;MAE5C;MACA,MAAMzE,UAAU,GAAG7F,gBAAgB,CAAC8F,qBAAqB,IAAI,CAAC;MAC9D,MAAMC,eAAe,GAAG/F,gBAAgB,CAACgG,+BAA+B,IAAI,CAAC;MAC7E,MAAMC,cAAc,GAAGjG,gBAAgB,CAACkG,8BAA8B,IAAI,CAAC;MAC3E,MAAMC,kBAAkB,GAAGN,UAAU,GAAGE,eAAe,GAAIE,cAAc,GAAG,CAAE;MAE9EsE,WAAW,CAACnD,QAAQ,CAACmD,WAAW,CAAClD,QAAQ,CAAC,CAAC,GAAGlB,kBAAkB,CAAC;MAEjE,MAAMhE,uBAAuB,CAACnC,gBAAgB,CAACsH,EAAE,EAAE;QACjDC,OAAO,EAAE6C,YAAY;QACrBnH,oBAAoB,EAAEqH,cAAc,CAAChL,WAAW,CAAC,CAAC;QAClDkI,kBAAkB,EAAE+C,WAAW,CAACjL,WAAW,CAAC;MAC9C,CAAC,CAAC;;MAEF;MACA,MAAM6B,eAAe,CAAC,CAAC;MACvBlB,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAO8B,GAAG,EAAE;MACZC,OAAO,CAACpC,KAAK,CAAC,aAAa,EAAEmC,GAAG,CAAC;MACjClC,QAAQ,CAAC,+BAA+B,CAAC;IAC3C;EACF,CAAC;;EAED;EACArC,SAAS,CAAC,MAAM;IACd,MAAMgN,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B7K,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM8K,OAAO,CAACC,GAAG,CAAC,CAACvJ,eAAe,CAAC,CAAC,EAAEc,oBAAoB,CAAC,CAAC,CAAC,CAAC;MAC9DtC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAED6K,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACrJ,eAAe,EAAEc,oBAAoB,CAAC,CAAC;;EAE3C;EACAzE,SAAS,CAAC,MAAM;IACd,MAAMmN,WAAW,GAAGpM,iBAAiB,CAAC,MAAM;MAC1C4C,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,OAAOwJ,WAAW;EACpB,CAAC,EAAE,CAACpM,iBAAiB,EAAE4C,eAAe,CAAC,CAAC;;EAExC;EACA,MAAMyJ,kBAAkB,GAAG3L,YAAY,KAAK,KAAK,GAC7CT,UAAU,GACVA,UAAU,CAACsE,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACW,SAAS,KAAKzE,YAAY,CAAC;;EAE1D;EACA,MAAM4L,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,KAAqB,GAAG,EAAE;IAEhCF,kBAAkB,CAACG,OAAO,CAAC,CAACpF,SAAS,EAAEqF,KAAK,KAAK;MAC/C,IAAIrF,SAAS,CAAC1C,oBAAoB,EAAE;QAClC,MAAMgI,SAAS,GAAG,IAAI5L,IAAI,CAACsG,SAAS,CAAC1C,oBAAoB,CAAC;QAC1D,MAAMkE,OAAO,GAAGxB,SAAS,CAAC6B,kBAAkB,GAAG,IAAInI,IAAI,CAACsG,SAAS,CAAC6B,kBAAkB,CAAC,GAAGyD,SAAS;QACjG,MAAMC,QAAQ,GAAG,CAAC/D,OAAO,CAACtC,OAAO,CAAC,CAAC,GAAGoG,SAAS,CAACpG,OAAO,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;;QAE/EiG,KAAK,CAACpD,IAAI,CAAC;UACT/B,SAAS;UACTsF,SAAS,EAAEA,SAAS,CAACE,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAC/CjE,OAAO,EAAEA,OAAO,CAACgE,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAC3CF,QAAQ;UACRG,QAAQ,EAAEL;QACZ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAOF,KAAK;EACd,CAAC;EAED,IAAIpL,OAAO,EAAE;IACX,oBACEvB,OAAA;MAAKmN,SAAS,EAAC,8DAA8D;MAAAC,QAAA,eAC3EpN,OAAA;QAAKmN,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpN,OAAA,CAACP,aAAa;UAAC0N,SAAS,EAAC;QAAqD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjFxN,OAAA;UAAGmN,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACExN,OAAA;IAAKmN,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBpN,OAAA;MAAKmN,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDpN,OAAA;QAAAoN,QAAA,gBACEpN,OAAA;UAAImN,SAAS,EAAC,sCAAsC;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7ExN,OAAA;UAAGmN,SAAS,EAAC,gCAAgC;UAAAC,QAAA,EAAC;QAE9C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENxN,OAAA;QAAKmN,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC1CpN,OAAA;UACEyN,OAAO,EAAEA,CAAA,KAAMzL,kBAAkB,CAAC,IAAI,CAAE;UACxCmL,SAAS,EAAC,sOAAsO;UAAAC,QAAA,gBAEhPpN,OAAA,CAACR,OAAO;YAAC2N,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,UAEtC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAERrN,IAAI,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAACqE,QAAQ,CAACrE,IAAI,CAACsE,IAAI,CAAC,iBACjDzE,OAAA;UAAKmN,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC1CpN,OAAA;YACEyN,OAAO,EAAElJ,eAAgB;YACzBmJ,QAAQ,EAAEnL,mBAAoB;YAC9B4K,SAAS,EAAC,wPAAwP;YAAAC,QAAA,GAEjQ7K,mBAAmB,gBAClBvC,OAAA,CAACP,aAAa;cAAC0N,SAAS,EAAC;YAA2B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEvDxN,OAAA,CAACT,YAAY;cAAC4N,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACzC,EACAjL,mBAAmB,GAAG,eAAe,GAAG,eAAe;UAAA;YAAA8K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACTxN,OAAA;YAAKmN,SAAS,EAAC,2BAA2B;YAAAC,QAAA,gBACxCpN,OAAA;cAAMmN,SAAS,EAAC,wGAAwG;cAAAC,QAAA,EAAC;YAEzH;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,2BAET;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL/L,KAAK,iBACJzB,OAAA;MAAKmN,SAAS,EAAC,gDAAgD;MAAAC,QAAA,eAC7DpN,OAAA;QAAKmN,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBpN,OAAA,CAACN,uBAAuB;UAACyN,SAAS,EAAC;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5DxN,OAAA;UAAKmN,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBpN,OAAA;YAAImN,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3DxN,OAAA;YAAGmN,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAE3L;UAAK;YAAA4L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA7L,cAAc,iBACb3B,OAAA;MAAKmN,SAAS,EAAC,oDAAoD;MAAAC,QAAA,eACjEpN,OAAA;QAAKmN,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBpN,OAAA,CAACL,eAAe;UAACwN,SAAS,EAAC;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtDxN,OAAA;UAAKmN,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBpN,OAAA;YAAImN,SAAS,EAAC,oCAAoC;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/DxN,OAAA;YAAGmN,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAEzL;UAAc;YAAA0L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGDxN,OAAA;MAAKmN,SAAS,EAAC,gCAAgC;MAAAC,QAAA,eAC7CpN,OAAA;QAAKmN,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBAEpDpN,OAAA;UAAAoN,QAAA,gBACEpN,OAAA;YAAOmN,SAAS,EAAC,kDAAkD;YAAAC,QAAA,EAAC;UAEpE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxN,OAAA;YACE2N,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE5M,YAAa;YACpB6M,QAAQ,EAAG/B,CAAC,IAAK7K,eAAe,CAAC6K,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;YACjDT,SAAS,EAAC;UAAgH;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3H,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGNxN,OAAA;UAAAoN,QAAA,gBACEpN,OAAA;YAAOmN,SAAS,EAAC,kDAAkD;YAAAC,QAAA,EAAC;UAEpE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxN,OAAA;YACE4N,KAAK,EAAE9M,YAAa;YACpB+M,QAAQ,EAAG/B,CAAC,IAAK/K,eAAe,CAAC+K,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;YACjDT,SAAS,EAAC,gHAAgH;YAAAC,QAAA,gBAE1HpN,OAAA;cAAQ4N,KAAK,EAAC,KAAK;cAAAR,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACrCjN,eAAe,CAAC6E,GAAG,CAACE,IAAI,iBACvBtF,OAAA;cAAsB4N,KAAK,EAAEtI,IAAI,CAACC,SAAU;cAAA6H,QAAA,GACzC9H,IAAI,CAACC,SAAS,EACdD,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAC,MAAM,CAAC,GAAG,gBAAgB,GAAG,EAAE;YAAA,GAF3Dc,IAAI,CAAC6D,EAAE;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGZ,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGNxN,OAAA;UAAAoN,QAAA,gBACEpN,OAAA;YAAOmN,SAAS,EAAC,kDAAkD;YAAAC,QAAA,EAAC;UAEpE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxN,OAAA;YACE4N,KAAK,EAAEvM,QAAS;YAChBwM,QAAQ,EAAG/B,CAAC,IAAKxK,WAAW,CAACwK,CAAC,CAACgC,MAAM,CAACF,KAAY,CAAE;YACpDT,SAAS,EAAC,gHAAgH;YAAAC,QAAA,gBAE1HpN,OAAA;cAAQ4N,KAAK,EAAC,UAAU;cAAAR,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1CxN,OAAA;cAAQ4N,KAAK,EAAC,UAAU;cAAAR,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1CxN,OAAA;cAAQ4N,KAAK,EAAC,MAAM;cAAAR,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGNxN,OAAA;UAAAoN,QAAA,gBACEpN,OAAA;YAAOmN,SAAS,EAAC,kDAAkD;YAAAC,QAAA,EAAC;UAEpE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxN,OAAA;YAAKmN,SAAS,EAAC,2BAA2B;YAAAC,QAAA,GACvCX,kBAAkB,CAACvH,MAAM,EAAC,cAC3B,eAAAlF,OAAA;cAAAqN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACLf,kBAAkB,CAAC9H,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACE,oBAAoB,CAAC,CAACI,MAAM,EAAC,YACnE;UAAA;YAAAmI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLnM,QAAQ,KAAK,UAAU,iBACtBrB,OAAA;MAAKmN,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBACzDpN,OAAA;QAAKmN,SAAS,EAAC,oCAAoC;QAAAC,QAAA,eACjDpN,OAAA;UAAImN,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eAENxN,OAAA;QAAKmN,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BpN,OAAA;UAAKmN,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAEzBpN,OAAA;YAAKmN,SAAS,EAAC,0CAA0C;YAACY,KAAK,EAAE;cAAEC,mBAAmB,EAAE;YAAwB,CAAE;YAAAZ,QAAA,gBAChHpN,OAAA;cAAKmN,SAAS,EAAC,2CAA2C;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACpES,KAAK,CAACC,IAAI,CAAC;cAAEhJ,MAAM,EAAE;YAAG,CAAC,EAAE,CAACiJ,CAAC,EAAEC,CAAC,kBAC/BpO,OAAA;cAAamN,SAAS,EAAC,gFAAgF;cAAAC,QAAA,GACpG,CAAC,GAAGgB,CAAC,EAAC,KACT;YAAA,GAFUA,CAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EAGLjN,eAAe,CAAC6E,GAAG,CAACE,IAAI,iBACvBtF,OAAA;YAAmBmN,SAAS,EAAC,+BAA+B;YAACY,KAAK,EAAE;cAAEC,mBAAmB,EAAE;YAAwB,CAAE;YAAAZ,QAAA,gBACnHpN,OAAA;cAAKmN,SAAS,EAAC,sDAAsD;cAAAC,QAAA,eACnEpN,OAAA;gBAAKmN,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,gBAChDpN,OAAA;kBAAKmN,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,gBAC1CpN,OAAA;oBAAAoN,QAAA,EAAO9H,IAAI,CAACC;kBAAS;oBAAA8H,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,EAC5BlI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAAChB,QAAQ,CAAC,MAAM,CAAC,iBAC5CxE,OAAA;oBAAMmN,SAAS,EAAC,mGAAmG;oBAAAC,QAAA,EAAC;kBAEpH;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CACP;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,EACLrN,IAAI,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAACqE,QAAQ,CAACrE,IAAI,CAACsE,IAAI,CAAC,iBACjDzE,OAAA;kBACEyN,OAAO,EAAEA,CAAA,KAAMxC,cAAc,CAAC3F,IAAI,CAAE;kBACpC6H,SAAS,EAAC,mIAAmI;kBAC7IkB,KAAK,EAAC,yBAAyB;kBAAAjB,QAAA,eAE/BpN,OAAA,CAACR,OAAO;oBAAC2N,SAAS,EAAC;kBAAS;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CACT;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EAELS,KAAK,CAACC,IAAI,CAAC;cAAEhJ,MAAM,EAAE;YAAG,CAAC,EAAE,CAACiJ,CAAC,EAAEC,CAAC,KAAK;cACpC,MAAME,QAAQ,GAAG,GAAG,CAAC,GAAGF,CAAC,KAAK;cAC9B,MAAMG,kBAAkB,GAAG7B,qBAAqB,CAAC,CAAC,CAAC1B,IAAI,CAACwD,IAAI,IAC1DA,IAAI,CAAChH,SAAS,CAACjC,SAAS,KAAKD,IAAI,CAACC,SAAS,IAC3CiJ,IAAI,CAAC1B,SAAS,KAAKwB,QACrB,CAAC;cAED,oBACEtO,OAAA;gBAEEmN,SAAS,EAAC,oDAAoD;gBAC9DsB,UAAU,EAAE5C,cAAe;gBAC3B6C,MAAM,EAAG5C,CAAC,IAAKE,UAAU,CAACF,CAAC,EAAExG,IAAI,CAAC6D,EAAE,EAAEmF,QAAQ,CAAE;gBAAAlB,QAAA,EAE/CmB,kBAAkB,gBACjBvO,OAAA;kBAAKmN,SAAS,EAAC,gEAAgE;kBAAAC,QAAA,gBAC7EpN,OAAA;oBAAKmN,SAAS,EAAC,+BAA+B;oBAAAC,QAAA,EAC3CmB,kBAAkB,CAAC/G,SAAS,CAACmH;kBAAiB;oBAAAtB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5C,CAAC,eACNxN,OAAA;oBAAKmN,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,GAC/BmB,kBAAkB,CAACxB,QAAQ,EAAC,GAC/B;kBAAA;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,gBAENxN,OAAA;kBAAKmN,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAC;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cACtD,GAhBIY,CAAC;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAiBH,CAAC;YAEV,CAAC,CAAC;UAAA,GAnDMlI,IAAI,CAAC6D,EAAE;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAoDZ,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAnM,QAAQ,KAAK,MAAM,iBAClBrB,OAAA;MAAKmN,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCpN,OAAA;QAAKmN,SAAS,EAAC,oCAAoC;QAAAC,QAAA,eACjDpN,OAAA;UAAImN,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eAENxN,OAAA;QAAKmN,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BpN,OAAA;UAAOmN,SAAS,EAAC,qCAAqC;UAAAC,QAAA,gBACpDpN,OAAA;YAAOmN,SAAS,EAAC,YAAY;YAAAC,QAAA,eAC3BpN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,oFAAoF;gBAAAC,QAAA,EAAC;cAEnG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRxN,OAAA;YAAOmN,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EACjDX,kBAAkB,CAACrH,GAAG,CAAEoC,SAAS,iBAChCxH,OAAA;cAEE4O,SAAS,EAAEpH,SAAS,CAACzC,cAAe;cACpC8J,WAAW,EAAEA,CAAA,KAAMrH,SAAS,CAACzC,cAAc,IAAI6G,eAAe,CAACpE,SAAS,CAAE;cAC1E2F,SAAS,EAAE,oBAAoB3F,SAAS,CAACzC,cAAc,GAAG,aAAa,GAAG,+BAA+B,EAAG;cAAAqI,QAAA,gBAE5GpN,OAAA;gBAAImN,SAAS,EAAC,mEAAmE;gBAAAC,QAAA,EAC9E5F,SAAS,CAACmH;cAAiB;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,uDAAuD;gBAAAC,QAAA,EAClE5F,SAAS,CAACsH;cAAa;gBAAAzB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,uDAAuD;gBAAAC,QAAA,EAClE5F,SAAS,CAACuH;cAAe;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxB,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,eACzCpN,OAAA;kBAAMmN,SAAS,EAAE,4DACf3F,SAAS,CAAC3C,MAAM,KAAK,WAAW,GAAG,6BAA6B,GAChE2C,SAAS,CAAC3C,MAAM,KAAK,WAAW,GAAG,yBAAyB,GAC5D,+BAA+B,EAC9B;kBAAAuI,QAAA,EACA5F,SAAS,CAAC3C;gBAAM;kBAAAwI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,eACzCpN,OAAA;kBAAMmN,SAAS,EAAE,4DACf3F,SAAS,CAACzC,cAAc,GAAG,6BAA6B,GAAG,yBAAyB,EACnF;kBAAAqI,QAAA,EACA5F,SAAS,CAACzC,cAAc,GAAG,KAAK,GAAG;gBAAI;kBAAAsI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,uDAAuD;gBAAAC,QAAA,EAClE5F,SAAS,CAAClB,SAAS,GAAG,IAAIpF,IAAI,CAACsG,SAAS,CAAClB,SAAS,CAAC,CAAC0I,kBAAkB,CAAC,CAAC,GAAG;cAAK;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/E,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,uDAAuD;gBAAAC,QAAA,GAClE5F,SAAS,CAACK,+BAA+B,IAAI,CAAC,EAAC,GAClD;cAAA;gBAAAwF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,uDAAuD;gBAAAC,QAAA,EAClE5F,SAAS,CAAC1C,oBAAoB,gBAC7B9E,OAAA;kBAAKmN,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBAChCpN,OAAA,CAACL,eAAe;oBAACwN,SAAS,EAAC;kBAA6B;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,EAC1D,IAAItM,IAAI,CAACsG,SAAS,CAAC1C,oBAAoB,CAAC,CAACkK,kBAAkB,CAAC,CAAC;gBAAA;kBAAA3B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3D,CAAC,gBAENxN,OAAA;kBAAKmN,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBAChCpN,OAAA,CAACJ,WAAW;oBAACuN,SAAS,EAAC;kBAA2B;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,iBAEvD;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACLxN,OAAA;gBAAImN,SAAS,EAAC,iDAAiD;gBAAAC,QAAA,eAC7DpN,OAAA;kBACEmN,SAAS,EAAC,2CAA2C;kBACrDM,OAAO,EAAEA,CAAA,KAAM;oBACb;oBACA5J,OAAO,CAACoB,GAAG,CAAC,4BAA4B,EAAEuC,SAAS,CAACmH,iBAAiB,CAAC;kBACxE,CAAE;kBAAAvB,QAAA,EAED5F,SAAS,CAACzC,cAAc,GAAG,gBAAgB,GAAG;gBAAY;kBAAAsI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GA3DAhG,SAAS,CAAC2B,EAAE;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA4Df,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAzL,eAAe,iBACd/B,OAAA;MAAKmN,SAAS,EAAC,4EAA4E;MAAAC,QAAA,eACzFpN,OAAA;QAAKmN,SAAS,EAAC,uEAAuE;QAAAC,QAAA,eACpFpN,OAAA;UAAKmN,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBpN,OAAA;YAAImN,SAAS,EAAC,4CAA4C;YAAAC,QAAA,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEtFxN,OAAA;YAAKmN,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEnN,cAAc,CAACE,aAAc;gBACpCkN,QAAQ,EAAG/B,CAAC,IAAKpL,iBAAiB,CAACuO,IAAI,KAAK;kBAAE,GAAGA,IAAI;kBAAEtO,aAAa,EAAEuO,QAAQ,CAACpD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBACnGT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEnN,cAAc,CAACG,aAAc;gBACpCiN,QAAQ,EAAG/B,CAAC,IAAKpL,iBAAiB,CAACuO,IAAI,KAAK;kBAAE,GAAGA,IAAI;kBAAErO,aAAa,EAAEsO,QAAQ,CAACpD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBACnGT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbwB,IAAI,EAAC,KAAK;gBACVvB,KAAK,EAAEnN,cAAc,CAACI,iBAAkB;gBACxCgN,QAAQ,EAAG/B,CAAC,IAAKpL,iBAAiB,CAACuO,IAAI,KAAK;kBAAE,GAAGA,IAAI;kBAAEpO,iBAAiB,EAAEuO,UAAU,CAACtD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBACzGT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENxN,OAAA;YAAKmN,SAAS,EAAC,iCAAiC;YAAAC,QAAA,gBAC9CpN,OAAA;cACEyN,OAAO,EAAEA,CAAA,KAAMzL,kBAAkB,CAAC,KAAK,CAAE;cACzCmL,SAAS,EAAC,oGAAoG;cAAAC,QAAA,EAC/G;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxN,OAAA;cACEyN,OAAO,EAAEA,CAAA,KAAM;gBACb;gBACAzL,kBAAkB,CAAC,KAAK,CAAC;cAC3B,CAAE;cACFmL,SAAS,EAAC,+HAA+H;cAAAC,QAAA,EAC1I;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAvL,mBAAmB,IAAIE,qBAAqB,IAAIE,iBAAiB,iBAChErC,OAAA;MACEmN,SAAS,EAAC,4EAA4E;MACtFM,OAAO,EAAEA,CAAA,KAAM;QACbvL,sBAAsB,CAAC,KAAK,CAAC;QAC7BE,wBAAwB,CAAC,IAAI,CAAC;QAC9BE,oBAAoB,CAAC,IAAI,CAAC;MAC5B,CAAE;MAAA8K,QAAA,eAEFpN,OAAA;QACEmN,SAAS,EAAC,uEAAuE;QACjFM,OAAO,EAAG3B,CAAC,IAAKA,CAAC,CAACuD,eAAe,CAAC,CAAE;QAAAjC,QAAA,eAEpCpN,OAAA;UAAKmN,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBpN,OAAA;YAAKmN,SAAS,EAAC,wCAAwC;YAAAC,QAAA,gBACrDpN,OAAA;cAAImN,SAAS,EAAC,uCAAuC;cAAAC,QAAA,GAAC,YAC1C,EAACjL,qBAAqB,CAACoD,SAAS;YAAA;cAAA8H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACLxN,OAAA;cACEyN,OAAO,EAAEA,CAAA,KAAM;gBACbvL,sBAAsB,CAAC,KAAK,CAAC;gBAC7BE,wBAAwB,CAAC,IAAI,CAAC;gBAC9BE,oBAAoB,CAAC,IAAI,CAAC;cAC5B,CAAE;cACF6K,SAAS,EAAC,mCAAmC;cAAAC,QAAA,eAE7CpN,OAAA;gBAAKmN,SAAS,EAAC,SAAS;gBAACmC,IAAI,EAAC,MAAM;gBAACC,OAAO,EAAC,WAAW;gBAACC,MAAM,EAAC,cAAc;gBAAApC,QAAA,eAC5EpN,OAAA;kBAAMyP,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC,OAAO;kBAACC,WAAW,EAAE,CAAE;kBAACC,CAAC,EAAC;gBAAsB;kBAAAvC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3F;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENxN,OAAA;YAAKmN,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEvL,iBAAiB,CAAC8F,eAAgB;gBACzC0F,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAE9G,eAAe,EAAE+G,QAAQ,CAACpD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBACzGT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEvL,iBAAiB,CAAC+F,cAAe;gBACxCyF,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAE7G,cAAc,EAAE8G,QAAQ,CAACpD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBACxGT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEvL,iBAAiB,CAACzB,aAAc;gBACvCiN,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAErO,aAAa,EAAEsO,QAAQ,CAACpD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBACvGT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbwB,IAAI,EAAC,KAAK;gBACVvB,KAAK,EAAEvL,iBAAiB,CAACiG,eAAgB;gBACzCuF,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAE3G,eAAe,EAAE8G,UAAU,CAACtD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBAC3GT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAEvL,iBAAiB,CAACuH,UAAW;gBACpCiE,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAErF,UAAU,EAAEkC,CAAC,CAACgC,MAAM,CAACF;gBAAM,CAAC,CAAC,CAAE;gBAC1FT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAEvL,iBAAiB,CAACyH,QAAS;gBAClC+D,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAEnF,QAAQ,EAAEgC,CAAC,CAACgC,MAAM,CAACF;gBAAM,CAAC,CAAC,CAAE;gBACxFT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEvL,iBAAiB,CAAC6I,oBAAqB;gBAC9C2C,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAE/D,oBAAoB,EAAEgE,QAAQ,CAACpD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBAC9GT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAEvL,iBAAiB,CAAC8I,iBAAkB;gBAC3C0C,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAE9D,iBAAiB,EAAEW,CAAC,CAACgC,MAAM,CAACF;gBAAM,CAAC,CAAC,CAAE;gBACjGT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENxN,OAAA;cAAAoN,QAAA,gBACEpN,OAAA;gBAAOmN,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAAC;cAEpE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRxN,OAAA;gBACE2N,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEvL,iBAAiB,CAAC+I,cAAe;gBACxCyC,QAAQ,EAAG/B,CAAC,IAAKxJ,oBAAoB,CAAC2M,IAAI,KAAK;kBAAE,GAAGA,IAAK;kBAAE7D,cAAc,EAAE8D,QAAQ,CAACpD,CAAC,CAACgC,MAAM,CAACF,KAAK;gBAAE,CAAC,CAAC,CAAE;gBACxGT,SAAS,EAAC;cAAgH;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENxN,OAAA;YAAKmN,SAAS,EAAC,iCAAiC;YAAAC,QAAA,gBAC9CpN,OAAA;cACEyN,OAAO,EAAEA,CAAA,KAAM;gBACbvL,sBAAsB,CAAC,KAAK,CAAC;gBAC7BE,wBAAwB,CAAC,IAAI,CAAC;gBAC9BE,oBAAoB,CAAC,IAAI,CAAC;cAC5B,CAAE;cACF6K,SAAS,EAAC,oGAAoG;cAAAC,QAAA,EAC/G;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxN,OAAA;cACEyN,OAAO,EAAEA,CAAA,KAAMnC,gBAAgB,CAACnJ,qBAAqB,CAACgH,EAAE,EAAE9G,iBAAiB,CAAE;cAC7E8K,SAAS,EAAC,+HAA+H;cAAAC,QAAA,EAC1I;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtN,EAAA,CA/kCID,QAAkB;EAAA,QACLJ,OAAO,EACMC,SAAS;AAAA;AAAA+P,EAAA,GAFnC5P,QAAkB;AAilCxB,eAAeA,QAAQ;AAAC,IAAA4P,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}