{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const baseUrl=process.env.NODE_ENV==='production'?window.location.origin:'https://smtdatabase01-production.up.railway.app';// Check if user is already logged in on app start\nuseEffect(()=>{const token=localStorage.getItem('auth_token');if(token){// Verify token and get user info\nfetchCurrentUser(token);}else{setIsLoading(false);}},[]);const fetchCurrentUser=async token=>{try{const response=await fetch(`${baseUrl}/api/auth/me`,{headers:{'Authorization':`Bearer ${token}`,'Content-Type':'application/json'}});if(response.ok){const data=await response.json();setUser(data.user);}else{// Token is invalid, remove it\nlocalStorage.removeItem('auth_token');}}catch(error){console.error('Error fetching current user:',error);localStorage.removeItem('auth_token');}finally{setIsLoading(false);}};const login=async(username,password)=>{try{setIsLoading(true);const response=await fetch(`${baseUrl}/api/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});if(response.ok){const data=await response.json();localStorage.setItem('auth_token',data.token);setUser(data.user);return true;}else{const errorData=await response.json();console.error('Login failed:',errorData.error);return false;}}catch(error){console.error('Login error:',error);return false;}finally{setIsLoading(false);}};const logout=()=>{localStorage.removeItem('auth_token');setUser(null);};const hasRole=roles=>{if(!user)return false;const roleArray=Array.isArray(roles)?roles:[roles];return roleArray.includes(user.role);};const value={user,login,logout,isAuthenticated:!!user,isLoading,hasRole};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","baseUrl","process","env","NODE_ENV","window","location","origin","token","localStorage","getItem","fetchCurrentUser","response","fetch","headers","ok","data","json","removeItem","error","console","login","username","password","method","body","JSON","stringify","setItem","errorData","logout","hasRole","roles","roleArray","Array","isArray","includes","role","value","isAuthenticated","Provider","useAuth","context","Error"],"sources":["/Users/mattspacegrey/Documents/GitHub/SMT_DATABASE_01/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  role: 'admin' | 'scheduler' | 'supervisor' | 'floor_view' | 'viewer';\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (username: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  hasRole: (roles: string | string[]) => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n      const baseUrl = process.env.NODE_ENV === 'production' \n      ? window.location.origin \n      : 'https://smtdatabase01-production.up.railway.app';\n\n  // Check if user is already logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      // Verify token and get user info\n      fetchCurrentUser(token);\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const fetchCurrentUser = async (token: string) => {\n    try {\n      const response = await fetch(`${baseUrl}/api/auth/me`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      } else {\n        // Token is invalid, remove it\n        localStorage.removeItem('auth_token');\n      }\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      localStorage.removeItem('auth_token');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${baseUrl}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('auth_token', data.token);\n        setUser(data.user);\n        return true;\n      } else {\n        const errorData = await response.json();\n        console.error('Login failed:', errorData.error);\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('auth_token');\n    setUser(null);\n  };\n\n  const hasRole = (roles: string | string[]): boolean => {\n    if (!user) return false;\n    \n    const roleArray = Array.isArray(roles) ? roles : [roles];\n    return roleArray.includes(user.role);\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    isLoading,\n    hasRole,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}